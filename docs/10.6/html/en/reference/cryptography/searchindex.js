Search.setIndex({"alltitles": {"(Ring-)LWE oracle generators": [[15, null]], "Abstract base class for generators of polynomial systems": [[16, null]], "Blum-Goldwasser Probabilistic Encryption": [[19, null]], "Boolean functions": [[5, null]], "Ciphers": [[6, null]], "Classical Ciphers": [[8, null]], "Classical Cryptosystems": [[7, null]], "Cryptography": [[0, null]], "Cryptosystems": [[9, null]], "DES": [[1, null]], "Diffie-Hellman Key Exchange Scheme": [[11, null]], "Hard Lattice Generator": [[13, null]], "Index of key exchange schemes": [[10, null]], "Indices and Tables": [[0, "indices-and-tables"]], "Key Exchange Schemes": [[12, null]], "Linear feedback shift register (LFSR) sequence commands": [[14, null]], "Mini-AES": [[2, null]], "PRESENT": [[3, null]], "Rijndael-GF": [[17, null]], "S-Boxes and Their Algebraic Representations": [[20, null]], "S-Boxes used in cryptographic schemes": [[21, null]], "Simplified DES": [[4, null]], "Small Scale Variants of the AES (SR) Polynomial System Generator": [[18, null]], "Stream Ciphers": [[23, null]], "Stream Cryptosystems": [[22, null]], "Utility Functions for Cryptography": [[24, null]]}, "docnames": ["index", "sage/crypto/block_cipher/des", "sage/crypto/block_cipher/miniaes", "sage/crypto/block_cipher/present", "sage/crypto/block_cipher/sdes", "sage/crypto/boolean_function", "sage/crypto/cipher", "sage/crypto/classical", "sage/crypto/classical_cipher", "sage/crypto/cryptosystem", "sage/crypto/key_exchange/catalog", "sage/crypto/key_exchange/diffie_hellman", "sage/crypto/key_exchange/key_exchange_scheme", "sage/crypto/lattice", "sage/crypto/lfsr", "sage/crypto/lwe", "sage/crypto/mq/mpolynomialsystemgenerator", "sage/crypto/mq/rijndael_gf", "sage/crypto/mq/sr", "sage/crypto/public_key/blum_goldwasser", "sage/crypto/sbox", "sage/crypto/sboxes", "sage/crypto/stream", "sage/crypto/stream_cipher", "sage/crypto/util"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2}, "filenames": ["index.rst", "sage/crypto/block_cipher/des.rst", "sage/crypto/block_cipher/miniaes.rst", "sage/crypto/block_cipher/present.rst", "sage/crypto/block_cipher/sdes.rst", "sage/crypto/boolean_function.rst", "sage/crypto/cipher.rst", "sage/crypto/classical.rst", "sage/crypto/classical_cipher.rst", "sage/crypto/cryptosystem.rst", "sage/crypto/key_exchange/catalog.rst", "sage/crypto/key_exchange/diffie_hellman.rst", "sage/crypto/key_exchange/key_exchange_scheme.rst", "sage/crypto/lattice.rst", "sage/crypto/lfsr.rst", "sage/crypto/lwe.rst", "sage/crypto/mq/mpolynomialsystemgenerator.rst", "sage/crypto/mq/rijndael_gf.rst", "sage/crypto/mq/sr.rst", "sage/crypto/public_key/blum_goldwasser.rst", "sage/crypto/sbox.rst", "sage/crypto/sboxes.rst", "sage/crypto/stream.rst", "sage/crypto/stream_cipher.rst", "sage/crypto/util.rst"], "indexentries": {"__call__() (sage.crypto.block_cipher.des.des method)": [[1, "sage.crypto.block_cipher.des.DES.__call__", false]], "__call__() (sage.crypto.block_cipher.des.des_ks method)": [[1, "sage.crypto.block_cipher.des.DES_KS.__call__", false]], "__call__() (sage.crypto.block_cipher.present.present method)": [[3, "sage.crypto.block_cipher.present.PRESENT.__call__", false]], "__call__() (sage.crypto.block_cipher.present.present_ks method)": [[3, "sage.crypto.block_cipher.present.PRESENT_KS.__call__", false]], "__call__() (sage.crypto.lwe.lwe method)": [[15, "sage.crypto.lwe.LWE.__call__", false]], "__call__() (sage.crypto.lwe.ringlwe method)": [[15, "sage.crypto.lwe.RingLWE.__call__", false]], "__call__() (sage.crypto.lwe.ringlweconverter method)": [[15, "sage.crypto.lwe.RingLWEConverter.__call__", false]], "__call__() (sage.crypto.lwe.uniformpolynomialsampler method)": [[15, "sage.crypto.lwe.UniformPolynomialSampler.__call__", false]], "__call__() (sage.crypto.lwe.uniformsampler method)": [[15, "sage.crypto.lwe.UniformSampler.__call__", false]], "__init__() (sage.crypto.block_cipher.des.des method)": [[1, "sage.crypto.block_cipher.des.DES.__init__", false]], "__init__() (sage.crypto.block_cipher.des.des_ks method)": [[1, "sage.crypto.block_cipher.des.DES_KS.__init__", false]], "__init__() (sage.crypto.block_cipher.present.present method)": [[3, "sage.crypto.block_cipher.present.PRESENT.__init__", false]], "__init__() (sage.crypto.block_cipher.present.present_ks method)": [[3, "sage.crypto.block_cipher.present.PRESENT_KS.__init__", false]], "__init__() (sage.crypto.lwe.lindnerpeikert method)": [[15, "sage.crypto.lwe.LindnerPeikert.__init__", false]], "__init__() (sage.crypto.lwe.lwe method)": [[15, "sage.crypto.lwe.LWE.__init__", false]], "__init__() (sage.crypto.lwe.regev method)": [[15, "sage.crypto.lwe.Regev.__init__", false]], "__init__() (sage.crypto.lwe.ringlindnerpeikert method)": [[15, "sage.crypto.lwe.RingLindnerPeikert.__init__", false]], "__init__() (sage.crypto.lwe.ringlwe method)": [[15, "sage.crypto.lwe.RingLWE.__init__", false]], "__init__() (sage.crypto.lwe.ringlweconverter method)": [[15, "sage.crypto.lwe.RingLWEConverter.__init__", false]], "__init__() (sage.crypto.lwe.uniformnoiselwe method)": [[15, "sage.crypto.lwe.UniformNoiseLWE.__init__", false]], "__init__() (sage.crypto.lwe.uniformpolynomialsampler method)": [[15, "sage.crypto.lwe.UniformPolynomialSampler.__init__", false]], "__init__() (sage.crypto.lwe.uniformsampler method)": [[15, "sage.crypto.lwe.UniformSampler.__init__", false]], "absolut_indicator() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.absolut_indicator", false]], "absolute_autocorrelation() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.absolute_autocorrelation", false]], "absolute_indicator() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.absolute_indicator", false]], "absolute_walsh_spectrum() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.absolute_walsh_spectrum", false]], "add_key() (sage.crypto.block_cipher.miniaes.miniaes method)": [[2, "sage.crypto.block_cipher.miniaes.MiniAES.add_key", false]], "add_round_key() (sage.crypto.mq.rijndael_gf.rijndaelgf method)": [[17, "sage.crypto.mq.rijndael_gf.RijndaelGF.add_round_key", false]], "add_round_key() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.add_round_key", false]], "add_round_key_poly_constr() (sage.crypto.mq.rijndael_gf.rijndaelgf method)": [[17, "sage.crypto.mq.rijndael_gf.RijndaelGF.add_round_key_poly_constr", false]], "affinecipher (class in sage.crypto.classical_cipher)": [[8, "sage.crypto.classical_cipher.AffineCipher", false]], "affinecryptosystem (class in sage.crypto.classical)": [[7, "sage.crypto.classical.AffineCryptosystem", false]], "algebraic_degree() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.algebraic_degree", false]], "algebraic_immunity() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.algebraic_immunity", false]], "algebraic_normal_form() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.algebraic_normal_form", false]], "allowzeroinversionscontext (class in sage.crypto.mq.sr)": [[18, "sage.crypto.mq.sr.AllowZeroInversionsContext", false]], "alphabet_size() (sage.crypto.cryptosystem.symmetrickeycryptosystem method)": [[9, "sage.crypto.cryptosystem.SymmetricKeyCryptosystem.alphabet_size", false]], "annihilator() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.annihilator", false]], "antiphi() (sage.crypto.mq.sr.sr_gf2 method)": [[18, "sage.crypto.mq.sr.SR_gf2.antiphi", false]], "antiphi() (sage.crypto.mq.sr.sr_gf2n method)": [[18, "sage.crypto.mq.sr.SR_gf2n.antiphi", false]], "apply_poly() (sage.crypto.mq.rijndael_gf.rijndaelgf method)": [[17, "sage.crypto.mq.rijndael_gf.RijndaelGF.apply_poly", false]], "ascii_integer() (in module sage.crypto.util)": [[24, "sage.crypto.util.ascii_integer", false]], "ascii_to_bin() (in module sage.crypto.util)": [[24, "sage.crypto.util.ascii_to_bin", false]], "autocorrelation() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.autocorrelation", false]], "autocorrelation_table() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.autocorrelation_table", false]], "balance_sample() (in module sage.crypto.lwe)": [[15, "sage.crypto.lwe.balance_sample", false]], "base_ring() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.base_ring", false]], "bin_to_ascii() (in module sage.crypto.util)": [[24, "sage.crypto.util.bin_to_ascii", false]], "binary_to_gf() (sage.crypto.block_cipher.miniaes.miniaes method)": [[2, "sage.crypto.block_cipher.miniaes.MiniAES.binary_to_GF", false]], "binary_to_integer() (sage.crypto.block_cipher.miniaes.miniaes method)": [[2, "sage.crypto.block_cipher.miniaes.MiniAES.binary_to_integer", false]], "block_length() (sage.crypto.block_cipher.miniaes.miniaes method)": [[2, "sage.crypto.block_cipher.miniaes.MiniAES.block_length", false]], "block_length() (sage.crypto.block_cipher.sdes.simplifieddes method)": [[4, "sage.crypto.block_cipher.sdes.SimplifiedDES.block_length", false]], "block_length() (sage.crypto.classical.hillcryptosystem method)": [[7, "sage.crypto.classical.HillCryptosystem.block_length", false]], "block_length() (sage.crypto.cryptosystem.cryptosystem method)": [[9, "sage.crypto.cryptosystem.Cryptosystem.block_length", false]], "block_length() (sage.crypto.mq.rijndael_gf.rijndaelgf method)": [[17, "sage.crypto.mq.rijndael_gf.RijndaelGF.block_length", false]], "block_order() (sage.crypto.mq.mpolynomialsystemgenerator.mpolynomialsystemgenerator method)": [[16, "sage.crypto.mq.mpolynomialsystemgenerator.MPolynomialSystemGenerator.block_order", false]], "block_order() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.block_order", false]], "blum_blum_shub() (in module sage.crypto.stream)": [[22, "sage.crypto.stream.blum_blum_shub", false]], "blumgoldwasser (class in sage.crypto.public_key.blum_goldwasser)": [[19, "sage.crypto.public_key.blum_goldwasser.BlumGoldwasser", false]], "booleanfunction (class in sage.crypto.boolean_function)": [[5, "sage.crypto.boolean_function.BooleanFunction", false]], "booleanfunctioniterator (class in sage.crypto.boolean_function)": [[5, "sage.crypto.boolean_function.BooleanFunctionIterator", false]], "boomerang_connectivity_table() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.boomerang_connectivity_table", false]], "boomerang_uniformity() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.boomerang_uniformity", false]], "bracken_leander() (in module sage.crypto.sboxes)": [[21, "sage.crypto.sboxes.bracken_leander", false]], "brute_force() (sage.crypto.classical.affinecryptosystem method)": [[7, "sage.crypto.classical.AffineCryptosystem.brute_force", false]], "brute_force() (sage.crypto.classical.shiftcryptosystem method)": [[7, "sage.crypto.classical.ShiftCryptosystem.brute_force", false]], "carlet_tang_tang_liao() (in module sage.crypto.sboxes)": [[21, "sage.crypto.sboxes.carlet_tang_tang_liao", false]], "chi() (in module sage.crypto.sboxes)": [[21, "sage.crypto.sboxes.chi", false]], "cipher (class in sage.crypto.cipher)": [[6, "sage.crypto.cipher.Cipher", false]], "cipher_codomain() (sage.crypto.cryptosystem.cryptosystem method)": [[9, "sage.crypto.cryptosystem.Cryptosystem.cipher_codomain", false]], "cipher_domain() (sage.crypto.cryptosystem.cryptosystem method)": [[9, "sage.crypto.cryptosystem.Cryptosystem.cipher_domain", false]], "ciphertext_space() (sage.crypto.cryptosystem.cryptosystem method)": [[9, "sage.crypto.cryptosystem.Cryptosystem.ciphertext_space", false]], "cnf() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.cnf", false]], "codomain() (sage.crypto.cipher.cipher method)": [[6, "sage.crypto.cipher.Cipher.codomain", false]], "component_function() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.component_function", false]], "compose() (sage.crypto.mq.rijndael_gf.rijndaelgf method)": [[17, "sage.crypto.mq.rijndael_gf.RijndaelGF.compose", false]], "compute_shared_secret() (sage.crypto.key_exchange.diffie_hellman.diffiehellman method)": [[11, "sage.crypto.key_exchange.diffie_hellman.DiffieHellman.compute_shared_secret", false]], "compute_shared_secret() (sage.crypto.key_exchange.key_exchange_scheme.keyexchangescheme method)": [[12, "sage.crypto.key_exchange.key_exchange_scheme.KeyExchangeScheme.compute_shared_secret", false]], "connection_polynomial() (sage.crypto.stream_cipher.lfsrcipher method)": [[23, "sage.crypto.stream_cipher.LFSRCipher.connection_polynomial", false]], "convert_to_vector() (in module sage.crypto.block_cipher.des)": [[1, "sage.crypto.block_cipher.des.convert_to_vector", false]], "convert_to_vector() (in module sage.crypto.block_cipher.present)": [[3, "sage.crypto.block_cipher.present.convert_to_vector", false]], "correlation_immunity() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.correlation_immunity", false]], "cryptosystem (class in sage.crypto.cryptosystem)": [[9, "sage.crypto.cryptosystem.Cryptosystem", false]], "decimating_cipher() (sage.crypto.stream_cipher.shrinkinggeneratorcipher method)": [[23, "sage.crypto.stream_cipher.ShrinkingGeneratorCipher.decimating_cipher", false]], "deciphering() (sage.crypto.classical.affinecryptosystem method)": [[7, "sage.crypto.classical.AffineCryptosystem.deciphering", false]], "deciphering() (sage.crypto.classical.hillcryptosystem method)": [[7, "sage.crypto.classical.HillCryptosystem.deciphering", false]], "deciphering() (sage.crypto.classical.shiftcryptosystem method)": [[7, "sage.crypto.classical.ShiftCryptosystem.deciphering", false]], "deciphering() (sage.crypto.classical.substitutioncryptosystem method)": [[7, "sage.crypto.classical.SubstitutionCryptosystem.deciphering", false]], "deciphering() (sage.crypto.classical.transpositioncryptosystem method)": [[7, "sage.crypto.classical.TranspositionCryptosystem.deciphering", false]], "deciphering() (sage.crypto.classical.vigenerecryptosystem method)": [[7, "sage.crypto.classical.VigenereCryptosystem.deciphering", false]], "decrypt() (sage.crypto.block_cipher.des.des method)": [[1, "sage.crypto.block_cipher.des.DES.decrypt", false]], "decrypt() (sage.crypto.block_cipher.miniaes.miniaes method)": [[2, "sage.crypto.block_cipher.miniaes.MiniAES.decrypt", false]], "decrypt() (sage.crypto.block_cipher.present.present method)": [[3, "sage.crypto.block_cipher.present.PRESENT.decrypt", false]], "decrypt() (sage.crypto.block_cipher.sdes.simplifieddes method)": [[4, "sage.crypto.block_cipher.sdes.SimplifiedDES.decrypt", false]], "decrypt() (sage.crypto.mq.rijndael_gf.rijndaelgf method)": [[17, "sage.crypto.mq.rijndael_gf.RijndaelGF.decrypt", false]], "decrypt() (sage.crypto.public_key.blum_goldwasser.blumgoldwasser method)": [[19, "sage.crypto.public_key.blum_goldwasser.BlumGoldwasser.decrypt", false]], "derivative() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.derivative", false]], "derivative() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.derivative", false]], "des (class in sage.crypto.block_cipher.des)": [[1, "sage.crypto.block_cipher.des.DES", false]], "des_ks (class in sage.crypto.block_cipher.des)": [[1, "sage.crypto.block_cipher.des.DES_KS", false]], "difference_distribution_table() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.difference_distribution_table", false]], "differential_branch_number() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.differential_branch_number", false]], "differential_uniformity() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.differential_uniformity", false]], "diffiehellman (class in sage.crypto.key_exchange.diffie_hellman)": [[11, "sage.crypto.key_exchange.diffie_hellman.DiffieHellman", false]], "domain() (sage.crypto.cipher.cipher method)": [[6, "sage.crypto.cipher.Cipher.domain", false]], "enciphering() (sage.crypto.classical.affinecryptosystem method)": [[7, "sage.crypto.classical.AffineCryptosystem.enciphering", false]], "enciphering() (sage.crypto.classical.hillcryptosystem method)": [[7, "sage.crypto.classical.HillCryptosystem.enciphering", false]], "enciphering() (sage.crypto.classical.shiftcryptosystem method)": [[7, "sage.crypto.classical.ShiftCryptosystem.enciphering", false]], "enciphering() (sage.crypto.classical.substitutioncryptosystem method)": [[7, "sage.crypto.classical.SubstitutionCryptosystem.enciphering", false]], "enciphering() (sage.crypto.classical.transpositioncryptosystem method)": [[7, "sage.crypto.classical.TranspositionCryptosystem.enciphering", false]], "enciphering() (sage.crypto.classical.vigenerecryptosystem method)": [[7, "sage.crypto.classical.VigenereCryptosystem.enciphering", false]], "encoding() (sage.crypto.classical.affinecryptosystem method)": [[7, "sage.crypto.classical.AffineCryptosystem.encoding", false]], "encoding() (sage.crypto.classical.hillcryptosystem method)": [[7, "sage.crypto.classical.HillCryptosystem.encoding", false]], "encoding() (sage.crypto.classical.shiftcryptosystem method)": [[7, "sage.crypto.classical.ShiftCryptosystem.encoding", false]], "encoding() (sage.crypto.classical.substitutioncryptosystem method)": [[7, "sage.crypto.classical.SubstitutionCryptosystem.encoding", false]], "encoding() (sage.crypto.classical.transpositioncryptosystem method)": [[7, "sage.crypto.classical.TranspositionCryptosystem.encoding", false]], "encoding() (sage.crypto.classical.vigenerecryptosystem method)": [[7, "sage.crypto.classical.VigenereCryptosystem.encoding", false]], "encoding() (sage.crypto.stream.lfsrcryptosystem method)": [[22, "sage.crypto.stream.LFSRCryptosystem.encoding", false]], "encoding() (sage.crypto.stream.shrinkinggeneratorcryptosystem method)": [[22, "sage.crypto.stream.ShrinkingGeneratorCryptosystem.encoding", false]], "encrypt() (sage.crypto.block_cipher.des.des method)": [[1, "sage.crypto.block_cipher.des.DES.encrypt", false]], "encrypt() (sage.crypto.block_cipher.miniaes.miniaes method)": [[2, "sage.crypto.block_cipher.miniaes.MiniAES.encrypt", false]], "encrypt() (sage.crypto.block_cipher.present.present method)": [[3, "sage.crypto.block_cipher.present.PRESENT.encrypt", false]], "encrypt() (sage.crypto.block_cipher.sdes.simplifieddes method)": [[4, "sage.crypto.block_cipher.sdes.SimplifiedDES.encrypt", false]], "encrypt() (sage.crypto.mq.rijndael_gf.rijndaelgf method)": [[17, "sage.crypto.mq.rijndael_gf.RijndaelGF.encrypt", false]], "encrypt() (sage.crypto.public_key.blum_goldwasser.blumgoldwasser method)": [[19, "sage.crypto.public_key.blum_goldwasser.BlumGoldwasser.encrypt", false]], "expand_key() (sage.crypto.mq.rijndael_gf.rijndaelgf method)": [[17, "sage.crypto.mq.rijndael_gf.RijndaelGF.expand_key", false]], "expand_key_poly() (sage.crypto.mq.rijndael_gf.rijndaelgf method)": [[17, "sage.crypto.mq.rijndael_gf.RijndaelGF.expand_key_poly", false]], "feistel_construction() (in module sage.crypto.sbox)": [[20, "sage.crypto.sbox.feistel_construction", false]], "field() (sage.crypto.key_exchange.diffie_hellman.diffiehellman method)": [[11, "sage.crypto.key_exchange.diffie_hellman.DiffieHellman.field", false]], "field_polynomials() (sage.crypto.mq.sr.sr_gf2 method)": [[18, "sage.crypto.mq.sr.SR_gf2.field_polynomials", false]], "field_polynomials() (sage.crypto.mq.sr.sr_gf2n method)": [[18, "sage.crypto.mq.sr.SR_gf2n.field_polynomials", false]], "fixed_points() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.fixed_points", false]], "from_bits() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.from_bits", false]], "gen_lattice() (in module sage.crypto.lattice)": [[13, "sage.crypto.lattice.gen_lattice", false]], "generate_public_key() (sage.crypto.key_exchange.diffie_hellman.diffiehellman method)": [[11, "sage.crypto.key_exchange.diffie_hellman.DiffieHellman.generate_public_key", false]], "generate_public_key() (sage.crypto.key_exchange.key_exchange_scheme.keyexchangescheme method)": [[12, "sage.crypto.key_exchange.key_exchange_scheme.KeyExchangeScheme.generate_public_key", false]], "generate_secret_key() (sage.crypto.key_exchange.diffie_hellman.diffiehellman method)": [[11, "sage.crypto.key_exchange.diffie_hellman.DiffieHellman.generate_secret_key", false]], "generate_secret_key() (sage.crypto.key_exchange.key_exchange_scheme.keyexchangescheme method)": [[12, "sage.crypto.key_exchange.key_exchange_scheme.KeyExchangeScheme.generate_secret_key", false]], "generator() (sage.crypto.key_exchange.diffie_hellman.diffiehellman method)": [[11, "sage.crypto.key_exchange.diffie_hellman.DiffieHellman.generator", false]], "gf_to_binary() (sage.crypto.block_cipher.miniaes.miniaes method)": [[2, "sage.crypto.block_cipher.miniaes.MiniAES.GF_to_binary", false]], "gf_to_integer() (sage.crypto.block_cipher.miniaes.miniaes method)": [[2, "sage.crypto.block_cipher.miniaes.MiniAES.GF_to_integer", false]], "gold() (in module sage.crypto.sboxes)": [[21, "sage.crypto.sboxes.gold", false]], "has_blum_prime() (in module sage.crypto.util)": [[24, "sage.crypto.util.has_blum_prime", false]], "has_linear_structure() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.has_linear_structure", false]], "has_linear_structure() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.has_linear_structure", false]], "hex_str() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.hex_str", false]], "hex_str_matrix() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.hex_str_matrix", false]], "hex_str_vector() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.hex_str_vector", false]], "hillcipher (class in sage.crypto.classical_cipher)": [[8, "sage.crypto.classical_cipher.HillCipher", false]], "hillcryptosystem (class in sage.crypto.classical)": [[7, "sage.crypto.classical.HillCryptosystem", false]], "initial_permutation() (sage.crypto.block_cipher.sdes.simplifieddes method)": [[4, "sage.crypto.block_cipher.sdes.SimplifiedDES.initial_permutation", false]], "initial_state() (sage.crypto.stream_cipher.lfsrcipher method)": [[23, "sage.crypto.stream_cipher.LFSRCipher.initial_state", false]], "input_size() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.input_size", false]], "integer_to_binary() (sage.crypto.block_cipher.miniaes.miniaes method)": [[2, "sage.crypto.block_cipher.miniaes.MiniAES.integer_to_binary", false]], "integer_to_gf() (sage.crypto.block_cipher.miniaes.miniaes method)": [[2, "sage.crypto.block_cipher.miniaes.MiniAES.integer_to_GF", false]], "interpolation_polynomial() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.interpolation_polynomial", false]], "inverse() (sage.crypto.classical_cipher.hillcipher method)": [[8, "sage.crypto.classical_cipher.HillCipher.inverse", false]], "inverse() (sage.crypto.classical_cipher.substitutioncipher method)": [[8, "sage.crypto.classical_cipher.SubstitutionCipher.inverse", false]], "inverse() (sage.crypto.classical_cipher.transpositioncipher method)": [[8, "sage.crypto.classical_cipher.TranspositionCipher.inverse", false]], "inverse() (sage.crypto.classical_cipher.vigenerecipher method)": [[8, "sage.crypto.classical_cipher.VigenereCipher.inverse", false]], "inverse() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.inverse", false]], "inverse_key() (sage.crypto.classical.affinecryptosystem method)": [[7, "sage.crypto.classical.AffineCryptosystem.inverse_key", false]], "inverse_key() (sage.crypto.classical.hillcryptosystem method)": [[7, "sage.crypto.classical.HillCryptosystem.inverse_key", false]], "inverse_key() (sage.crypto.classical.shiftcryptosystem method)": [[7, "sage.crypto.classical.ShiftCryptosystem.inverse_key", false]], "inverse_key() (sage.crypto.classical.substitutioncryptosystem method)": [[7, "sage.crypto.classical.SubstitutionCryptosystem.inverse_key", false]], "inverse_key() (sage.crypto.classical.transpositioncryptosystem method)": [[7, "sage.crypto.classical.TranspositionCryptosystem.inverse_key", false]], "inverse_key() (sage.crypto.classical.vigenerecryptosystem method)": [[7, "sage.crypto.classical.VigenereCryptosystem.inverse_key", false]], "inversion() (in module sage.crypto.sboxes)": [[21, "sage.crypto.sboxes.inversion", false]], "inversion_polynomials() (sage.crypto.mq.sr.sr_gf2 method)": [[18, "sage.crypto.mq.sr.SR_gf2.inversion_polynomials", false]], "inversion_polynomials() (sage.crypto.mq.sr.sr_gf2n method)": [[18, "sage.crypto.mq.sr.SR_gf2n.inversion_polynomials", false]], "inversion_polynomials_single_sbox() (sage.crypto.mq.sr.sr_gf2 method)": [[18, "sage.crypto.mq.sr.SR_gf2.inversion_polynomials_single_sbox", false]], "inversion_polynomials_single_sbox() (sage.crypto.mq.sr.sr_gf2_2 method)": [[18, "sage.crypto.mq.sr.SR_gf2_2.inversion_polynomials_single_sbox", false]], "is_almost_bent() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.is_almost_bent", false]], "is_apn() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.is_apn", false]], "is_balanced() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.is_balanced", false]], "is_balanced() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.is_balanced", false]], "is_bent() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.is_bent", false]], "is_bent() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.is_bent", false]], "is_blum_prime() (in module sage.crypto.util)": [[24, "sage.crypto.util.is_blum_prime", false]], "is_involution() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.is_involution", false]], "is_linear_structure() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.is_linear_structure", false]], "is_linear_structure() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.is_linear_structure", false]], "is_monomial_function() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.is_monomial_function", false]], "is_permutation() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.is_permutation", false]], "is_plateaued() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.is_plateaued", false]], "is_plateaued() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.is_plateaued", false]], "is_state_array() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.is_state_array", false]], "is_symmetric() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.is_symmetric", false]], "is_vector() (sage.crypto.mq.sr.sr_gf2 method)": [[18, "sage.crypto.mq.sr.SR_gf2.is_vector", false]], "is_vector() (sage.crypto.mq.sr.sr_gf2n method)": [[18, "sage.crypto.mq.sr.SR_gf2n.is_vector", false]], "kasami() (in module sage.crypto.sboxes)": [[21, "sage.crypto.sboxes.kasami", false]], "key() (sage.crypto.cipher.cipher method)": [[6, "sage.crypto.cipher.Cipher.key", false]], "key_length() (sage.crypto.mq.rijndael_gf.rijndaelgf method)": [[17, "sage.crypto.mq.rijndael_gf.RijndaelGF.key_length", false]], "key_schedule() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.key_schedule", false]], "key_schedule_polynomials() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.key_schedule_polynomials", false]], "key_space() (sage.crypto.cryptosystem.cryptosystem method)": [[9, "sage.crypto.cryptosystem.Cryptosystem.key_space", false]], "keyexchangescheme (class in sage.crypto.key_exchange.key_exchange_scheme)": [[12, "sage.crypto.key_exchange.key_exchange_scheme.KeyExchangeScheme", false]], "keystream_cipher() (sage.crypto.stream_cipher.shrinkinggeneratorcipher method)": [[23, "sage.crypto.stream_cipher.ShrinkingGeneratorCipher.keystream_cipher", false]], "least_significant_bits() (in module sage.crypto.util)": [[24, "sage.crypto.util.least_significant_bits", false]], "left_shift() (sage.crypto.block_cipher.sdes.simplifieddes method)": [[4, "sage.crypto.block_cipher.sdes.SimplifiedDES.left_shift", false]], "lfsr_autocorrelation() (in module sage.crypto.lfsr)": [[14, "sage.crypto.lfsr.lfsr_autocorrelation", false]], "lfsr_connection_polynomial() (in module sage.crypto.lfsr)": [[14, "sage.crypto.lfsr.lfsr_connection_polynomial", false]], "lfsr_sequence() (in module sage.crypto.lfsr)": [[14, "sage.crypto.lfsr.lfsr_sequence", false]], "lfsrcipher (class in sage.crypto.stream_cipher)": [[23, "sage.crypto.stream_cipher.LFSRCipher", false]], "lfsrcryptosystem (class in sage.crypto.stream)": [[22, "sage.crypto.stream.LFSRCryptosystem", false]], "lin_matrix() (sage.crypto.mq.sr.sr_gf2 method)": [[18, "sage.crypto.mq.sr.SR_gf2.lin_matrix", false]], "lin_matrix() (sage.crypto.mq.sr.sr_gf2n method)": [[18, "sage.crypto.mq.sr.SR_gf2n.lin_matrix", false]], "lindnerpeikert (class in sage.crypto.lwe)": [[15, "sage.crypto.lwe.LindnerPeikert", false]], "linear_approximation_table() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.linear_approximation_table", false]], "linear_branch_number() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.linear_branch_number", false]], "linear_layer() (sage.crypto.block_cipher.present.present method)": [[3, "sage.crypto.block_cipher.present.PRESENT.linear_layer", false]], "linear_structures() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.linear_structures", false]], "linear_structures() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.linear_structures", false]], "linearity() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.linearity", false]], "list_to_string() (sage.crypto.block_cipher.sdes.simplifieddes method)": [[4, "sage.crypto.block_cipher.sdes.SimplifiedDES.list_to_string", false]], "lwe (class in sage.crypto.lwe)": [[15, "sage.crypto.lwe.LWE", false]], "max_degree() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.max_degree", false]], "maximal_difference_probability() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.maximal_difference_probability", false]], "maximal_difference_probability_absolute() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.maximal_difference_probability_absolute", false]], "maximal_linear_bias_absolute() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.maximal_linear_bias_absolute", false]], "maximal_linear_bias_relative() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.maximal_linear_bias_relative", false]], "min_degree() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.min_degree", false]], "miniaes (class in sage.crypto.block_cipher.miniaes)": [[2, "sage.crypto.block_cipher.miniaes.MiniAES", false]], "misty_construction() (in module sage.crypto.sbox)": [[20, "sage.crypto.sbox.misty_construction", false]], "mix_column() (sage.crypto.block_cipher.miniaes.miniaes method)": [[2, "sage.crypto.block_cipher.miniaes.MiniAES.mix_column", false]], "mix_columns() (sage.crypto.mq.rijndael_gf.rijndaelgf method)": [[17, "sage.crypto.mq.rijndael_gf.RijndaelGF.mix_columns", false]], "mix_columns() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.mix_columns", false]], "mix_columns_matrix() (sage.crypto.mq.sr.sr_gf2 method)": [[18, "sage.crypto.mq.sr.SR_gf2.mix_columns_matrix", false]], "mix_columns_matrix() (sage.crypto.mq.sr.sr_gf2n method)": [[18, "sage.crypto.mq.sr.SR_gf2n.mix_columns_matrix", false]], "mix_columns_poly_constr() (sage.crypto.mq.rijndael_gf.rijndaelgf method)": [[17, "sage.crypto.mq.rijndael_gf.RijndaelGF.mix_columns_poly_constr", false]], "module": [[1, "module-sage.crypto.block_cipher.des", false], [2, "module-sage.crypto.block_cipher.miniaes", false], [3, "module-sage.crypto.block_cipher.present", false], [4, "module-sage.crypto.block_cipher.sdes", false], [5, "module-sage.crypto.boolean_function", false], [6, "module-sage.crypto.cipher", false], [7, "module-sage.crypto.classical", false], [8, "module-sage.crypto.classical_cipher", false], [9, "module-sage.crypto.cryptosystem", false], [10, "module-sage.crypto.key_exchange.catalog", false], [11, "module-sage.crypto.key_exchange.diffie_hellman", false], [12, "module-sage.crypto.key_exchange.key_exchange_scheme", false], [13, "module-sage.crypto.lattice", false], [14, "module-sage.crypto.lfsr", false], [15, "module-sage.crypto.lwe", false], [16, "module-sage.crypto.mq.mpolynomialsystemgenerator", false], [17, "module-sage.crypto.mq.rijndael_gf", false], [18, "module-sage.crypto.mq.sr", false], [19, "module-sage.crypto.public_key.blum_goldwasser", false], [20, "module-sage.crypto.sbox", false], [21, "module-sage.crypto.sboxes", false], [22, "module-sage.crypto.stream", false], [23, "module-sage.crypto.stream_cipher", false], [24, "module-sage.crypto.util", false]], "monomial_function() (in module sage.crypto.sboxes)": [[21, "sage.crypto.sboxes.monomial_function", false]], "mpolynomialsystemgenerator (class in sage.crypto.mq.mpolynomialsystemgenerator)": [[16, "sage.crypto.mq.mpolynomialsystemgenerator.MPolynomialSystemGenerator", false]], "new_generator() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.new_generator", false]], "nibble_sub() (sage.crypto.block_cipher.miniaes.miniaes method)": [[2, "sage.crypto.block_cipher.miniaes.MiniAES.nibble_sub", false]], "niho() (in module sage.crypto.sboxes)": [[21, "sage.crypto.sboxes.niho", false]], "nonlinearity() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.nonlinearity", false]], "nonlinearity() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.nonlinearity", false]], "number_rounds() (sage.crypto.mq.rijndael_gf.rijndaelgf method)": [[17, "sage.crypto.mq.rijndael_gf.RijndaelGF.number_rounds", false]], "nvariables() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.nvariables", false]], "output_size() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.output_size", false]], "parameters() (sage.crypto.key_exchange.diffie_hellman.diffiehellman method)": [[11, "sage.crypto.key_exchange.diffie_hellman.DiffieHellman.parameters", false]], "parameters() (sage.crypto.key_exchange.key_exchange_scheme.keyexchangescheme method)": [[12, "sage.crypto.key_exchange.key_exchange_scheme.KeyExchangeScheme.parameters", false]], "period() (sage.crypto.cryptosystem.cryptosystem method)": [[9, "sage.crypto.cryptosystem.Cryptosystem.period", false]], "permutation10() (sage.crypto.block_cipher.sdes.simplifieddes method)": [[4, "sage.crypto.block_cipher.sdes.SimplifiedDES.permutation10", false]], "permutation4() (sage.crypto.block_cipher.sdes.simplifieddes method)": [[4, "sage.crypto.block_cipher.sdes.SimplifiedDES.permutation4", false]], "permutation8() (sage.crypto.block_cipher.sdes.simplifieddes method)": [[4, "sage.crypto.block_cipher.sdes.SimplifiedDES.permutation8", false]], "permute_substitute() (sage.crypto.block_cipher.sdes.simplifieddes method)": [[4, "sage.crypto.block_cipher.sdes.SimplifiedDES.permute_substitute", false]], "phi() (sage.crypto.mq.sr.sr_gf2 method)": [[18, "sage.crypto.mq.sr.SR_gf2.phi", false]], "phi() (sage.crypto.mq.sr.sr_gf2n method)": [[18, "sage.crypto.mq.sr.SR_gf2n.phi", false]], "plaintext_space() (sage.crypto.cryptosystem.cryptosystem method)": [[9, "sage.crypto.cryptosystem.Cryptosystem.plaintext_space", false]], "polynomial_system() (sage.crypto.mq.mpolynomialsystemgenerator.mpolynomialsystemgenerator method)": [[16, "sage.crypto.mq.mpolynomialsystemgenerator.MPolynomialSystemGenerator.polynomial_system", false]], "polynomial_system() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.polynomial_system", false]], "polynomials() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.polynomials", false]], "present (class in sage.crypto.block_cipher.present)": [[3, "sage.crypto.block_cipher.present.PRESENT", false]], "present_ks (class in sage.crypto.block_cipher.present)": [[3, "sage.crypto.block_cipher.present.PRESENT_KS", false]], "prime() (sage.crypto.key_exchange.diffie_hellman.diffiehellman method)": [[11, "sage.crypto.key_exchange.diffie_hellman.DiffieHellman.prime", false]], "private_key() (sage.crypto.public_key.blum_goldwasser.blumgoldwasser method)": [[19, "sage.crypto.public_key.blum_goldwasser.BlumGoldwasser.private_key", false]], "public_key() (sage.crypto.public_key.blum_goldwasser.blumgoldwasser method)": [[19, "sage.crypto.public_key.blum_goldwasser.BlumGoldwasser.public_key", false]], "publickeycipher (class in sage.crypto.cipher)": [[6, "sage.crypto.cipher.PublicKeyCipher", false]], "publickeycryptosystem (class in sage.crypto.cryptosystem)": [[9, "sage.crypto.cryptosystem.PublicKeyCryptosystem", false]], "random_blum_prime() (in module sage.crypto.util)": [[24, "sage.crypto.util.random_blum_prime", false]], "random_boolean_function() (in module sage.crypto.boolean_function)": [[5, "sage.crypto.boolean_function.random_boolean_function", false]], "random_element() (sage.crypto.mq.mpolynomialsystemgenerator.mpolynomialsystemgenerator method)": [[16, "sage.crypto.mq.mpolynomialsystemgenerator.MPolynomialSystemGenerator.random_element", false]], "random_element() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.random_element", false]], "random_key() (sage.crypto.block_cipher.miniaes.miniaes method)": [[2, "sage.crypto.block_cipher.miniaes.MiniAES.random_key", false]], "random_key() (sage.crypto.block_cipher.sdes.simplifieddes method)": [[4, "sage.crypto.block_cipher.sdes.SimplifiedDES.random_key", false]], "random_key() (sage.crypto.classical.affinecryptosystem method)": [[7, "sage.crypto.classical.AffineCryptosystem.random_key", false]], "random_key() (sage.crypto.classical.hillcryptosystem method)": [[7, "sage.crypto.classical.HillCryptosystem.random_key", false]], "random_key() (sage.crypto.classical.shiftcryptosystem method)": [[7, "sage.crypto.classical.ShiftCryptosystem.random_key", false]], "random_key() (sage.crypto.classical.substitutioncryptosystem method)": [[7, "sage.crypto.classical.SubstitutionCryptosystem.random_key", false]], "random_key() (sage.crypto.classical.transpositioncryptosystem method)": [[7, "sage.crypto.classical.TranspositionCryptosystem.random_key", false]], "random_key() (sage.crypto.classical.vigenerecryptosystem method)": [[7, "sage.crypto.classical.VigenereCryptosystem.random_key", false]], "random_key() (sage.crypto.public_key.blum_goldwasser.blumgoldwasser method)": [[19, "sage.crypto.public_key.blum_goldwasser.BlumGoldwasser.random_key", false]], "random_state_array() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.random_state_array", false]], "random_vector() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.random_vector", false]], "rank_by_chi_square() (sage.crypto.classical.affinecryptosystem method)": [[7, "sage.crypto.classical.AffineCryptosystem.rank_by_chi_square", false]], "rank_by_chi_square() (sage.crypto.classical.shiftcryptosystem method)": [[7, "sage.crypto.classical.ShiftCryptosystem.rank_by_chi_square", false]], "rank_by_squared_differences() (sage.crypto.classical.affinecryptosystem method)": [[7, "sage.crypto.classical.AffineCryptosystem.rank_by_squared_differences", false]], "rank_by_squared_differences() (sage.crypto.classical.shiftcryptosystem method)": [[7, "sage.crypto.classical.ShiftCryptosystem.rank_by_squared_differences", false]], "regev (class in sage.crypto.lwe)": [[15, "sage.crypto.lwe.Regev", false]], "resiliency_order() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.resiliency_order", false]], "rijndaelgf (class in sage.crypto.mq.rijndael_gf)": [[17, "sage.crypto.mq.rijndael_gf.RijndaelGF", false]], "rijndaelgf.round_component_poly_constr (class in sage.crypto.mq.rijndael_gf)": [[17, "sage.crypto.mq.rijndael_gf.RijndaelGF.Round_Component_Poly_Constr", false]], "ring() (sage.crypto.mq.mpolynomialsystemgenerator.mpolynomialsystemgenerator method)": [[16, "sage.crypto.mq.mpolynomialsystemgenerator.MPolynomialSystemGenerator.ring", false]], "ring() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.ring", false]], "ring() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.ring", false]], "ringlindnerpeikert (class in sage.crypto.lwe)": [[15, "sage.crypto.lwe.RingLindnerPeikert", false]], "ringlwe (class in sage.crypto.lwe)": [[15, "sage.crypto.lwe.RingLWE", false]], "ringlweconverter (class in sage.crypto.lwe)": [[15, "sage.crypto.lwe.RingLWEConverter", false]], "round() (sage.crypto.block_cipher.des.des method)": [[1, "sage.crypto.block_cipher.des.DES.round", false]], "round() (sage.crypto.block_cipher.present.present method)": [[3, "sage.crypto.block_cipher.present.PRESENT.round", false]], "round_key() (sage.crypto.block_cipher.miniaes.miniaes method)": [[2, "sage.crypto.block_cipher.miniaes.MiniAES.round_key", false]], "round_polynomials() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.round_polynomials", false]], "sage.crypto.block_cipher.des": [[1, "module-sage.crypto.block_cipher.des", false]], "sage.crypto.block_cipher.miniaes": [[2, "module-sage.crypto.block_cipher.miniaes", false]], "sage.crypto.block_cipher.present": [[3, "module-sage.crypto.block_cipher.present", false]], "sage.crypto.block_cipher.sdes": [[4, "module-sage.crypto.block_cipher.sdes", false]], "sage.crypto.boolean_function": [[5, "module-sage.crypto.boolean_function", false]], "sage.crypto.cipher": [[6, "module-sage.crypto.cipher", false]], "sage.crypto.classical": [[7, "module-sage.crypto.classical", false]], "sage.crypto.classical_cipher": [[8, "module-sage.crypto.classical_cipher", false]], "sage.crypto.cryptosystem": [[9, "module-sage.crypto.cryptosystem", false]], "sage.crypto.key_exchange.catalog": [[10, "module-sage.crypto.key_exchange.catalog", false]], "sage.crypto.key_exchange.diffie_hellman": [[11, "module-sage.crypto.key_exchange.diffie_hellman", false]], "sage.crypto.key_exchange.key_exchange_scheme": [[12, "module-sage.crypto.key_exchange.key_exchange_scheme", false]], "sage.crypto.lattice": [[13, "module-sage.crypto.lattice", false]], "sage.crypto.lfsr": [[14, "module-sage.crypto.lfsr", false]], "sage.crypto.lwe": [[15, "module-sage.crypto.lwe", false]], "sage.crypto.mq.mpolynomialsystemgenerator": [[16, "module-sage.crypto.mq.mpolynomialsystemgenerator", false]], "sage.crypto.mq.rijndael_gf": [[17, "module-sage.crypto.mq.rijndael_gf", false]], "sage.crypto.mq.sr": [[18, "module-sage.crypto.mq.sr", false]], "sage.crypto.public_key.blum_goldwasser": [[19, "module-sage.crypto.public_key.blum_goldwasser", false]], "sage.crypto.sbox": [[20, "module-sage.crypto.sbox", false]], "sage.crypto.sboxes": [[21, "module-sage.crypto.sboxes", false]], "sage.crypto.stream": [[22, "module-sage.crypto.stream", false]], "sage.crypto.stream_cipher": [[23, "module-sage.crypto.stream_cipher", false]], "sage.crypto.util": [[24, "module-sage.crypto.util", false]], "samples() (in module sage.crypto.lwe)": [[15, "sage.crypto.lwe.samples", false]], "sbox (class in sage.crypto.sbox)": [[20, "sage.crypto.sbox.SBox", false]], "sbox() (sage.crypto.block_cipher.miniaes.miniaes method)": [[2, "sage.crypto.block_cipher.miniaes.MiniAES.sbox", false]], "sbox() (sage.crypto.block_cipher.sdes.simplifieddes method)": [[4, "sage.crypto.block_cipher.sdes.SimplifiedDES.sbox", false]], "sbox() (sage.crypto.mq.mpolynomialsystemgenerator.mpolynomialsystemgenerator method)": [[16, "sage.crypto.mq.mpolynomialsystemgenerator.MPolynomialSystemGenerator.sbox", false]], "sbox() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.sbox", false]], "sbox_constant() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.sbox_constant", false]], "sbox_layer() (sage.crypto.block_cipher.des.des method)": [[1, "sage.crypto.block_cipher.des.DES.sbox_layer", false]], "sbox_layer() (sage.crypto.block_cipher.present.present method)": [[3, "sage.crypto.block_cipher.present.PRESENT.sbox_layer", false]], "shift_row() (sage.crypto.block_cipher.miniaes.miniaes method)": [[2, "sage.crypto.block_cipher.miniaes.MiniAES.shift_row", false]], "shift_rows() (sage.crypto.mq.rijndael_gf.rijndaelgf method)": [[17, "sage.crypto.mq.rijndael_gf.RijndaelGF.shift_rows", false]], "shift_rows() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.shift_rows", false]], "shift_rows_matrix() (sage.crypto.mq.sr.sr_gf2 method)": [[18, "sage.crypto.mq.sr.SR_gf2.shift_rows_matrix", false]], "shift_rows_matrix() (sage.crypto.mq.sr.sr_gf2n method)": [[18, "sage.crypto.mq.sr.SR_gf2n.shift_rows_matrix", false]], "shift_rows_poly_constr() (sage.crypto.mq.rijndael_gf.rijndaelgf method)": [[17, "sage.crypto.mq.rijndael_gf.RijndaelGF.shift_rows_poly_constr", false]], "shiftcipher (class in sage.crypto.classical_cipher)": [[8, "sage.crypto.classical_cipher.ShiftCipher", false]], "shiftcryptosystem (class in sage.crypto.classical)": [[7, "sage.crypto.classical.ShiftCryptosystem", false]], "shrinkinggeneratorcipher (class in sage.crypto.stream_cipher)": [[23, "sage.crypto.stream_cipher.ShrinkingGeneratorCipher", false]], "shrinkinggeneratorcryptosystem (class in sage.crypto.stream)": [[22, "sage.crypto.stream.ShrinkingGeneratorCryptosystem", false]], "simplifieddes (class in sage.crypto.block_cipher.sdes)": [[4, "sage.crypto.block_cipher.sdes.SimplifiedDES", false]], "solutions() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.solutions", false]], "sr() (in module sage.crypto.mq.sr)": [[18, "sage.crypto.mq.sr.SR", false]], "sr_generic (class in sage.crypto.mq.sr)": [[18, "sage.crypto.mq.sr.SR_generic", false]], "sr_gf2 (class in sage.crypto.mq.sr)": [[18, "sage.crypto.mq.sr.SR_gf2", false]], "sr_gf2_2 (class in sage.crypto.mq.sr)": [[18, "sage.crypto.mq.sr.SR_gf2_2", false]], "sr_gf2n (class in sage.crypto.mq.sr)": [[18, "sage.crypto.mq.sr.SR_gf2n", false]], "state_array() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.state_array", false]], "string_to_list() (sage.crypto.block_cipher.sdes.simplifieddes method)": [[4, "sage.crypto.block_cipher.sdes.SimplifiedDES.string_to_list", false]], "sub_byte() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.sub_byte", false]], "sub_bytes() (sage.crypto.mq.rijndael_gf.rijndaelgf method)": [[17, "sage.crypto.mq.rijndael_gf.RijndaelGF.sub_bytes", false]], "sub_bytes() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.sub_bytes", false]], "sub_bytes_poly_constr() (sage.crypto.mq.rijndael_gf.rijndaelgf method)": [[17, "sage.crypto.mq.rijndael_gf.RijndaelGF.sub_bytes_poly_constr", false]], "subgroup_size() (sage.crypto.key_exchange.diffie_hellman.diffiehellman method)": [[11, "sage.crypto.key_exchange.diffie_hellman.DiffieHellman.subgroup_size", false]], "subkey() (sage.crypto.block_cipher.sdes.simplifieddes method)": [[4, "sage.crypto.block_cipher.sdes.SimplifiedDES.subkey", false]], "substitutioncipher (class in sage.crypto.classical_cipher)": [[8, "sage.crypto.classical_cipher.SubstitutionCipher", false]], "substitutioncryptosystem (class in sage.crypto.classical)": [[7, "sage.crypto.classical.SubstitutionCryptosystem", false]], "sum_of_square_indicator() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.sum_of_square_indicator", false]], "switch() (sage.crypto.block_cipher.sdes.simplifieddes method)": [[4, "sage.crypto.block_cipher.sdes.SimplifiedDES.switch", false]], "symmetrickeycipher (class in sage.crypto.cipher)": [[6, "sage.crypto.cipher.SymmetricKeyCipher", false]], "symmetrickeycryptosystem (class in sage.crypto.cryptosystem)": [[9, "sage.crypto.cryptosystem.SymmetricKeyCryptosystem", false]], "test_consistency() (in module sage.crypto.mq.sr)": [[18, "sage.crypto.mq.sr.test_consistency", false]], "to_bits() (sage.crypto.sbox.sbox method)": [[20, "sage.crypto.sbox.SBox.to_bits", false]], "transpositioncipher (class in sage.crypto.classical_cipher)": [[8, "sage.crypto.classical_cipher.TranspositionCipher", false]], "transpositioncryptosystem (class in sage.crypto.classical)": [[7, "sage.crypto.classical.TranspositionCryptosystem", false]], "truth_table() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.truth_table", false]], "uniformnoiselwe (class in sage.crypto.lwe)": [[15, "sage.crypto.lwe.UniformNoiseLWE", false]], "uniformpolynomialsampler (class in sage.crypto.lwe)": [[15, "sage.crypto.lwe.UniformPolynomialSampler", false]], "uniformsampler (class in sage.crypto.lwe)": [[15, "sage.crypto.lwe.UniformSampler", false]], "unpickle_booleanfunction() (in module sage.crypto.boolean_function)": [[5, "sage.crypto.boolean_function.unpickle_BooleanFunction", false]], "v() (in module sage.crypto.sboxes)": [[21, "sage.crypto.sboxes.v", false]], "varformatstr() (sage.crypto.mq.mpolynomialsystemgenerator.mpolynomialsystemgenerator method)": [[16, "sage.crypto.mq.mpolynomialsystemgenerator.MPolynomialSystemGenerator.varformatstr", false]], "varformatstr() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.varformatstr", false]], "variable_dict() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.variable_dict", false]], "vars() (sage.crypto.mq.mpolynomialsystemgenerator.mpolynomialsystemgenerator method)": [[16, "sage.crypto.mq.mpolynomialsystemgenerator.MPolynomialSystemGenerator.vars", false]], "vars() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.vars", false]], "varstr() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.varstr", false]], "varstrs() (sage.crypto.mq.mpolynomialsystemgenerator.mpolynomialsystemgenerator method)": [[16, "sage.crypto.mq.mpolynomialsystemgenerator.MPolynomialSystemGenerator.varstrs", false]], "varstrs() (sage.crypto.mq.sr.sr_generic method)": [[18, "sage.crypto.mq.sr.SR_generic.varstrs", false]], "vector() (sage.crypto.mq.sr.sr_gf2 method)": [[18, "sage.crypto.mq.sr.SR_gf2.vector", false]], "vector() (sage.crypto.mq.sr.sr_gf2n method)": [[18, "sage.crypto.mq.sr.SR_gf2n.vector", false]], "vigenerecipher (class in sage.crypto.classical_cipher)": [[8, "sage.crypto.classical_cipher.VigenereCipher", false]], "vigenerecryptosystem (class in sage.crypto.classical)": [[7, "sage.crypto.classical.VigenereCryptosystem", false]], "walsh_hadamard_transform() (sage.crypto.boolean_function.booleanfunction method)": [[5, "sage.crypto.boolean_function.BooleanFunction.walsh_hadamard_transform", false]], "welch() (in module sage.crypto.sboxes)": [[21, "sage.crypto.sboxes.welch", false]]}, "objects": {"sage.crypto": [[5, 0, 0, "-", "boolean_function"], [6, 0, 0, "-", "cipher"], [7, 0, 0, "-", "classical"], [8, 0, 0, "-", "classical_cipher"], [9, 0, 0, "-", "cryptosystem"], [13, 0, 0, "-", "lattice"], [14, 0, 0, "-", "lfsr"], [15, 0, 0, "-", "lwe"], [20, 0, 0, "-", "sbox"], [21, 0, 0, "-", "sboxes"], [22, 0, 0, "-", "stream"], [23, 0, 0, "-", "stream_cipher"], [24, 0, 0, "-", "util"]], "sage.crypto.block_cipher": [[1, 0, 0, "-", "des"], [2, 0, 0, "-", "miniaes"], [3, 0, 0, "-", "present"], [4, 0, 0, "-", "sdes"]], "sage.crypto.block_cipher.des": [[1, 1, 1, "", "DES"], [1, 1, 1, "", "DES_KS"], [1, 3, 1, "", "convert_to_vector"]], "sage.crypto.block_cipher.des.DES": [[1, 2, 1, "", "__call__"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "decrypt"], [1, 2, 1, "", "encrypt"], [1, 2, 1, "", "round"], [1, 2, 1, "", "sbox_layer"]], "sage.crypto.block_cipher.des.DES_KS": [[1, 2, 1, "", "__call__"], [1, 2, 1, "", "__init__"]], "sage.crypto.block_cipher.miniaes": [[2, 1, 1, "", "MiniAES"]], "sage.crypto.block_cipher.miniaes.MiniAES": [[2, 2, 1, "", "GF_to_binary"], [2, 2, 1, "", "GF_to_integer"], [2, 2, 1, "", "add_key"], [2, 2, 1, "", "binary_to_GF"], [2, 2, 1, "", "binary_to_integer"], [2, 2, 1, "", "block_length"], [2, 2, 1, "", "decrypt"], [2, 2, 1, "", "encrypt"], [2, 2, 1, "", "integer_to_GF"], [2, 2, 1, "", "integer_to_binary"], [2, 2, 1, "", "mix_column"], [2, 2, 1, "", "nibble_sub"], [2, 2, 1, "", "random_key"], [2, 2, 1, "", "round_key"], [2, 2, 1, "", "sbox"], [2, 2, 1, "", "shift_row"]], "sage.crypto.block_cipher.present": [[3, 1, 1, "", "PRESENT"], [3, 1, 1, "", "PRESENT_KS"], [3, 3, 1, "", "convert_to_vector"]], "sage.crypto.block_cipher.present.PRESENT": [[3, 2, 1, "", "__call__"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "decrypt"], [3, 2, 1, "", "encrypt"], [3, 2, 1, "", "linear_layer"], [3, 2, 1, "", "round"], [3, 2, 1, "", "sbox_layer"]], "sage.crypto.block_cipher.present.PRESENT_KS": [[3, 2, 1, "", "__call__"], [3, 2, 1, "", "__init__"]], "sage.crypto.block_cipher.sdes": [[4, 1, 1, "", "SimplifiedDES"]], "sage.crypto.block_cipher.sdes.SimplifiedDES": [[4, 2, 1, "", "block_length"], [4, 2, 1, "", "decrypt"], [4, 2, 1, "", "encrypt"], [4, 2, 1, "", "initial_permutation"], [4, 2, 1, "", "left_shift"], [4, 2, 1, "", "list_to_string"], [4, 2, 1, "", "permutation10"], [4, 2, 1, "", "permutation4"], [4, 2, 1, "", "permutation8"], [4, 2, 1, "", "permute_substitute"], [4, 2, 1, "", "random_key"], [4, 2, 1, "", "sbox"], [4, 2, 1, "", "string_to_list"], [4, 2, 1, "", "subkey"], [4, 2, 1, "", "switch"]], "sage.crypto.boolean_function": [[5, 1, 1, "", "BooleanFunction"], [5, 1, 1, "", "BooleanFunctionIterator"], [5, 3, 1, "", "random_boolean_function"], [5, 3, 1, "", "unpickle_BooleanFunction"]], "sage.crypto.boolean_function.BooleanFunction": [[5, 2, 1, "", "absolut_indicator"], [5, 2, 1, "", "absolute_autocorrelation"], [5, 2, 1, "", "absolute_indicator"], [5, 2, 1, "", "absolute_walsh_spectrum"], [5, 2, 1, "", "algebraic_degree"], [5, 2, 1, "", "algebraic_immunity"], [5, 2, 1, "", "algebraic_normal_form"], [5, 2, 1, "", "annihilator"], [5, 2, 1, "", "autocorrelation"], [5, 2, 1, "", "correlation_immunity"], [5, 2, 1, "", "derivative"], [5, 2, 1, "", "has_linear_structure"], [5, 2, 1, "", "is_balanced"], [5, 2, 1, "", "is_bent"], [5, 2, 1, "", "is_linear_structure"], [5, 2, 1, "", "is_plateaued"], [5, 2, 1, "", "is_symmetric"], [5, 2, 1, "", "linear_structures"], [5, 2, 1, "", "nonlinearity"], [5, 2, 1, "", "nvariables"], [5, 2, 1, "", "resiliency_order"], [5, 2, 1, "", "sum_of_square_indicator"], [5, 2, 1, "", "truth_table"], [5, 2, 1, "", "walsh_hadamard_transform"]], "sage.crypto.cipher": [[6, 1, 1, "", "Cipher"], [6, 1, 1, "", "PublicKeyCipher"], [6, 1, 1, "", "SymmetricKeyCipher"]], "sage.crypto.cipher.Cipher": [[6, 2, 1, "", "codomain"], [6, 2, 1, "", "domain"], [6, 2, 1, "", "key"]], "sage.crypto.classical": [[7, 1, 1, "", "AffineCryptosystem"], [7, 1, 1, "", "HillCryptosystem"], [7, 1, 1, "", "ShiftCryptosystem"], [7, 1, 1, "", "SubstitutionCryptosystem"], [7, 1, 1, "", "TranspositionCryptosystem"], [7, 1, 1, "", "VigenereCryptosystem"]], "sage.crypto.classical.AffineCryptosystem": [[7, 2, 1, "", "brute_force"], [7, 2, 1, "", "deciphering"], [7, 2, 1, "", "enciphering"], [7, 2, 1, "", "encoding"], [7, 2, 1, "", "inverse_key"], [7, 2, 1, "", "random_key"], [7, 2, 1, "", "rank_by_chi_square"], [7, 2, 1, "", "rank_by_squared_differences"]], "sage.crypto.classical.HillCryptosystem": [[7, 2, 1, "", "block_length"], [7, 2, 1, "", "deciphering"], [7, 2, 1, "", "enciphering"], [7, 2, 1, "", "encoding"], [7, 2, 1, "", "inverse_key"], [7, 2, 1, "", "random_key"]], "sage.crypto.classical.ShiftCryptosystem": [[7, 2, 1, "", "brute_force"], [7, 2, 1, "", "deciphering"], [7, 2, 1, "", "enciphering"], [7, 2, 1, "", "encoding"], [7, 2, 1, "", "inverse_key"], [7, 2, 1, "", "random_key"], [7, 2, 1, "", "rank_by_chi_square"], [7, 2, 1, "", "rank_by_squared_differences"]], "sage.crypto.classical.SubstitutionCryptosystem": [[7, 2, 1, "", "deciphering"], [7, 2, 1, "", "enciphering"], [7, 2, 1, "", "encoding"], [7, 2, 1, "", "inverse_key"], [7, 2, 1, "", "random_key"]], "sage.crypto.classical.TranspositionCryptosystem": [[7, 2, 1, "", "deciphering"], [7, 2, 1, "", "enciphering"], [7, 2, 1, "", "encoding"], [7, 2, 1, "", "inverse_key"], [7, 2, 1, "", "random_key"]], "sage.crypto.classical.VigenereCryptosystem": [[7, 2, 1, "", "deciphering"], [7, 2, 1, "", "enciphering"], [7, 2, 1, "", "encoding"], [7, 2, 1, "", "inverse_key"], [7, 2, 1, "", "random_key"]], "sage.crypto.classical_cipher": [[8, 1, 1, "", "AffineCipher"], [8, 1, 1, "", "HillCipher"], [8, 1, 1, "", "ShiftCipher"], [8, 1, 1, "", "SubstitutionCipher"], [8, 1, 1, "", "TranspositionCipher"], [8, 1, 1, "", "VigenereCipher"]], "sage.crypto.classical_cipher.HillCipher": [[8, 2, 1, "", "inverse"]], "sage.crypto.classical_cipher.SubstitutionCipher": [[8, 2, 1, "", "inverse"]], "sage.crypto.classical_cipher.TranspositionCipher": [[8, 2, 1, "", "inverse"]], "sage.crypto.classical_cipher.VigenereCipher": [[8, 2, 1, "", "inverse"]], "sage.crypto.cryptosystem": [[9, 1, 1, "", "Cryptosystem"], [9, 1, 1, "", "PublicKeyCryptosystem"], [9, 1, 1, "", "SymmetricKeyCryptosystem"]], "sage.crypto.cryptosystem.Cryptosystem": [[9, 2, 1, "", "block_length"], [9, 2, 1, "", "cipher_codomain"], [9, 2, 1, "", "cipher_domain"], [9, 2, 1, "", "ciphertext_space"], [9, 2, 1, "", "key_space"], [9, 2, 1, "", "period"], [9, 2, 1, "", "plaintext_space"]], "sage.crypto.cryptosystem.SymmetricKeyCryptosystem": [[9, 2, 1, "", "alphabet_size"]], "sage.crypto.key_exchange": [[10, 0, 0, "-", "catalog"], [11, 0, 0, "-", "diffie_hellman"], [12, 0, 0, "-", "key_exchange_scheme"]], "sage.crypto.key_exchange.diffie_hellman": [[11, 1, 1, "", "DiffieHellman"]], "sage.crypto.key_exchange.diffie_hellman.DiffieHellman": [[11, 2, 1, "", "compute_shared_secret"], [11, 2, 1, "", "field"], [11, 2, 1, "", "generate_public_key"], [11, 2, 1, "", "generate_secret_key"], [11, 2, 1, "", "generator"], [11, 2, 1, "", "parameters"], [11, 2, 1, "", "prime"], [11, 2, 1, "", "subgroup_size"]], "sage.crypto.key_exchange.key_exchange_scheme": [[12, 1, 1, "", "KeyExchangeScheme"]], "sage.crypto.key_exchange.key_exchange_scheme.KeyExchangeScheme": [[12, 2, 1, "", "compute_shared_secret"], [12, 2, 1, "", "generate_public_key"], [12, 2, 1, "", "generate_secret_key"], [12, 2, 1, "", "parameters"]], "sage.crypto.lattice": [[13, 3, 1, "", "gen_lattice"]], "sage.crypto.lfsr": [[14, 3, 1, "", "lfsr_autocorrelation"], [14, 3, 1, "", "lfsr_connection_polynomial"], [14, 3, 1, "", "lfsr_sequence"]], "sage.crypto.lwe": [[15, 1, 1, "", "LWE"], [15, 1, 1, "", "LindnerPeikert"], [15, 1, 1, "", "Regev"], [15, 1, 1, "", "RingLWE"], [15, 1, 1, "", "RingLWEConverter"], [15, 1, 1, "", "RingLindnerPeikert"], [15, 1, 1, "", "UniformNoiseLWE"], [15, 1, 1, "", "UniformPolynomialSampler"], [15, 1, 1, "", "UniformSampler"], [15, 3, 1, "", "balance_sample"], [15, 3, 1, "", "samples"]], "sage.crypto.lwe.LWE": [[15, 2, 1, "", "__call__"], [15, 2, 1, "", "__init__"]], "sage.crypto.lwe.LindnerPeikert": [[15, 2, 1, "", "__init__"]], "sage.crypto.lwe.Regev": [[15, 2, 1, "", "__init__"]], "sage.crypto.lwe.RingLWE": [[15, 2, 1, "", "__call__"], [15, 2, 1, "", "__init__"]], "sage.crypto.lwe.RingLWEConverter": [[15, 2, 1, "", "__call__"], [15, 2, 1, "", "__init__"]], "sage.crypto.lwe.RingLindnerPeikert": [[15, 2, 1, "", "__init__"]], "sage.crypto.lwe.UniformNoiseLWE": [[15, 2, 1, "", "__init__"]], "sage.crypto.lwe.UniformPolynomialSampler": [[15, 2, 1, "", "__call__"], [15, 2, 1, "", "__init__"]], "sage.crypto.lwe.UniformSampler": [[15, 2, 1, "", "__call__"], [15, 2, 1, "", "__init__"]], "sage.crypto.mq": [[16, 0, 0, "-", "mpolynomialsystemgenerator"], [17, 0, 0, "-", "rijndael_gf"], [18, 0, 0, "-", "sr"]], "sage.crypto.mq.mpolynomialsystemgenerator": [[16, 1, 1, "", "MPolynomialSystemGenerator"]], "sage.crypto.mq.mpolynomialsystemgenerator.MPolynomialSystemGenerator": [[16, 2, 1, "", "block_order"], [16, 2, 1, "", "polynomial_system"], [16, 2, 1, "", "random_element"], [16, 2, 1, "", "ring"], [16, 2, 1, "", "sbox"], [16, 2, 1, "", "varformatstr"], [16, 2, 1, "", "vars"], [16, 2, 1, "", "varstrs"]], "sage.crypto.mq.rijndael_gf": [[17, 1, 1, "", "RijndaelGF"]], "sage.crypto.mq.rijndael_gf.RijndaelGF": [[17, 1, 1, "", "Round_Component_Poly_Constr"], [17, 2, 1, "", "add_round_key"], [17, 2, 1, "", "add_round_key_poly_constr"], [17, 2, 1, "", "apply_poly"], [17, 2, 1, "", "block_length"], [17, 2, 1, "", "compose"], [17, 2, 1, "", "decrypt"], [17, 2, 1, "", "encrypt"], [17, 2, 1, "", "expand_key"], [17, 2, 1, "", "expand_key_poly"], [17, 2, 1, "", "key_length"], [17, 2, 1, "", "mix_columns"], [17, 2, 1, "", "mix_columns_poly_constr"], [17, 2, 1, "", "number_rounds"], [17, 2, 1, "", "shift_rows"], [17, 2, 1, "", "shift_rows_poly_constr"], [17, 2, 1, "", "sub_bytes"], [17, 2, 1, "", "sub_bytes_poly_constr"]], "sage.crypto.mq.sr": [[18, 1, 1, "", "AllowZeroInversionsContext"], [18, 3, 1, "", "SR"], [18, 1, 1, "", "SR_generic"], [18, 1, 1, "", "SR_gf2"], [18, 1, 1, "", "SR_gf2_2"], [18, 1, 1, "", "SR_gf2n"], [18, 3, 1, "", "test_consistency"]], "sage.crypto.mq.sr.SR_generic": [[18, 2, 1, "", "add_round_key"], [18, 2, 1, "", "base_ring"], [18, 2, 1, "", "block_order"], [18, 2, 1, "", "hex_str"], [18, 2, 1, "", "hex_str_matrix"], [18, 2, 1, "", "hex_str_vector"], [18, 2, 1, "", "is_state_array"], [18, 2, 1, "", "key_schedule"], [18, 2, 1, "", "key_schedule_polynomials"], [18, 2, 1, "", "mix_columns"], [18, 2, 1, "", "new_generator"], [18, 2, 1, "", "polynomial_system"], [18, 2, 1, "", "random_element"], [18, 2, 1, "", "random_state_array"], [18, 2, 1, "", "random_vector"], [18, 2, 1, "", "ring"], [18, 2, 1, "", "round_polynomials"], [18, 2, 1, "", "sbox"], [18, 2, 1, "", "sbox_constant"], [18, 2, 1, "", "shift_rows"], [18, 2, 1, "", "state_array"], [18, 2, 1, "", "sub_byte"], [18, 2, 1, "", "sub_bytes"], [18, 2, 1, "", "varformatstr"], [18, 2, 1, "", "variable_dict"], [18, 2, 1, "", "vars"], [18, 2, 1, "", "varstr"], [18, 2, 1, "", "varstrs"]], "sage.crypto.mq.sr.SR_gf2": [[18, 2, 1, "", "antiphi"], [18, 2, 1, "", "field_polynomials"], [18, 2, 1, "", "inversion_polynomials"], [18, 2, 1, "", "inversion_polynomials_single_sbox"], [18, 2, 1, "", "is_vector"], [18, 2, 1, "", "lin_matrix"], [18, 2, 1, "", "mix_columns_matrix"], [18, 2, 1, "", "phi"], [18, 2, 1, "", "shift_rows_matrix"], [18, 2, 1, "", "vector"]], "sage.crypto.mq.sr.SR_gf2_2": [[18, 2, 1, "", "inversion_polynomials_single_sbox"]], "sage.crypto.mq.sr.SR_gf2n": [[18, 2, 1, "", "antiphi"], [18, 2, 1, "", "field_polynomials"], [18, 2, 1, "", "inversion_polynomials"], [18, 2, 1, "", "is_vector"], [18, 2, 1, "", "lin_matrix"], [18, 2, 1, "", "mix_columns_matrix"], [18, 2, 1, "", "phi"], [18, 2, 1, "", "shift_rows_matrix"], [18, 2, 1, "", "vector"]], "sage.crypto.public_key": [[19, 0, 0, "-", "blum_goldwasser"]], "sage.crypto.public_key.blum_goldwasser": [[19, 1, 1, "", "BlumGoldwasser"]], "sage.crypto.public_key.blum_goldwasser.BlumGoldwasser": [[19, 2, 1, "", "decrypt"], [19, 2, 1, "", "encrypt"], [19, 2, 1, "", "private_key"], [19, 2, 1, "", "public_key"], [19, 2, 1, "", "random_key"]], "sage.crypto.sbox": [[20, 1, 1, "", "SBox"], [20, 3, 1, "", "feistel_construction"], [20, 3, 1, "", "misty_construction"]], "sage.crypto.sbox.SBox": [[20, 2, 1, "", "autocorrelation_table"], [20, 2, 1, "", "boomerang_connectivity_table"], [20, 2, 1, "", "boomerang_uniformity"], [20, 2, 1, "", "cnf"], [20, 2, 1, "", "component_function"], [20, 2, 1, "", "derivative"], [20, 2, 1, "", "difference_distribution_table"], [20, 2, 1, "", "differential_branch_number"], [20, 2, 1, "", "differential_uniformity"], [20, 2, 1, "", "fixed_points"], [20, 2, 1, "", "from_bits"], [20, 2, 1, "", "has_linear_structure"], [20, 2, 1, "", "input_size"], [20, 2, 1, "", "interpolation_polynomial"], [20, 2, 1, "", "inverse"], [20, 2, 1, "", "is_almost_bent"], [20, 2, 1, "", "is_apn"], [20, 2, 1, "", "is_balanced"], [20, 2, 1, "", "is_bent"], [20, 2, 1, "", "is_involution"], [20, 2, 1, "", "is_linear_structure"], [20, 2, 1, "", "is_monomial_function"], [20, 2, 1, "", "is_permutation"], [20, 2, 1, "", "is_plateaued"], [20, 2, 1, "", "linear_approximation_table"], [20, 2, 1, "", "linear_branch_number"], [20, 2, 1, "", "linear_structures"], [20, 2, 1, "", "linearity"], [20, 2, 1, "", "max_degree"], [20, 2, 1, "", "maximal_difference_probability"], [20, 2, 1, "", "maximal_difference_probability_absolute"], [20, 2, 1, "", "maximal_linear_bias_absolute"], [20, 2, 1, "", "maximal_linear_bias_relative"], [20, 2, 1, "", "min_degree"], [20, 2, 1, "", "nonlinearity"], [20, 2, 1, "", "output_size"], [20, 2, 1, "", "polynomials"], [20, 2, 1, "", "ring"], [20, 2, 1, "", "solutions"], [20, 2, 1, "", "to_bits"]], "sage.crypto.sboxes": [[21, 3, 1, "", "bracken_leander"], [21, 3, 1, "", "carlet_tang_tang_liao"], [21, 3, 1, "", "chi"], [21, 3, 1, "", "gold"], [21, 3, 1, "", "inversion"], [21, 3, 1, "", "kasami"], [21, 3, 1, "", "monomial_function"], [21, 3, 1, "", "niho"], [21, 3, 1, "", "v"], [21, 3, 1, "", "welch"]], "sage.crypto.stream": [[22, 1, 1, "", "LFSRCryptosystem"], [22, 1, 1, "", "ShrinkingGeneratorCryptosystem"], [22, 3, 1, "", "blum_blum_shub"]], "sage.crypto.stream.LFSRCryptosystem": [[22, 2, 1, "", "encoding"]], "sage.crypto.stream.ShrinkingGeneratorCryptosystem": [[22, 2, 1, "", "encoding"]], "sage.crypto.stream_cipher": [[23, 1, 1, "", "LFSRCipher"], [23, 1, 1, "", "ShrinkingGeneratorCipher"]], "sage.crypto.stream_cipher.LFSRCipher": [[23, 2, 1, "", "connection_polynomial"], [23, 2, 1, "", "initial_state"]], "sage.crypto.stream_cipher.ShrinkingGeneratorCipher": [[23, 2, 1, "", "decimating_cipher"], [23, 2, 1, "", "keystream_cipher"]], "sage.crypto.util": [[24, 3, 1, "", "ascii_integer"], [24, 3, 1, "", "ascii_to_bin"], [24, 3, 1, "", "bin_to_ascii"], [24, 3, 1, "", "has_blum_prime"], [24, 3, 1, "", "is_blum_prime"], [24, 3, 1, "", "least_significant_bits"], [24, 3, 1, "", "random_blum_prime"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "terms": {"": [0, 2, 3, 4, 5, 7, 13, 14, 15, 16, 17, 18, 22], "0": [1, 2, 3, 4, 5, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "00": 4, "0000": [2, 4], "000000": 15, "00000000000000000000000000000000": 17, "00000000101000000000000001111011": 17, "0000000100100011010001010110011110001001101010111100110111101111": 2, "0000110100": 4, "0001": [2, 4], "000102030405060708090a0b0c0d0e0f1011121314151617": 17, "00011010000011100011000000111101": 17, "0010": [2, 4], "00100000": 24, "00100000110011100100": 19, "0010001101111010111010101010001100000000110100010101011100001011110010010000011111100100100011001101101000001111": 23, "0010001110110000": 2, "0010010011": 4, "00100111011011001000111101111110100": 17, "001011": 22, "0011": [2, 4], "00110001001100100011001100100000001000100010000000100011": 24, "00110010001110000111110110000001": 17, "00111001110111101011111001001101110101011011101000011001100101101011001000000011100101101010111100000101110100111111101100000101110101111010111101000011": 23, "0011101000101110010011000101010100011101010000111000100100011010": 2, "00112233445566778899aabbccddeeff": 17, "00ab": 5, "01": [3, 4, 15, 18, 20], "0100": [2, 4], "01000001": 24, "010000010110001001100011": 24, "010000010110001001100011001100010011001000110011": 24, "010000100110100101101110011000010111001001111001": 7, "0100001111100011010001101101001011": 17, "01000100": 24, "010001000110111101101110001001110111010000100000011100110110100001101001011001100111010000101110": 7, "01000101011011100110001101110010011110010111000001110100001000000111010001101000011010010111001100100000011100110110010101100011011100100110010101110100001000000110110101100101011100110111001101100001011001110110010100100001": 2, "0100101101000101": 2, "0100101101011001": 2, "0100111101001011001011000010000001100101011011100110111101110101011001110110100000100000011100110110100001101001011001100111010001101001011011100110011100101110": 7, "0101": [2, 4], "0101000101110100": 2, "01010100011010000110010100100000011000100110100101101110011000010111001001111001001000000110000101101100011100000110100001100001011000100110010101110100001000000110100101110011001000000111011001100101011100100111100100100000011010010110111001110011011001010110001101110101011100100110010100101110": 7, "01010101": 4, "0101010110": 4, "0101011101100101": 2, "0110": [2, 4], "0110001001101001": 2, "01100010111101101000110010111010": 17, "0110010001100101": 2, "0110100101": 4, "0110101101100101": 2, "0111": [2, 4], "0111001001010100": 2, "01111000": 4, "01111100001010111111011000010111": 2, "0113077c165e76a8": 5, "01d": 18, "02": [3, 5], "02d": 16, "03": [1, 5, 20], "03d": 18, "04": 14, "05": [2, 21], "06": [4, 17, 21], "07": [5, 11, 12, 20], "077ce5a2f8831a5df8831a5d077ce5a26996699669699696669999665aa5a55a": 5, "08": [5, 7, 18], "09": [5, 18], "0abbacadabbacad0": 5, "0x0": [1, 3, 20], "0x0011223344556677": 3, "0x00112233445566778899aabbccddeeff": 3, "0x0101010101010101": 1, "0x0123456789abcdef": [1, 3], "0x01a1d6d039776742": 1, "0x025816164629b007": 1, "0x091989a5ae8eab21": 3, "0x1": 20, "0x10316e028c8f3b4a": 1, "0x1234": [1, 3], "0x12695bc9b7b7f8": 1, "0x133457799bbcdff1": 1, "0x1f": [1, 3], "0x1f08260d1ac2465": 1, "0x2": 20, "0x2844b365c06992a3": 3, "0x3": 20, "0x3333dcd3213210d2": 3, "0x4": 20, "0x480d39006ee762f2": 1, "0x5": 20, "0x5579c1387b228445": 3, "0x584023641aba6176": 1, "0x6": [18, 20], "0x63": 18, "0x690f5b0d9a26939b": 1, "0x6dab31744f41d700": 3, "0x7": 20, "0x7ca110454a1a6e57": 1, "0x7d404224a35bab": 1, "0x8": 20, "0x8000000000000000": 1, "0x9": 20, "0xa": 20, "0xa112ffc72f68417b": 3, "0xb": 20, "0xc": 20, "0xd": 20, "0xe": 20, "0xe72c46c0f5945049": 3, "0xf": 20, "0xffffffff11111111": 1, "0xffffffffffff": 1, "0xffffffffffffffff": 3, "0xffffffffffffffffffff": 3, "1": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24], "10": [2, 3, 4, 5, 7, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24], "100": [15, 18, 19, 20, 22, 24], "1000": [2, 4, 15, 18], "1000001100": 4, "1001": [2, 4], "10010111110000011111011011010001": 17, "10011100000100001100": 19, "101": [18, 24], "1010": [2, 4], "1010000010": 4, "1010010010": 4, "10101011100101111001101011011111100111011001011010010001100111101000110110000110110111111001111010010011100011111001011110011110100111011001101010001011110111111001011010001100110111111000100110011010100011011000011011011111100101101001000110001100100110101001110010001010100011011001101011010001": 7, "1011": [2, 4, 19], "1011000010110100110100111101111110011010100100011001000010001010100110001001011111011111100011001001011110010110100110011000101110010110100100011001100011010001": 7, "10110100": 4, "101110111001000010010001110110001000101111011111100011001001011110010110100110011000101111010001": 7, "10111101": 4, "101111111010011100111100101010100111": 17, "1014": 15, "1015": 13, "102": 18, "1024": 18, "103": 18, "103049bfb90e": 1, "1031": 15, "104": 18, "105": 18, "106": [15, 18], "1061": 15, "107": 18, "108": 18, "10806569712552630528": 1, "1084": 15, "109": 18, "11": [1, 2, 3, 4, 7, 11, 13, 14, 17, 18, 19, 20, 21, 22], "110": 18, "1100": [2, 4], "110000": 22, "1100001101111110": 2, "1100100101": 4, "1101": [2, 4], "11010011000010011010110001000011101110110100110100110010011011111100011011100111110011100111010011001110110100011100000011111011": 17, "11010101": 4, "11010111100100001010001011110010111": 17, "110111": 22, "111": 18, "1110": [2, 4], "11100000101000010110001101101001110110010010111011010001100111100000101000101111100110010010100001110101011100111001000010101000001111000101010011010001100111100111001100000001101100110110101001001000011100000101010110110101": 2, "1110011000000011111100100011011100101000000001000111000010": 17, "11101000": 4, "11101011100111110000000111001100": 17, "11109": 15, "1111": [2, 4], "11110000": 4, "1111010000101101100001101000000000000000010000000100111011": 17, "1111011": [19, 24], "11111111b29684b8": 1, "111e": 5, "112": [5, 18, 20], "113": [15, 18], "114": [15, 18], "115": [15, 18], "1159": 13, "116": 18, "117": [15, 18], "118": 18, "119": 18, "12": [2, 3, 7, 14, 15, 17, 18, 19, 20, 21, 22, 24], "120": [3, 18], "1205": 15, "121": [3, 15, 18], "122": [3, 18], "1226": 15, "123": [3, 18, 19, 24], "1234": [3, 13], "124": [1, 3, 18, 24], "1242": 15, "1248": 18, "125": [3, 15, 18], "126": [3, 15, 18], "1264": 21, "127": [3, 15, 17, 18], "128": [3, 5, 15, 17, 18], "129": 18, "13": [2, 3, 5, 7, 11, 14, 15, 18, 19, 20, 21, 22], "130": [15, 18], "131": [15, 18], "132": 18, "1322": 15, "1327": 21, "133": [15, 18], "1337": 15, "134": 18, "1341": 15, "135": 18, "1357": 15, "136": 18, "137": 18, "138": 18, "139": 18, "139680": 19, "14": [2, 3, 7, 14, 15, 17, 18, 20, 21, 22], "140": 18, "141": 18, "142": 18, "143": [15, 18], "144": 18, "1447": 15, "145": 18, "146": [15, 18], "14641": 13, "147": 18, "1473": 21, "148": 18, "149": 18, "14f9701ae35fe28c440adf4d4ea9c026": 17, "15": [1, 2, 3, 7, 14, 15, 18, 20, 21, 22], "150": 18, "151": 18, "152": 18, "153": [15, 18], "154": 18, "155": [15, 18], "156": 18, "157": 18, "158": 18, "159": 18, "159201": 19, "16": [1, 2, 3, 5, 7, 9, 14, 15, 17, 18, 19, 20, 21, 22], "160": 18, "161": 18, "162": 18, "163": [15, 18], "164": 18, "165": [15, 18], "1658": 15, "166": 18, "167": [15, 18], "168": [15, 18], "169": 18, "17": [1, 3, 7, 11, 14, 18, 19, 21, 22], "170": 18, "171": [15, 18], "172": 18, "173": 18, "174": [15, 18], "175": [15, 18], "176": 18, "177": 18, "178": 18, "179": 18, "1798": 15, "18": [3, 7, 14, 18, 21, 22], "180": 18, "181": [15, 18], "1818": 15, "182": 18, "1823": 15, "183": [15, 18], "1831": 15, "184": 18, "1849": 15, "185": 18, "186": [15, 18, 22], "187": 18, "188": 18, "189": 18, "19": [3, 7, 14, 18, 19, 21, 22], "190": [15, 18], "1906": 15, "191": [17, 18], "192": 18, "193": 18, "194": 18, "195": [15, 18], "1955": 15, "196": 18, "197": [15, 18], "1975": 15, "198": 18, "199": [15, 18], "1993": 15, "1994": 15, "1a1d6d039776742": 1, "1b02effc7072": 1, "1c8b86628e22f92fb32608c1a8d5932d": 17, "1e1d913b7274ad9b5a4ab1a5f9133b93": 17, "1st": 18, "2": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24], "20": [3, 5, 7, 14, 15, 17, 18, 20, 21, 22], "200": [15, 18], "2005": 14, "2006": 14, "2007": [7, 18], "2008": [18, 20], "2009": [2, 4, 5, 7, 18, 19, 20, 24], "201": 18, "2010": [5, 18], "2015": 17, "2016": [5, 20], "2017": 21, "2019": [1, 3, 21], "202": 18, "2024": [11, 12], "203": 18, "2035": 15, "204": 18, "205": 18, "2053": 15, "206": [15, 18], "207": 18, "208": 18, "209": 18, "21": [3, 7, 18, 19, 21], "210": [5, 18], "211": 18, "212": 18, "213": 18, "214": 18, "215": [15, 18], "216": [15, 18], "217": 18, "218": [15, 18], "219": 18, "22": [3, 7, 18, 21], "220": [5, 18], "221": 18, "222": 18, "223": [17, 18], "224": 18, "225": 18, "226": 18, "227": [15, 18], "228": 18, "229": 18, "23": [3, 7, 11, 18, 19, 21, 22, 24], "230": 18, "231": 18, "231000f2dd97": 1, "232": 18, "233": 18, "234": [15, 18], "235": 18, "236": 18, "237": 18, "238": 18, "239": [17, 18], "24": [3, 5, 7, 14, 15, 17, 18, 21, 24], "240": 18, "241": 18, "242": 18, "243": 18, "244": 18, "245": 18, "246": [15, 18], "247": [17, 18], "248": 18, "249": 18, "25": [3, 7, 18, 20, 21], "250": [15, 18], "251": [17, 18], "252": 18, "253": [17, 18], "254": [5, 17, 18, 20], "255": [15, 18], "256": 5, "25633": 20, "257": 15, "26": [3, 5, 7, 9, 18, 21], "262": 15, "268": 15, "27": [3, 18, 21], "272953": 19, "274": 15, "2742": 21, "275": 15, "28": [3, 5, 17, 18, 21, 24], "280": 15, "28001": 5, "284": 15, "2844b365c06992a3": 3, "285": 15, "286": 15, "288": 15, "29": [1, 3, 15, 18, 19, 21], "2b7e151628aed2a6abf7158809cf4f3c": 17, "2dfb02343f6d12dd09337ec75b36e3f0": 17, "2i": 21, "2k": 21, "3": [2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24], "30": [3, 11, 12, 15, 18, 20, 21], "302": 21, "304": 15, "308": 19, "3082": 13, "3086": 13, "309": 19, "31": [3, 5, 15, 18, 20, 21], "310": 19, "312": 15, "31891": 18, "32": [3, 5, 15, 17, 18, 20], "32300619509": 19, "3243f6a8885a308d313198a2e0370734": 17, "32768": 5, "328": 15, "33": [3, 5, 18], "330": 15, "331d0084b176c3fb59caa0eda271b565": 17, "331d0084b176c3fb59caa0eda271b565bb5d9a2d1e4b2892": 17, "333": 15, "336": 15, "337": 15, "34": [3, 18], "3479653279": 19, "35": [3, 18], "351": 15, "3526": 11, "36": [3, 15, 18], "36339d50f9b539269f2c092dc4406d23": 17, "36400926f9336d2d9fb59d23c42c3950": 17, "365": 15, "37": [3, 18], "37305": 11, "38": [3, 18], "386": 15, "388": 15, "3893": 18, "39": [3, 18], "3902dc1925dc116a8409850b1dfb9732": 17, "3925841d02dc09fbdc118597196a0b32": 17, "396": 15, "398": 15, "39daee38f4f1a82aaf432410c36d45b9": 17, "3b59cb73fcd90ee05774222dc067fb68": 17, "3bd92268fc74fb735767cbe0c0590e2d": 17, "3e": 18, "3e1c22c0b6fcbf768da85067f6170495": 17, "3f6c3efd5a1e5228": 1, "3t": 21, "4": [1, 2, 3, 4, 5, 7, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24], "40": [3, 18, 20, 22], "400": 15, "401": 15, "4035": 21, "408": 21, "41": [3, 15, 18], "412487": 19, "42": [1, 3, 13, 15, 18], "43": [3, 5, 18], "431": 13, "4361706974616c697a65207769746820746865207368696674206b65792": 7, "43b42af81183": 1, "44": [3, 18], "45": [3, 15, 18], "456e6372797074696f6e20262064656372797074696f6e2073686966747320616c6f6e672074686520616c7068616265742": 7, "4580": 13, "46": [3, 11, 18], "463": 15, "47": [3, 11, 18], "47092b5b": 1, "47092b5b53f372af": 1, "4743158": 11, "4769": 13, "4792": 13, "48": [1, 3, 18], "49": [3, 17, 18], "4915598f55e5d7a0daca94fa1f0a63f7": 17, "499": 19, "4af4105edbc07740e1085e12810a0812": 17, "4f7665722068657861646563696d616c2073797374656d2e": 7, "4i": 3, "5": [2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24], "50": [3, 15, 18], "506": 15, "51": [3, 18], "52": [3, 18, 19], "53": [3, 15, 18], "5368696674206d65206e6f772": 7, "5378": 13, "53f372af9f1d158b": 1, "54": [3, 18], "547": 19, "54d990a16ba09ab596bbf40ea111702f": 17, "55": [3, 18, 19], "56": [1, 3, 18, 19], "57": [3, 18, 19], "58": [3, 5, 15, 18], "59": [3, 18], "5b": 18, "5c5d51c4121f018d0f4f3e408ae9f78c": 17, "6": [2, 3, 5, 7, 14, 15, 17, 18, 19, 20, 21, 22], "60": [3, 18, 22], "600954": 15, "61": [3, 18], "62": [3, 18], "63": [1, 3, 18], "64": [1, 3, 5, 7, 9, 11, 15, 17, 18, 20, 21], "642": 15, "64311834871": 15, "65": [3, 15, 18, 24], "6577": 15, "66": [3, 18], "67": [3, 18, 24], "68": [3, 15, 18, 24], "69": [18, 24], "690f5b0d9a26939b": 1, "6dab31744f41d700": 3, "6f": 18, "7": [2, 3, 5, 7, 9, 11, 14, 17, 18, 19, 20, 21, 22, 23, 24], "70": 18, "71": 18, "72": 18, "73": [15, 18], "74": 18, "75": [15, 18], "76": [3, 15, 18], "77": [3, 18], "78": [3, 18], "78307": 19, "79": [3, 17, 18], "7969817cc5893ba6ac326e47619f5ad0": 5, "79aed9dbc9e5": 1, "7cc78d0e22754e667e24573f454a6531": 17, "8": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24], "80": [3, 18], "800": 15, "8000000000000000": 1, "80004000d08100": 1, "80121e0776fd1d8a8d8c31bc965d1fe": 17, "803372": 15, "8062": 11, "808d40f07bf": 1, "809": 15, "81": 18, "8128": 11, "8192": 11, "82": 18, "82dcbafbdeab6602": 1, "83": 18, "836": 15, "84": 18, "840": 15, "85": 18, "85e813540f0ab405": 1, "86": 18, "864": 15, "87": 18, "88": 18, "89": [15, 18], "8e": 18, "8f": 18, "8n": 24, "9": [2, 3, 5, 7, 14, 17, 18, 19, 20, 21, 22, 23], "90": 18, "91": 18, "915": 15, "915069": 15, "92": 18, "921f748fd96e937d622d7725ba8ba50c": 17, "93": 18, "933": 15, "94": 18, "95": 18, "95f8a5e5dd31d900": 1, "96": [18, 20], "961c72894526f746aa85fc920adcc719": 17, "97": [15, 18], "98": 18, "98b6c5bec9b6b1becfba75ccbec9bd75c9bdba75c8bdbebbc975b0bace73": 7, "99": 18, "9ab3b8c7cec5c9beb4b3757b75b9bab8c7cec5c9beb4b375c8bdbebbc9c875b6b1b4b3bc75c9bdba75b6b1c5bdb6b7bac973": 7, "A": [1, 2, 3, 4, 5, 7, 9, 14, 17, 18, 19, 20, 22, 24], "And": [1, 3, 7], "As": 7, "At": 3, "BES": 18, "But": [1, 2, 3], "By": [3, 17, 18, 20], "For": [3, 7, 9, 11, 13, 14, 17, 18, 19, 20, 21, 22, 24], "If": [1, 2, 3, 4, 5, 7, 11, 15, 17, 18, 19, 20, 22, 24], "In": [1, 2, 9, 14, 15, 17, 18, 19, 20, 22, 24], "It": [2, 3, 4, 9, 11, 12, 17, 18, 21, 22], "Its": [2, 4], "OR": 4, "On": 17, "One": [7, 15], "Or": [1, 2, 3, 22], "Such": 16, "That": [4, 7, 18, 19, 22], "The": [1, 2, 3, 4, 5, 7, 9, 12, 14, 15, 17, 18, 19, 20, 22, 23, 24], "Their": 0, "Then": [2, 4, 7, 19, 24], "There": [17, 20], "These": [7, 15, 17, 20], "To": [10, 15, 17], "_": [14, 15, 17, 18, 19, 20, 21], "_2": 14, "__call__": [1, 3, 15, 17], "__init__": [1, 3, 15], "__iter__": 5, "_counter": 3, "_f": 17, "_first_ngen": [5, 13, 20, 23], "_gf_to_hex": 17, "_hex_to_gf": 17, "_inversion_polynomials_single_sbox": 18, "_kei": 3, "_lwe__": 15, "_mix_columns_pc": 17, "_q": 14, "_sbox": 16, "_shift_rows_pc": 17, "_var": 16, "a00": 17, "a01": 17, "a02": 17, "a03": 17, "a10": 17, "a11": 17, "a112ffc72f68417b": 3, "a12": 17, "a13": 17, "a1f9915541020b56": 1, "a20": 17, "a21": 17, "a22": 17, "a23": 17, "a30": 17, "a31": 17, "a32": 17, "a33": 17, "a_": [7, 14, 24], "a_0": [7, 24], "a_0x_0": 14, "a_1": [7, 24], "a_2": 7, "a_i": [7, 14, 24], "a_k": 7, "a_n": 14, "aagmrz2019": 21, "ab": [15, 20], "abbdhr2019": 21, "abc": 24, "abc123": 24, "abcdef": 7, "abcdefghijklmn": 7, "abcfhllmrt2019": 21, "abl": [17, 20], "about": [7, 22], "abov": [2, 4, 7, 17, 21], "absolut": [5, 20], "absolut_ind": 5, "absolute_autocorrel": 5, "absolute_bia": 20, "absolute_ind": 5, "absolute_walsh_spectrum": 5, "abstract": [0, 12], "accept": [15, 18, 24], "access": [8, 17, 18], "accord": [2, 18, 20], "achiev": 17, "across": [2, 17], "act": 17, "action": [1, 3], "activ": 3, "activest": 14, "actual": [8, 17, 20], "ad": [4, 14, 17, 18, 20, 21], "ad0ed4ca386b6559": 3, "ad9c7e017e55ef25bc150fe01ccb6395": 17, "adapt": 22, "adcb0f257e9c63e0bc557e951c15ef01": 17, "add": [2, 3, 5, 13, 17], "add_kei": 2, "add_round_kei": [17, 18], "add_round_key_poli": 17, "add_round_key_poly_constr": 17, "add_sampl": 15, "addit": [2, 7, 15, 17], "addition": [17, 21], "addroundkei": [3, 17, 18], "adecimationcipherisaspecializedaffineciph": 7, "adklpy2014": 21, "advanc": 2, "ae": [0, 4, 17, 20, 21], "aes_mod": 18, "afb73eeb1cd1b85162280f27fb20d585": 17, "affin": [7, 8, 17, 18, 21], "affineciph": 8, "affinecipherovercapitallettersoftheenglishalphabet": 7, "affinecryptosystem": [7, 8], "after": [1, 3, 17, 18], "again": [1, 3, 17], "ahezrmofevqhtebotmzevmniqhedrekkzvmniqh": 7, "ahmp2008": 21, "aikmmnt2001": 21, "ainv": 7, "aj1996": 13, "al": [16, 18], "albrecht": [15, 16, 18, 20], "algebra": [0, 5, 17, 18], "algebraic_degre": 5, "algebraic_immun": 5, "algebraic_normal_form": [5, 20], "algorithm": [1, 2, 3, 4, 7, 13, 14, 17, 19, 20, 22, 24], "alice_pk": [11, 12], "alice_shared_secret": 11, "alice_sk": 11, "align": 3, "all": [1, 2, 3, 4, 5, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "allow": [2, 4, 5, 13, 14, 15, 17, 18, 20], "allow_zero_invers": [18, 20], "allowzeroinversionscontext": 18, "almost": 20, "along": 7, "alpha": 20, "alphabet": [7, 9], "alphabet_s": [7, 9], "alphabeticstr": [7, 9], "alphabeticstringmonoid": 7, "alprrv2019": 21, "alreadi": 18, "also": [1, 2, 3, 4, 5, 7, 13, 15, 17, 18, 19, 20, 22, 24], "alter": 17, "altern": [17, 18], "alwai": [17, 18], "amount": 2, "an": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24], "analysi": 5, "ani": [3, 5, 7, 9, 11, 15, 17, 19, 20, 22, 24], "annihil": 5, "anoth": [4, 5, 17, 22], "antiphi": 18, "anubi": 21, "anubis_s0": 21, "anubis_s1": 21, "anyth": 22, "aolzopmajyfwavzfzaltnlulyhspglzaoljhlzhyjpwoli": 7, "ap": [7, 19], "apart": [19, 22, 24], "apn": 20, "apn_6": 21, "appear": 18, "append": 18, "appli": [1, 2, 3, 4, 7, 9, 17, 18, 19], "applic": [17, 18], "apply_poli": 17, "apply_poly_result": 17, "approach": 17, "appropri": [1, 3], "approxim": 20, "apq": 7, "apqnbkqxpmz": 7, "apqnbqvocaqvouwlctizizqbpumbqk": 7, "ar": [2, 3, 4, 5, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24], "arbitrari": [1, 3, 17], "arg": [5, 18, 20], "argft": 7, "argument": [7, 17, 18], "aria_s2": 21, "arith": 22, "arithmet": [5, 7], "ark_pc": 17, "around": [3, 7], "arrai": [14, 17, 18], "arrang": 2, "articl": [14, 19, 21], "ascii": [19, 24], "ascii_integ": 24, "ascii_to_bin": 24, "ascon": 21, "aspect": 17, "aspn": 14, "assert": 15, "assign": [18, 20], "associ": [2, 17], "assum": [7, 9, 14, 15, 24], "ast": [19, 22], "asymmetr": 9, "asymptot": 13, "atedzmpzbbrdzhbptmzheotmprqhteotmvmniqreranbhb": 7, "attempt": [7, 18, 19, 22, 24], "attribut": [16, 17], "attributeerror": 16, "aut": 9, "author": [1, 2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24], "autocorrel": [5, 14, 20], "autocorrelation_t": 20, "automat": 17, "ava2017": 21, "avail": [7, 15, 21], "avenmrjqsjhsvfanyaoam": 7, "averag": 13, "avoid": 15, "azqigwalgenigvpqdguauvqigafgjqzahhgnqigvpqd": 7, "b": [1, 2, 3, 4, 5, 7, 13, 15, 17, 18, 19, 20, 23, 24], "b4": 18, "b_": [3, 14, 19, 24], "b_0": [2, 3, 4, 14, 19, 24], "b_1": [2, 4, 7, 19, 24], "b_2": [2, 4, 7], "b_3": [2, 4], "b_4": 4, "b_5": 4, "b_6": 4, "b_7": 4, "b_8": 4, "b_9": 4, "b_dual": 13, "b_dual_alt": 13, "b_i": [4, 7, 14, 24], "b_j": 3, "b_k": 7, "b_primal": 13, "ba": 7, "back": [7, 19], "backward": 7, "bak1998": 21, "balanc": [5, 14, 15, 20], "balance_sampl": 15, "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 18, 19, 20, 22, 23], "base_r": [18, 20], "basi": [13, 18, 20], "basic": [2, 4, 5, 17, 18, 20], "basis_matrix": 5, "bb": 22, "bbbcdglllmppsw2019": 21, "bbishar2015": 21, "bbkmw2013": 21, "bbs1982": 22, "bbs1986": 22, "bc": 24, "bc2003": 20, "bcdgnpy2019": 21, "bcdm2019": 21, "bcgkkklnprrty2012": 21, "bct": 20, "bd2004": 21, "bdmw2010": 21, "bear": [2, 17, 18], "becaus": [17, 18, 19], "becom": [2, 4], "been": [4, 14, 15, 17], "begin": [2, 3, 4, 10, 14], "beginn": [2, 4, 17, 18], "behavior": 17, "behaviour": 15, "being": [2, 7, 17, 19, 22, 24], "bel2011": 21, "belong": [2, 7], "below": [17, 20, 22], "belt": 21, "bent": [5, 20], "berlekamp": 14, "berlekamp_massei": 14, "beta": 20, "better": 18, "between": [2, 14, 15, 17, 19, 20, 22, 24], "bewar": [19, 22, 24], "bf": [14, 21], "bg": 19, "bg1985": 19, "bi": [2, 15], "bia": 20, "biaffin": 18, "biaffine_onli": 18, "big": [3, 7, 20], "big_endian": 20, "biject": 7, "bilinear": 18, "bin": [2, 4, 5, 19, 24], "bin_to_ascii": [19, 24], "binari": [2, 4, 5, 7, 9, 17, 19, 23, 24], "binary_to_gf": 2, "binary_to_integ": 2, "binarystr": [2, 4, 7, 9, 19, 23, 24], "binv": 7, "bit": [1, 2, 3, 4, 5, 11, 18, 19, 20, 21, 22, 24], "bitstr": 20, "bitwis": 3, "bjklmpsss2016": 21, "bklpprsv2007": [3, 20, 21], "blake_1": 21, "blake_9": 21, "blanklin": [2, 7, 17, 18, 24], "block": [1, 2, 3, 4, 7, 9, 16, 17, 18, 19, 20, 24], "block_ciph": [1, 2, 3, 4], "block_length": [2, 4, 7, 9, 17], "block_ord": [16, 18], "blocksiz": 16, "blum": [0, 22, 24], "blum_blum_shub": 22, "blum_goldwass": 19, "blumgoldwass": 19, "bmatrix": 2, "bmod": [7, 19, 22], "bob_pk": 11, "bob_shared_secret": 11, "bob_sk": [11, 12], "bodi": 17, "bool": 11, "bool_list": 5, "boolean": [0, 1, 3, 4, 7, 18, 20], "boolean_funct": 5, "booleanfunct": [5, 21], "booleanfunctioniter": 5, "booleanpolynomi": 5, "booleanpolynomialr": [5, 18], "boomerang": 20, "boomerang_connectivity_t": 20, "boomerang_uniform": 20, "both": [2, 3, 7, 15, 17, 18, 19, 22], "bottom": 2, "bound": [5, 15, 19, 22, 24], "box": [0, 2, 3, 4, 18], "bppsst2017": 21, "bpu2016": 21, "bq": 19, "bqr": 7, "bqroclryqna": 7, "bqrocrwpdbrwpvxmdujajarcqvncrl": 7, "br2000a": 21, "br2000b": 21, "br2000c": 21, "bracken": 21, "bracken_leand": 21, "brackenleand": 21, "bralea2008": 21, "branch": 20, "break": [18, 24], "bremen": 16, "brock": [14, 22], "brought": [2, 17, 18], "brute": 7, "brute_forc": 7, "bshgut": 7, "build": 17, "built": 17, "bwpserieyycsegyiwregplwricfgwplwrqrodfcpcboygi": 7, "byte": 18, "c": [1, 2, 3, 4, 7, 9, 14, 15, 18, 19, 20, 21, 24], "c000": 18, "c000000000000000": 3, "c001": 18, "c002": 18, "c003": 18, "c1": 3, "c2": 3, "c3": 3, "c4": 3, "c4cedcabe694694e4b23bfdd6fb522fa": 17, "c81677bc9b7ac93b25027992b0261996": 17, "c_": 14, "c_0": [2, 14], "c_0x_": 14, "c_1": [2, 14, 19], "c_1x": 14, "c_2": [2, 19], "c_3": 2, "c_i": [19, 24], "c_k": 14, "c_kx_n": 14, "c_nx": 14, "c_t": 19, "cabraca": 15, "cach": 20, "cadfd0ddeb97d4dc97d5d6ee95": 7, "caesar": 7, "calcul": [11, 17, 20], "call": [1, 3, 4, 5, 7, 9, 12, 14, 15, 16, 17, 18, 20], "callabl": [15, 17], "camellia": 21, "can": [1, 2, 3, 4, 5, 7, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24], "candid": [7, 21], "cannot": [5, 17, 19], "capit": 7, "carefulli": 20, "carlet": 21, "carlet_tang_tang_liao": 21, "carlettangtangliao": 21, "carmichael": 22, "carmichael_lambda": 22, "case": [1, 5, 7, 9, 13, 14, 15, 22], "cat": [7, 23], "catalog": 10, "catalogu": 10, "caus": 17, "cb": 18, "cb3d8b0e17f5": 1, "cbbqpwbypmtqupocjwfqpwcjbypmtqupo": 7, "cc": [4, 14], "cd54c7283864c0c55d4c727e90c9a465": 17, "cdc": 13, "cdjn2019": 21, "cdl2015": [20, 21], "cdlnpps2019": 21, "cdot": [5, 7, 19, 20, 24], "certain": 14, "cf": [1, 18, 20], "cgw2013": 15, "chang": [1, 3, 5, 11, 12, 17, 20], "change_r": 13, "chapui": [5, 20], "charact": [7, 19, 24], "characterist": 7, "check": [3, 7, 11, 17, 20, 22, 24], "chi": [7, 21], "chi_squar": 7, "chiasmu": 21, "child": [9, 12], "chisquar": 7, "choos": [17, 19, 20, 24], "chosen": [15, 19, 20], "chpss18": 20, "cilipadi": 21, "cipher": [0, 1, 2, 3, 4, 5, 7, 9, 14, 17, 20, 22], "cipher_codomain": 9, "cipher_domain": 9, "ciphertext": [1, 2, 3, 4, 7, 9, 17, 18, 19], "ciphertext_spac": 9, "circ": [2, 9, 17], "circular": 4, "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23], "classic": [0, 9], "classical_ciph": 8, "claus": 20, "clefia_s0": 21, "clefia_s1": 21, "clefia_ss0": 21, "clefia_ss3": 21, "close": 24, "clyde": 21, "cmea": 21, "cmr2005": 18, "cmr2006": 18, "cn2019": 21, "cnf": 20, "code": [1, 3, 14, 20], "codomain": [6, 9], "coeffici": [13, 14, 15, 20], "coerceabl": 11, "coercibl": 18, "col": [17, 18], "collect": 21, "column": [2, 7, 17, 18, 20], "com": [5, 11, 14], "combin": [5, 18, 20], "combinat": 20, "command": 0, "common": 22, "commonli": 7, "compact": 13, "compar": [2, 4, 17, 18, 19], "comparison": 17, "complet": [19, 20], "complex": [17, 20], "compon": [15, 17, 20], "component_funct": 20, "compos": 17, "composit": [2, 17], "comput": [5, 11, 12, 14, 17, 18, 19, 20, 22], "compute_shared_secret": [11, 12], "concaten": [2, 20], "concept": 19, "concern": 20, "condit": [14, 18], "congruenc": 22, "congruent": [19, 22, 24], "conjug": 18, "conjugaci": 18, "conjunct": 20, "connect": [13, 14, 20, 22, 23], "connection_polynomi": 23, "consequ": [7, 17], "consid": [2, 3, 7, 14, 18, 20, 24], "consist": [2, 3, 7, 18, 19, 20], "constant": [2, 5, 14, 18, 20], "constr": 17, "constraint": 18, "construct": [1, 3, 5, 15, 16, 17, 18, 20, 21], "constructor": [15, 17, 18], "consult": 20, "contain": [1, 3, 5, 9, 11, 12, 13, 19], "content": 3, "control": [1, 3, 18], "conveni": [7, 8], "convers": 3, "convert": [1, 2, 3, 7, 15, 18, 19, 20, 24], "convert_to_vector": [1, 3], "cookbook": 14, "coral": 21, "corner": 2, "correct": [15, 17, 18], "correct_onli": 18, "correl": [5, 20], "correlation_immun": 5, "correspond": [1, 2, 3, 4, 5, 7, 17, 19, 20, 24], "correspondingli": 17, "could": [17, 19, 22], "cours": [1, 3], "cr": 7, "crack": 14, "craft": 21, "creat": [1, 3, 7, 8, 11, 14, 18, 20, 23], "creation": [14, 17], "crspdmszrob": 7, "crspdsxqecsxqwynevkbkbsdrwodsm": 7, "cryptanalysi": [7, 17, 20], "cryptanalyt": [2, 17, 18], "cryptanalyz": 7, "crypto": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "cryptograph": [0, 11, 15, 20, 24], "cryptographi": [13, 15, 20], "crypton_0_5": 21, "crypton_1_0_s0": 21, "crypton_1_0_s3": 21, "cryptosystem": [0, 23], "cs_cipher": 21, "cs_cipher_f": 21, "cs_cipher_g": 21, "csa": 21, "css": 21, "ctihvu": 7, "ctihvukdibatlixkluhibupoatinvieehbupoatin": 7, "cttl": 21, "cttl2014": 21, "current": [3, 7, 10, 12], "custom": 18, "cyclotom": [13, 15], "cypherpunk": 21, "cyxngghaxfkvscjtvtcxrpxaxknihextcyxtyhgcfhsyxk": 7, "d": [2, 3, 5, 7, 9, 14, 15, 18], "d0a2ed2fa124": 1, "d1876c0f79c4300ab45594add66ff41f": 17, "d1c4941f7955f40fb46f6c0ad68730ad": 17, "d_": 9, "d_0": 2, "d_1": [2, 19], "d_2": [2, 19], "d_3": 2, "dai": 7, "daniel": 15, "darmstadt": 13, "data": [1, 2, 4], "david": [7, 14, 19], "dblock": 21, "dca2007": 21, "dcsw2008": 21, "dda97ca4864cdfe06eaf70a0ec0d7191": 17, "ddt": 20, "de": [0, 2, 13, 16], "deactiv": 3, "decim": [7, 23], "decimating_ciph": 23, "deciph": 7, "decipher": 7, "decrypt": [1, 2, 3, 4, 7, 8, 9, 17, 19], "def": [15, 17], "default": [1, 2, 3, 4, 5, 7, 9, 11, 13, 15, 17, 18, 19, 20, 21, 22, 24], "defghi": 7, "defin": [2, 4, 5, 7, 9, 11, 12, 14, 16, 17, 20, 21, 23], "definit": 21, "deglex": 18, "degre": [5, 13, 15, 18, 20, 21, 22], "delo": 7, "delta": [15, 20], "delta_f": 5, "delta_i": 20, "delta_o": 20, "demmmpu2019": 21, "demonstr": [1, 3, 17], "dems2016": 21, "denot": [2, 4, 7, 20], "dens": [9, 13, 18], "densiti": 18, "depend": 5, "deprec": [5, 11], "deprecationwarn": 5, "deriv": [5, 9, 18, 20], "des_k": 1, "des_s1_1": 21, "des_s1_4": 21, "des_s8_4": 21, "describ": [1, 2, 3, 4, 17, 19, 20, 22], "descript": [3, 19], "design": [2, 4], "desir": [1, 3, 5, 22], "despit": 17, "det": 13, "detail": [5, 11, 15], "determin": [13, 17, 18, 19, 20, 24], "deviat": 15, "dgmpps2019": 21, "dh": 11, "diagram": 9, "dict": 7, "dictionari": [7, 16, 17, 18, 20, 21], "differ": [2, 5, 7, 13, 17, 18, 20, 24], "difference_distribution_t": [18, 20], "differenti": [20, 21], "differential_branch_numb": 20, "differential_uniform": [20, 21], "diffi": 0, "diffie_hellman": [10, 11], "diffiehellman": [10, 11], "diffusion_matrix": 18, "digit": [3, 5], "dim": 5, "dimac": 20, "dimacs_headless": 20, "dimens": [4, 5, 7, 13, 15, 17, 18], "dimension": 18, "direct": [5, 20], "direct_result": 17, "directli": [1, 2, 3, 8, 9, 12, 17, 20], "dirgetnorshiyranytgrstqfhiruerzzgstqfhiru": 7, "disabl": 18, "discret": 15, "discrete_gaussian_integ": 15, "discrete_gaussian_polynomi": 15, "discretegaussiandistributionintegersampl": 15, "discretegaussiandistributionpolynomialsampl": 15, "discuss": [17, 22], "displai": [7, 14, 17], "disregard": 15, "distanc": 5, "distinct": [19, 22, 24], "distribut": [7, 15, 18, 20], "disturb": 15, "divid": 19, "do": [1, 3, 7, 11, 17, 18, 19, 22], "dob1999a": 21, "dob1999b": 21, "doctest": [1, 3, 5, 11, 18], "document": [7, 15], "doe": [3, 7, 8, 17, 20], "dofinalround": [1, 3], "domain": [6, 7, 9, 19, 23], "don": 7, "done": 7, "dot": [3, 4, 7, 14, 19, 20, 22], "dot_product": 15, "dpvar2000": 21, "dr2002": [17, 21], "drawn": 15, "drygascon128": 21, "drygascon256": 21, "dsneuhiummaeuomishuonzshiarosnzshkhqxranadqmom": 7, "dst": 7, "dstqentaspc": 7, "dstqetyrfdtyrxzofwlclctesxpetn": 7, "du2018": 20, "dual": 13, "dujiwv": 7, "dump": 5, "dunkelman": 20, "dure": 17, "dyrugtkgaaeugiakytgirnytkehiyrnytstqfheredqaia": 7, "e": [1, 2, 3, 5, 7, 9, 14, 15, 17, 18, 19, 20, 21, 23, 24], "e1": [18, 23], "e2": [18, 21, 23], "e767290ddfc6414e3c50a444bec081f0": 17, "e9": 18, "e_": 9, "e_a": 7, "e_k": 9, "each": [2, 3, 4, 7, 14, 15, 17, 18, 19, 20, 22, 24], "earlier": 21, "easi": [17, 21], "easili": [1, 3, 9, 18, 20], "educ": [1, 2, 3, 4, 11], "edwt": 7, "ef": 18, "effect": [1, 2, 7], "effici": 13, "eight": 3, "either": [1, 3, 5, 7, 13, 15, 17, 18, 20], "elem_typ": 18, "element": [1, 2, 3, 5, 6, 7, 9, 11, 14, 15, 16, 17, 18, 20, 21], "eleph": 21, "elid": 7, "els": 15, "emploi": 17, "empti": [4, 7, 19, 24], "enabl": [3, 17], "enciph": 7, "encod": [2, 4, 7, 9, 16, 19, 20, 22, 23, 24], "encrypt": [0, 1, 2, 3, 4, 7, 8, 9, 13, 15, 17, 18], "encryptwithinversekei": 7, "end": [2, 3, 4, 14], "endia": 20, "endian": [3, 18, 20], "endpoint": 15, "english": 7, "enhanc": 17, "enocoro": 21, "enocoro_s4": 21, "enough": [1, 7], "ensur": [17, 19, 22], "entir": 17, "entri": [2, 15, 17, 18, 20], "entrywis": 17, "enumer": 5, "epic": 18, "epsilon": 14, "equal": [1, 2, 3, 5, 7, 17, 18, 20, 22], "equat": [15, 16, 17, 18, 20], "equiv": [7, 19, 24], "equival": [7, 17, 18, 20, 21], "error": 15, "essenc": 17, "essenti": 17, "esss2011": 21, "et": [16, 18], "etc": [14, 17], "etofvijvnnbfvpnjtivpoatijbsptoatilirysbobernpn": 7, "ets2006a": 21, "ets2011": 21, "etu": 7, "etun": 7, "eturfoubtqd": 7, "eturfuzsgeuzsyapgxmdmduftyqfuo": 7, "euclidean": 19, "euler": 7, "euler_phi": [7, 15], "evalu": [15, 17, 18], "even": [14, 19, 21], "everi": [2, 3, 9, 17, 20], "evkjxw": 7, "exactli": 7, "examin": 20, "exampl": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "except": [17, 18], "exchang": 0, "exclus": [3, 4], "execut": 2, "exhaust": [7, 15], "exist": [5, 7, 15, 17, 20], "expand": [4, 17], "expand_kei": 17, "expand_key_poli": 17, "expand_round_key_poli": 17, "expect": [5, 7], "expected_ciphertext": 17, "expected_plaintext": 17, "experiment": [1, 3, 11, 12], "explain": 20, "explicit": 18, "explicitli": [17, 18], "expon": [18, 21], "express": 18, "extend": [9, 19, 21], "extens": [5, 17, 18, 20, 21], "extra": 18, "extract": 3, "ey": 2, "f": [3, 4, 5, 7, 14, 16, 17, 18, 19, 20, 21], "f3": 20, "f4bcd45432e554d075f1d6c51dd03b3c": 17, "f5": 20, "f_a": 7, "f_attr": 17, "f_m": 7, "fa636a2825b339c940668a3157244d17": 17, "factor": 19, "fail": 18, "failur": 5, "fall": 19, "fals": [1, 3, 4, 5, 11, 13, 15, 17, 18, 19, 20, 21, 24], "famili": [2, 17, 18], "famou": 13, "fantoma": 21, "far": [19, 22, 24], "faster": 14, "fde3bad205e5d0d73547964ef1fe37f1": 17, "fe7b5170fe7c8e93477f7e4bf6b98071": 17, "featur": 11, "fed": 4, "fed2015": 21, "feedback": [0, 22, 23], "feel": 13, "feistel": 20, "feistel_construct": 20, "few": 22, "ff": 23, "ff87968431d86a51645151fa773ad009": 17, "fgbcfuvsgvatzr": 7, "fi": 5, "fides_5": 21, "fides_6": 21, "field": [2, 5, 11, 14, 15, 16, 17, 18, 20, 21, 22, 23], "field_polynomi": 18, "file": [1, 3], "fill": 14, "filter": 5, "final": [4, 15, 17, 19], "find": [18, 19], "finit": [2, 11, 14, 15, 17, 18, 20, 21, 23], "finite_r": 5, "finitefield": [2, 23], "first": [2, 4, 5, 7, 14, 15, 17, 18, 19, 20], "fit": 20, "fitzpatrick": 15, "fix": [15, 19, 20], "fixed_point": 20, "flag": [1, 2, 3, 13, 17], "flatten": 19, "flexaead": 21, "florian": 15, "fly": 21, "fn": 17, "fn2": 17, "fo": [3, 5], "focu": 24, "follow": [1, 2, 3, 4, 7, 9, 10, 13, 15, 18, 19, 20, 21, 24], "foral": 5, "forc": [7, 17], "forkskinny_4": 21, "forkskinny_8": 21, "form": [5, 7, 14, 15, 17, 19, 20], "formal": 11, "format": [5, 13, 16, 17, 18, 20], "formula": 14, "foundat": [2, 4], "fountain_1": 21, "fountain_2": 21, "fountain_3": 21, "fountain_4": 21, "four": [2, 3], "fourier": 20, "fourier_coeffici": 20, "fourth": 14, "fox": 21, "fox_s1": 21, "fox_s3": 21, "frac": [7, 14], "framework": [2, 17, 18], "free": [7, 9, 13, 23], "freemodule_submodule_with_basis_integ": 13, "frequenc": 7, "friedrich": 21, "from": [1, 2, 3, 4, 5, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "from_bit": 20, "from_integ": 18, "full": [9, 11, 18], "fulli": 17, "function": [0, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "further": 20, "furthermor": 19, "futurewarn": 11, "fuv": 7, "fuvsgpvcur": 7, "fuvsgvathfvatzbqhynenevguzrgvp": 7, "fwlkyx": 7, "g": [2, 5, 11, 14, 15, 17, 18, 20, 23], "g_attr": 17, "gagn": 17, "gamma": 2, "gap": [17, 18], "gaussian": 15, "gcd": [7, 19], "gear": 7, "gen": [14, 18, 20], "gen_lattic": 13, "gener": [0, 2, 5, 7, 11, 12, 14, 17, 19, 20, 22, 23, 24], "generate_public_kei": [11, 12], "generate_secret_kei": [11, 12], "generateroundkei": 3, "geq": [2, 14, 21, 24], "get": [1, 4, 11, 12, 15, 17, 20], "getter": 17, "gf": [0, 1, 2, 3, 5, 11, 14, 18, 20, 21, 22, 23], "gf2": 18, "gf_to_binari": 2, "gf_to_integ": 2, "ggns2013": 21, "ghorbeidojmhfoviferojetwmhozboaarjetwmhoz": 7, "ghynvipvrrlnvfrphivfyehiplafhyehiditqalylgtrfr": 7, "gift": 21, "github": [5, 11], "give": [14, 18, 20], "given": [3, 4, 7, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24], "gjenramxepyjdezmdanepatcyjelreoonpatcyjel": 7, "gjkprss2019": 21, "global": [10, 15], "glsv2014": 21, "glsvjgk2014": 21, "gm2002": 13, "gnl2011": 21, "go": 7, "go1967": 14, "goal": [2, 4], "goe": 4, "gol1968": 21, "gold": [7, 20, 21], "golden_s0": 21, "golden_s3": 21, "goldstein": 13, "goldwass": 0, "goldwasser_cryptosystem": 19, "golomb": 14, "good": 7, "gost2_1": 21, "gost2_2": 21, "gost_1": 21, "gost_8": 21, "gost_ietf_1": 21, "gost_ietf_8": 21, "gplv2": 19, "greater": [2, 20], "groebner": [18, 20], "groebner_basi": 18, "group": [7, 9, 11, 19, 22], "gsvxzgrmgsvszg": 7, "guarante": [19, 20], "gvvetsmezbsfiuwfkuelbnetsgfvotmlewti": 7, "gvw": 7, "gvwthqwdvsf": 7, "gvwthwbuigwbuacrizofofwhvashwq": 7, "gxmlzy": 7, "g\u00f6pfert": 15, "h": [5, 7, 14, 19, 20], "ha": [2, 3, 4, 5, 7, 9, 15, 16, 17, 18, 20, 21, 24], "hadamard": 5, "hadi": 7, "half": [4, 5, 14], "halfbyt": 18, "ham": [5, 20], "hand": [15, 17], "handl": 20, "hard": 0, "has_blum_prim": 24, "has_linear_structur": [5, 20], "hat": [7, 20, 23], "have": [1, 2, 3, 7, 14, 17, 18, 19, 20, 22, 24], "hcte": 7, "he2002": 20, "header": 20, "hellman": 0, "help": [2, 4, 17, 18, 20], "henc": [9, 15, 17, 24], "here": [1, 2, 3, 4, 7, 15, 18, 19, 20, 22], "hermite_form": 13, "hex": [1, 3, 5, 17, 18], "hex_str": 18, "hex_str_matrix": 18, "hex_str_vector": 18, "hexadecim": [3, 5, 7, 9], "hexadecimalstr": [7, 9], "hide": 15, "highest": 20, "hill": [7, 8, 9], "hillciph": 8, "hillcryptosystem": [7, 9], "hline": [2, 4], "hogan": 19, "hold": [7, 13, 14], "hom": 9, "how": [7, 17, 18, 19, 20, 22, 24], "howev": [4, 7, 14, 15, 17, 18], "hsryeldarovswrqdwlyrolubvsrierttyolubvsri": 7, "http": [5, 11, 14, 20, 21], "hummingbird_2_s1": 21, "hummingbird_2_s4": 21, "hwx": 7, "hwxuirxewtg": 7, "hwxuixcvjhxcvbdsjapgpgxiwbtixr": 7, "hyena": 21, "hynmaz": 7, "hypothes": 22, "i": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "i_": 3, "i_0": 3, "i_j": 3, "iceberg": 21, "iceberg_s0": 21, "iceberg_s1": 21, "ideal": [13, 18], "ident": [2, 17, 18], "identifi": [7, 9], "idufhsyxutednulynsfutsvgedurhummftsvgedur": 7, "ifgnpchpbbtnplbhfcplgofchtalfgofcrcveatgtivblb": 7, "ignor": [13, 18, 20], "ikmp2019a": 21, "ikmp2019b": 21, "ikmpsss2019": 21, "illustr": 7, "imag": 9, "immun": 5, "implement": [1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 17, 20, 21], "impli": 20, "import": [1, 2, 3, 4, 5, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "imposs": 17, "improv": [18, 20], "includ": [7, 9, 10, 15, 18], "inclus": [2, 15, 21], "inconsist": 18, "increas": [1, 3, 7], "independ": 5, "index": [0, 5, 15, 16, 17, 18, 20], "indexerror": [5, 15, 20], "indic": [5, 10, 18, 20], "indirect": [1, 3, 5, 20], "individu": [2, 17], "inequ": 7, "inform": [7, 11], "informatik": [13, 16], "infti": 14, "inherit": 9, "init": 5, "initi": [1, 2, 3, 4, 7, 11, 12, 14, 17, 18, 19, 20, 21, 23, 24], "initial_permut": 4, "initial_st": 23, "initialis": [1, 3], "inject": 9, "input": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "input_s": [20, 21], "insecur": 7, "instanc": [1, 3, 9, 11, 12, 14, 15, 18, 20], "instanti": [8, 17], "instead": [5, 8, 13, 17, 19], "int": [5, 14, 22], "integ": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "integer_to_binari": 2, "integer_to_gf": 2, "integermod_abstract": 11, "integermodr": 7, "integr": [13, 19], "intend": 17, "intent": 17, "interchang": [2, 4], "interest": 18, "interfac": [7, 8, 11], "intern": [1, 15, 20], "interpolation_polynomi": [18, 20], "interpret": [5, 7, 20], "interv": 24, "introduc": 3, "introduct": 20, "inurfsbfllhrfdlbnsfduynsbhednuynstsvgehuhivldl": 7, "inv_affin": 17, "invari": 5, "invers": [1, 3, 4, 7, 8, 13, 17, 18, 20, 21], "inverse_kei": 7, "inversion_onli": 18, "inversion_polynomi": 18, "inversion_polynomials_single_sbox": 18, "invert": [7, 20], "invk": 7, "invok": [1, 3, 17], "involut": 20, "iraqi": 21, "iraqi_block_ciph": 21, "is_1": 23, "is_2": 23, "is_almost_b": 20, "is_apn": 20, "is_balanc": [5, 20], "is_bent": [5, 20], "is_blum_prim": [19, 24], "is_involut": 20, "is_linear_structur": [5, 20], "is_monomial_funct": 20, "is_permut": [20, 21], "is_plateau": [5, 20], "is_prim": 24, "is_state_arrai": 18, "is_symmetr": 5, "is_vector": 18, "isap": 21, "iscream": 21, "isn": 18, "issk2009": 21, "issu": [5, 11, 15, 18, 20], "item": [5, 7, 18, 21], "iter": [1, 3, 5, 19, 20, 21], "its": [2, 3, 5, 7, 9, 11, 17, 18, 19, 20, 21, 22], "itself": [17, 20], "ixi": 7, "ixyvjsyfxuh": 7, "ixyvjydwkiydwcetkbqhqhyjxcuji": 7, "izonba": 7, "j": [2, 3, 5, 14, 15, 17, 18], "jack": 7, "japocb": 7, "jh_s0": 21, "jh_s1": 21, "jill": 7, "johnson": 18, "join": 19, "joyner": [14, 19], "jspuobmoeecuoaemsboaprsbmchasprsbibwvhcpcjwea": 7, "just": 2, "jyvkskqpelaykpv": 7, "jyz": 7, "jyzwktzgyvi": 7, "jyzwkzexljzexdfulcririzkydvkzt": 7, "k": [1, 2, 3, 4, 5, 7, 9, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24], "k000": [17, 18], "k001": [17, 18], "k002": [17, 18], "k003": [17, 18], "k010": 17, "k011": 17, "k012": 17, "k013": 17, "k020": 17, "k021": 17, "k022": 17, "k023": 17, "k030": 17, "k031": 17, "k032": 17, "k033": 17, "k1": [1, 3], "k100": [17, 18], "k101": [17, 18], "k102": 18, "k103": 18, "k110": 17, "k111": 17, "k120": 17, "k121": 17, "k130": 17, "k131": 17, "k2": 3, "k200": 18, "k201": 18, "k202": 18, "k203": 18, "k3": 3, "k323": 17, "k331": 17, "k4": 3, "k412": 17, "k500": 17, "k501": 17, "k502": 17, "k503": 17, "k510": 17, "k511": 17, "k512": 17, "k513": 17, "k520": 17, "k521": 17, "k522": 17, "k523": 17, "k530": 17, "k531": 17, "k532": 17, "k533": 17, "k56": 1, "k600": 17, "k601": 17, "k602": 17, "k603": 17, "k610": 17, "k611": 17, "k612": 17, "k613": 17, "k620": 17, "k621": 17, "k622": 17, "k623": 17, "k630": 17, "k631": 17, "k632": 17, "k633": 17, "k64": 1, "k712": 17, "k721": 17, "k723": 17, "k900": 17, "k901": 17, "k902": 17, "k903": 17, "k910": 17, "k911": 17, "k912": 17, "k913": 17, "k920": 17, "k921": 17, "k922": 17, "k923": 17, "k930": 17, "k931": 17, "k932": 17, "k933": 17, "k_": [3, 18], "k_0": [2, 3, 4], "k_1": [2, 4, 7, 9], "k_2": [2, 4, 7, 9], "k_3": 4, "k_4": 4, "k_5": 4, "k_6": 4, "k_7": 4, "k_i": [2, 3, 7, 18], "k_j": 18, "k_r": 7, "kal1992": 21, "kalyna_pi0": 21, "kalyna_pi3": 21, "kappa": 3, "kappa_": 3, "kappa_0": 3, "kas1971": 21, "kasami": 21, "kbqpdc": 7, "ke": 2, "keccak": 21, "keep": 3, "kei": [0, 1, 2, 3, 4, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 23], "kesm1998": 1, "key_chr": 17, "key_exchang": [10, 11, 12], "key_exchange_schem": 12, "key_length": 17, "key_schedul": [17, 18], "key_schedule_polynomi": 18, "key_spac": 9, "key_stat": 17, "key_vr": 17, "keyexchangeschem": [11, 12], "keyschedul": [1, 3], "keysiz": [1, 3], "keystream_ciph": 23, "keyword": [17, 18], "kg2016": 21, "khazad": 21, "khazad_p": 21, "khazad_q": 21, "ki": [7, 18], "kj": 18, "kk2003": 11, "kkpsssyyllchh2004": 21, "klein": 21, "kllrsy2014": 21, "klpr2010": 21, "kmautom2000": 21, "knirveqbitcnhidqheritexgcnipvissrtexgcnip": 7, "knot": 21, "know": 14, "known": 14, "knu2005": 21, "kohel": 7, "kuznechik": 21, "kuznyechik": 21, "kuznyechik_nu0": 21, "kuznyechik_nu1": 21, "kuznyechik_phi": 21, "kuznyechik_sigma": 21, "kwarg": [17, 18], "kwd": [5, 15, 18], "ky": 2, "kza": 7, "kzaxlafymkafyegvmdsjsjalzewlau": 7, "kzaxluahzwj": 7, "l": [1, 3, 4, 5, 7, 13, 14, 15, 18, 22, 24], "l0": 18, "l1": 18, "l2": 18, "l3": 18, "l_1": 4, "l_2": 4, "l_n": 4, "lab": 7, "labymbgznlbgzfhwnetktkbmafxmbv": 7, "labymvbiaxk": 7, "lai": [2, 4], "laigl": [5, 20], "lam": 20, "lamaisonblanch": 7, "lambda": [1, 3, 5, 15, 22], "larg": [11, 19, 22, 24], "larger": [4, 18], "last": [1, 3, 4, 5, 7, 15, 16, 17, 18, 19, 20], "lat": 20, "lat_abs_bia": 20, "latter": [1, 8], "lattic": [0, 15], "laurentseriesr": 14, "layer": [3, 21], "lb": 15, "lblock_0": 21, "lblock_9": 21, "lbound": [19, 22, 24], "lcrqed": 7, "leander": 21, "learn": [15, 17, 18], "least": [3, 11, 19, 22, 24], "least_significant_bit": [19, 24], "leav": [1, 2], "left": [2, 3, 4, 14], "left_shift": 4, "leftmost": [3, 4], "len": [2, 4, 5, 7, 15, 18, 20, 24], "length": [1, 2, 3, 4, 5, 7, 9, 14, 16, 17, 18, 19, 20, 21, 22, 24], "leo": 21, "leq": [2, 3, 7, 14, 18, 19, 24], "less": [1, 2, 3], "lester": 7, "let": [2, 4, 7, 10, 14, 19, 22, 24], "letter": 7, "level": 3, "lex": [18, 20], "lexicograph": [18, 20], "lfloor": 19, "lfsr": [0, 5, 23], "lfsr_autocorrel": 14, "lfsr_connection_polynomi": [14, 22], "lfsr_sequenc": 14, "lfsrcipher": 23, "lfsrcryptosystem": [9, 22, 23], "liao": 21, "lib": [7, 11, 13, 15, 17, 18, 19, 20, 24], "lie": [9, 22], "lightweight": 3, "like": [1, 2, 3, 5, 7, 16, 17, 18], "lilliput": 21, "lim": 21, "lim2001": 21, "lim_": 14, "limit": 15, "lin": 18, "lin_matrix": 18, "lindner": 13, "lindnerpeikert": 15, "line": 7, "linear": [0, 3, 5, 7, 15, 18, 20, 22, 23], "linear_approximation_t": 20, "linear_branch_numb": 20, "linear_lay": 3, "linear_structur": [5, 20], "linearfunctionsforencryptinganddecrypt": 7, "link": 5, "list": [1, 2, 3, 4, 5, 7, 14, 15, 16, 17, 18, 20, 21, 24], "list_to_str": 4, "literatur": [15, 20], "littl": [3, 18, 20], "live": 15, "ll": 2, "llycl2005": 21, "lm2006": 13, "load": 5, "log": 20, "log_2": 19, "long": [11, 14, 17, 18], "longer": [7, 17, 19], "longermessageismoreinformationforcryptanalysi": 7, "longmapsto": 2, "longrightarrow": 7, "look": [1, 3], "lookup": 20, "low": 14, "lower": [19, 22, 24], "lower_bound": [15, 19, 22], "lower_left": 13, "lower_right": 13, "lp2007": 21, "lp2011": 15, "lpr2010": 15, "lst": 2, "ltd06": 21, "lucifer_s0": 21, "lucifer_s1": 21, "luffa": 21, "luffa_v1": 21, "luka": [1, 3, 21], "lwc": 21, "lwe": [0, 13], "m": [2, 5, 7, 9, 13, 15, 18, 19, 20, 22, 23, 24], "m_": 7, "m_1": 19, "m_2": 19, "m_i": 19, "m_t": 19, "macri": [11, 12], "made": [15, 18], "mae": 2, "magma_1": 21, "magma_8": 21, "mai": [9, 15, 20], "main": 24, "mainli": 20, "major": 18, "makarim": [5, 20], "make": [17, 19, 22, 24], "malb": 16, "mandatori": 18, "mani": [2, 9, 14, 19, 22, 24], "manner": 17, "manti": 21, "manual": 20, "map": [2, 4, 7, 9, 14, 16, 17, 18, 20, 21], "mapsto": [5, 20, 21], "mark": 11, "martin": [15, 16, 18, 20], "mas1969": 14, "mas1994": 21, "massei": 14, "master": 3, "master_kei": 3, "masterkei": 1, "mat": 2, "match": [18, 20], "mate": 7, "mathcal": 9, "mathrm": [9, 20], "matric": [2, 7, 9, 17, 18], "matrix": [2, 7, 9, 13, 14, 17, 18, 20], "matrixspac": [2, 7, 9, 18], "max_degre": 20, "max_n": 18, "maxim": [5, 18, 20], "maximal_difference_prob": 20, "maximal_difference_probability_absolut": 20, "maximal_linear_bias_absolut": 20, "maximal_linear_bias_rel": 20, "maximum": 5, "mayb": 18, "mayer": 13, "mbc": 7, "mbcznchaomchagixofululcnbgyncw": 7, "mbcznwcjbyl": 7, "mc_pc": 17, "mcp": 17, "md2": 21, "mdsrfe": 7, "me": 7, "mean": 17, "meant": [1, 3, 9], "measur": 7, "messag": [1, 2, 3, 7, 9, 15, 17, 19], "method": [1, 2, 3, 5, 7, 11, 17, 18, 20], "mib": 21, "michael": [13, 15], "midori_sb0": 21, "midori_sb1": 21, "might": [11, 18, 19, 20, 22, 24], "mike": 19, "min_": 20, "min_degre": 20, "mind": 3, "minh": [2, 4, 7, 19, 24], "mini": [0, 4, 17, 18], "minia": 2, "minim": [5, 14, 20], "minimum": 20, "minu": 20, "misc": [13, 22], "miscellan": 24, "mischnei": 13, "misti": 20, "misty_construct": 20, "mix": [2, 17], "mix_column": [2, 17, 18], "mix_columns_matrix": 18, "mix_columns_poli": 17, "mix_columns_poly_constr": 17, "mixcolumn": [17, 18], "mod": [4, 24], "modifi": [14, 17], "modp": 11, "modul": [0, 5, 7, 9, 11, 12, 13, 15, 20, 21], "modular": [7, 13], "modulo": [7, 9, 15, 19, 22, 24], "modulu": 15, "monoid": [7, 9, 23], "monomi": [18, 20, 21], "monomial_funct": 21, "more": [7, 11, 13, 15, 17, 20], "moreov": 14, "most": [1, 3, 5, 7, 15, 16, 17, 18, 20], "move": [3, 7], "mp2019": 21, "mpolynomialsystemgener": [16, 18], "mq": [16, 17, 18, 20], "mr2002": 18, "msg": 16, "mstar": 18, "multipl": [2, 4, 7, 17, 19, 22, 24], "multipli": 2, "multivari": [17, 20], "must": [1, 2, 3, 4, 5, 7, 11, 14, 15, 17, 18, 19, 20, 22, 24], "mvov1996": [19, 22], "my": 17, "my_poly_constr": 17, "mychr": 17, "mychr02": 17, "mychr12": 17, "mychr22": 17, "mychr32": 17, "mykeychr": 17, "mykeychr010": 17, "mykeychr121": 17, "n": [2, 4, 5, 7, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24], "n_0": 4, "n_1": 4, "n_2": 4, "n_3": 4, "n_b": 17, "n_k": 17, "n_r": 17, "n_t": 17, "name": [5, 10, 13, 15, 16, 17, 18, 20, 21, 23], "namespac": 10, "natur": [15, 18], "nb": 17, "ncd": 7, "ncdaodibpndibhjypgvmvmdochzodx": 7, "ncdaoxdkczm": 7, "ncol": 2, "ne": 9, "necessari": 17, "necessarili": 7, "need": [5, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 22, 24], "nehcivkissuciwskeviwhfevkupwehfevovabpuhunasw": 7, "neither": 18, "neq": 20, "net": 7, "netsgf": 7, "network": 3, "new": [15, 17, 18], "new_gener": 18, "new_stat": 17, "newd": 21, "next": [4, 15], "next_prim": 15, "ngen": 7, "nguyen": [2, 4, 7, 19, 24], "nibbl": [2, 3], "nibble_sub": 2, "niho": 21, "nile": 18, "ning": 7, "nist": 21, "nk": 17, "no_decrypt": 17, "no_invers": 17, "noekeon": 21, "nois": 15, "non": [3, 4, 7, 17, 18, 19, 24], "none": [1, 3, 5, 7, 9, 13, 15, 16, 17, 18, 19, 20, 21, 22], "nonlinear": [5, 20, 21], "nonneg": 2, "nontrivi": 5, "nonzero": [5, 7, 20], "nor": [9, 18], "normal": [5, 20], "notat": [3, 7, 20], "note": [2, 4, 5, 15, 17, 18, 19, 20], "noth": 17, "notic": 14, "notimplementederror": 16, "now": [2, 4, 7, 18, 19, 20], "nr": [17, 18], "nrow": 2, "ntl": 13, "ntri": [19, 22, 24], "ntru": 13, "number": [1, 2, 3, 4, 5, 7, 9, 14, 15, 17, 18, 19, 20, 22, 24], "number_round": 17, "numer": 18, "numpi": 15, "nvariabl": 5, "nwhiuvfmhopwehsfevihovabpwhcuhlliovabpwhc": 7, "nx2019": 21, "o": [14, 20], "o_m": 7, "object": [1, 3, 5, 8, 13, 16, 17, 18, 20], "observ": 7, "obtain": [1, 2, 3, 4, 5, 19, 20, 24], "obviou": 3, "occur": 20, "occurr": 7, "oct": 5, "octal": [7, 9], "octalstr": [7, 9], "od": 7, "odd": [19, 20, 21, 24], "odebpejcqoejcikzqhwnwnepdiapei": 7, "odebpyeldan": 7, "offer": 21, "offset": 16, "often": 20, "ofuthg": 7, "ogkrkgbddp2015": 21, "ohsrnadnppfrnvpdhanvschadfevhschajabwefsfobpvp": 7, "ok": 7, "old": 5, "omit": [1, 3, 18], "one": [1, 2, 3, 7, 13, 14, 15, 17, 18, 19, 20, 24], "ones": 5, "onli": [1, 2, 3, 4, 5, 7, 9, 11, 14, 17, 18, 22, 24], "oper": [2, 3, 4, 17, 18], "oplu": [3, 4, 5, 19, 20], "optimal_s0": 21, "optimal_s15": 21, "option": [7, 15, 18, 20], "oracl": 0, "orang": 21, "order": [2, 5, 7, 9, 15, 16, 17, 18, 19, 20], "ored": 3, "org": 20, "organ": 17, "origin": [1, 2, 3, 4, 7, 17, 19, 22], "other": [9, 13, 15, 17, 18, 19, 22, 24], "otherwis": [1, 3, 9, 11, 20, 24], "our": [15, 17, 24], "out": [1, 4, 5, 20], "output": [1, 2, 3, 4, 5, 7, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24], "output_s": 20, "over": [2, 5, 7, 9, 11, 15, 17, 18, 20, 21, 23], "own": [15, 17, 19, 22], "p": [1, 2, 3, 4, 5, 7, 11, 14, 15, 16, 18, 19, 20, 22, 23, 24], "p000": 18, "p001": 18, "p002": 18, "p003": 18, "p1": 3, "p2": 3, "p3": 3, "p4": 3, "p_": 4, "p_4": 4, "p_8": 4, "p_i": 19, "packag": 20, "padto": [3, 5], "pafoylkyggsoyegkalyeftalksbeaftalilcvbsfspcgeg": 7, "page": [0, 7, 19, 22], "pair": [7, 9, 18, 19], "pan": 7, "panda": 21, "paper": [18, 22], "parallel": 3, "paramet": [2, 4, 5, 11, 12, 15, 18, 20, 22], "parameteris": 15, "parameteriz": [2, 17, 18], "parent": [6, 8, 15, 18, 23], "pari": [7, 11, 13, 15, 19, 24], "pariti": [1, 19, 24], "pars": 20, "part": 18, "particular": [9, 17, 18, 19, 22, 24], "pass": [1, 3, 15, 17, 18, 22, 24], "pbori": [5, 18, 20], "pdict": 7, "pearson": 7, "pearsontest": 7, "pef": 7, "pefcqfkdrpfkdjlarixoxofqejbqfz": 7, "pefcqzfmebo": 7, "pefysltwfibeafgtalyfilcvbefosfddyilcvbefo": 7, "per": 15, "perfect": 20, "perform": [1, 2, 3, 4, 7, 11, 17, 18, 19, 20, 22, 24], "period": [7, 9, 14, 22], "permut": [1, 3, 4, 5, 7, 9, 20], "permutation10": 4, "permutation4": 4, "permutation8": 4, "permute_substitut": 4, "perrin": 21, "peter": 7, "pgvuih": 7, "pha2002": [2, 4], "phan": [2, 4], "phi": [7, 15, 17, 18], "phi_poli": 17, "phi_poly_constr": 17, "photon": 21, "pi": [2, 11], "pi_f": 4, "picaro": 21, "piccolo": 21, "pick": 4, "pinv": 4, "pk": 11, "place": [1, 3], "plain": 17, "plaintext": [1, 2, 3, 4, 7, 9, 16, 17, 18, 19], "plaintext_spac": 9, "plaintxt": [2, 4], "plateau": [5, 20], "player": 3, "pleas": 5, "plist": 7, "pm": 5, "pm2019": 21, "pmod": [7, 19, 24], "pohe": 7, "point": [14, 18, 20], "poli": [15, 17, 23], "poly_constr": 17, "poly_constr_attr": 17, "poly_method": 17, "polybori": 18, "polynomi": [0, 5, 13, 14, 15, 17, 20, 22, 23], "polynomial_constr": 17, "polynomial_system": [16, 18], "polynomialr": [13, 18, 20, 23], "popcount": 5, "posit": [2, 3, 4, 5, 7, 17, 18, 19, 21, 22, 24], "possibl": [1, 2, 3, 7], "possibli": 7, "post": 3, "postfix": 18, "potenti": [14, 17], "power": [5, 15, 20], "pp2010": 11, "pq": [19, 22], "pr": 20, "practic": [2, 4], "prc2012": 21, "pre": 22, "precis": 15, "precomput": 18, "presenc": 24, "present": [0, 20, 21, 22], "present_k": 3, "preserv": [2, 4], "press": 10, "prevent": 18, "previou": [2, 7, 17], "pride": 21, "prikei": 19, "primal": [11, 13], "prime": [7, 11, 19, 22, 24], "primes_first_n": 19, "princ": 21, "print": [7, 16, 18, 20, 21, 24], "printciph": 21, "prior": [2, 19], "privat": [9, 19], "private_kei": 19, "probabilist": [0, 11], "probabl": [7, 15, 20], "problem": 15, "procedur": [14, 19], "process": [4, 7, 13, 20], "produc": [1, 4, 7], "product": [1, 3, 19, 20, 22], "project": 18, "proof": [11, 22], "properti": [5, 9, 14, 18, 20], "proport": 14, "propos": [13, 15], "prost": 21, "provid": [3, 7, 8, 15, 17, 18, 19, 20, 21, 22], "pseudo": 14, "pseudorandom": 22, "pubkei": 19, "public": [6, 9, 11, 12, 13, 19], "public_kei": 19, "publickeyciph": 6, "publickeycryptosystem": [9, 19], "pure": 18, "purpos": [2, 4, 17, 18, 21, 24], "py": 14, "pygost": 21, "pyjamask_3": 21, "pyjamask_4": 21, "python": [1, 2, 3, 4, 5, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "q": [13, 15, 19, 22], "qameleon": 21, "qarma_sigma0": 21, "qarma_sigma1": 21, "qarma_sigma2": 21, "qfg": 7, "qfgdragnfcp": 7, "qfgdrglesqglekmbsjypypgrfkcrga": 7, "qhwvji": 7, "qt": 2, "quadrat": [15, 17, 19, 22], "question": 13, "quit": 17, "quotient": 13, "qvetrgabefuvlenalgtefgdsuvehremmtfgdsuveh": 7, "r": [1, 4, 5, 7, 13, 18, 19, 20], "r1": 18, "r2": 18, "r_": 7, "radix": [7, 9], "radix64str": [7, 9], "rais": [18, 20], "randint": [4, 7], "random": [2, 4, 5, 7, 11, 13, 14, 15, 16, 18, 19, 21, 22, 24], "random_": 18, "random_blum_prim": [19, 22, 24], "random_boolean_funct": 5, "random_el": [2, 16, 18], "random_kei": [2, 4, 7, 19], "random_state_arrai": 18, "random_vector": 18, "randomli": 19, "randstat": 13, "rang": [1, 2, 3, 4, 5, 7, 15, 17, 18, 20, 21, 24], "rank": 7, "rank_by_chi_squar": 7, "rank_by_squared_differ": 7, "rapidli": 14, "rather": 18, "ratio": 7, "rc": 18, "rcpc": 17, "read": 4, "readabl": 13, "real": 3, "realnumb": 15, "reason": [3, 22], "rec_0": 21, "recent": [1, 3, 5, 15, 16, 17, 20], "recogn": 17, "recommend": 17, "recov": [4, 7, 15, 18, 24], "rectangl": 21, "recurs": [14, 17], "reduc": [1, 2, 3, 4, 13, 14, 20], "reduct": 13, "refactor": 21, "refer": [7, 11, 13, 15, 18, 19, 20], "reg09": 15, "reg2005": 13, "regardless": 7, "regev": [13, 15], "regist": [0, 3, 22, 23], "rel": 7, "relat": [5, 13, 18, 19, 20], "relationship": [7, 9], "releas": 19, "relev": [9, 13, 22], "reli": 15, "reliabl": 7, "relicens": 19, "remain": 17, "remus_4": 21, "remus_8": 21, "repeat": 7, "replac": [17, 18], "repr_long": 18, "repres": [2, 4, 5, 13, 15, 17, 18, 19, 20, 21], "represent": [0, 1, 2, 3, 4, 13, 15, 17, 18, 19, 24], "reproduc": 14, "requir": [11, 19], "reset": 15, "residu": [7, 19, 22], "resili": 5, "resiliency_ord": 5, "resist": 20, "respect": [2, 4, 7, 18, 19, 20], "respons": [9, 12, 19, 22], "rest": [17, 20], "restrict": 15, "result": [1, 2, 3, 4, 5, 7, 17, 18, 19, 20, 22, 24], "result_nd": 17, "result_wd": 17, "return": [1, 2, 3, 4, 5, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 24], "revers": [2, 3, 7, 14, 18], "reverse_vari": 18, "revert": 17, "rewrit": 19, "rfc": 11, "rfloor": 19, "rgf": 17, "rgh": 7, "rghesbhogdq": 7, "rgheshmftrhmflnctkzqzqhsgldshb": 7, "rh2003b": 21, "richard": 13, "right": [2, 3, 14, 15, 20], "rightarrow": [9, 14], "rightmost": 4, "rijndael": [0, 18], "rijndael_gf": 17, "rijndaelgf": 17, "ring": [0, 5, 9, 16, 18, 20], "ringlindnerpeikert": 15, "ringlw": 15, "ringlweconvert": 15, "rio2019": 21, "rixwkj": 7, "rkei": 2, "rlindner": 13, "rlwe": 15, "rm": 9, "rmfiuhyuoosiuwoymhuwfbmhysvwmfbmhghetvsfsreowo": 7, "robert": 15, "role": 2, "roman": 7, "romulu": 21, "rotat": [2, 3], "round": [1, 2, 3, 11, 16, 17, 18, 20, 21], "round_component_nam": 17, "round_component_poly_constr": 17, "round_count": 3, "round_kei": [1, 2, 3, 17], "round_polynomi": 18, "row": [2, 4, 7, 13, 17, 18, 20], "rss": 7, "rt": 2, "ru": 21, "run": [4, 14], "rusydi": [5, 20], "s000": 18, "s001": 18, "s002": 18, "s003": 18, "s1": [15, 20], "s100": 18, "s101": 18, "s102": 18, "s103": 18, "s1998": 21, "s1999": [1, 21], "s2": 20, "s3": 20, "s4": 21, "s5": 21, "s_": 18, "s_0": 4, "s_1": 4, "s_poli": 20, "saa2011": 21, "safer": 21, "sage": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "sage_ev": 18, "sagemath": [5, 11], "sageobject": [1, 2, 3, 4, 5, 12, 15, 16, 17, 20], "said": [5, 20], "same": [2, 4, 7, 9, 17, 18, 24], "sampl": [1, 15], "sampler": 15, "sat": 20, "satisfi": [7, 14, 18, 19, 20], "satlib": 20, "saturnin_0": 21, "saturnin_1": 21, "sb_pc": 17, "sbox": [1, 2, 3, 4, 16, 18, 20, 21], "sbox_const": 18, "sbox_lay": [1, 3], "sboxlay": 3, "sc2000_4": 21, "sc2000_5": 21, "sc2000_6": 21, "scalar": 15, "scale": [0, 2, 4, 20], "sch1996": 4, "schaefer": 4, "schedul": [1, 3, 17, 18], "scheme": [0, 19], "schneider": [13, 15], "sco1985": 21, "scream": 21, "sde": 4, "sea": 21, "search": [0, 7], "second": [2, 4, 17], "secret": [2, 4, 7, 9, 11, 12, 15], "secret_dist": 15, "secret_kei": [11, 12], "section": [11, 14, 19, 22], "secur": [2, 3, 4, 11, 15], "see": [5, 7, 10, 11, 15, 17, 18, 19, 20, 21, 22, 24], "seed": [13, 15, 19, 22], "seed_s0": 21, "seed_s1": 21, "seek": 17, "select": [17, 22], "self": [1, 3, 5, 11, 16, 18, 20], "sens": [17, 18], "separ": 4, "sequenc": [0, 7, 18, 22], "serpent_s0": 21, "serpent_s7": 21, "serpent_type_s0": 21, "serpent_type_s19": 21, "set": [2, 5, 7, 11, 13, 15, 17, 18, 24], "set_gener": 9, "set_random_se": [13, 15], "shadow": 21, "shall": 15, "shamash": 21, "share": [11, 12], "shi": 7, "shibvowzilehdijwdobilofyehirviggblofyehir": 7, "shift": [0, 2, 4, 7, 8, 9, 17, 22, 23], "shift_row": [2, 17, 18], "shift_rows_matrix": 18, "shift_rows_poli": 17, "shift_rows_poly_constr": 17, "shiftciph": [7, 8], "shiftcipheroncapitallettersoftheenglishalphabet": 7, "shiftcryptosystem": [7, 8, 9], "shiftingusingmodulararithmet": 7, "shiftrow": [17, 18], "shiftyourgear": 7, "short": 7, "shortcut": 3, "should": [2, 3, 7, 8, 9, 11, 12, 14, 17, 18, 19, 22, 24], "show": [9, 18, 20], "shrink": [22, 23], "shrinkinggeneratorciph": 23, "shrinkinggeneratorcryptosystem": [9, 22, 23], "shub": [19, 22], "shuffl": 20, "side": 15, "sigma": [4, 15], "sigma_": 2, "sign": 20, "signifi": [1, 2, 3], "signific": [3, 18, 19, 22, 24], "significantli": [2, 4], "sihmas2011": 21, "similar": 17, "similarli": [7, 17], "simpl": [1, 3, 17, 20], "simpli": 17, "simplifi": [0, 2], "simplifiedd": 4, "sinc": [1, 3, 4, 7, 17], "singl": [2, 3, 17, 18], "singular": [18, 20], "sinv": 20, "sixteen": 3, "size": [3, 4, 7, 11, 13, 14, 17, 18, 20, 21, 23], "sjyxlk": 7, "sk": 11, "sketch": 22, "skinny_4": 21, "skinny_8": 21, "skipjack": 21, "skwwhf1998": 21, "slightli": [15, 18], "slot": 7, "slow": 17, "slwvrehrttjvrzthlerzwglehjizlwglenefaijwjsftzt": 7, "small": [0, 2, 4, 19, 20, 22, 24], "smaller": [7, 20], "smallest": [5, 24], "smash_256_s1": 21, "smash_256_s3": 21, "smmk2013": 21, "sms2019": 21, "sms4": 21, "snep": 7, "sneprcihedonxevixcpedcfqonebrewwpdcfqoneb": 7, "snow_3g_sq": 21, "so": [1, 3, 7, 9, 10, 17, 18, 19, 22, 24], "softwar": 19, "sole": 17, "solut": [16, 18, 20], "solv": 15, "solver": 20, "some": [2, 3, 5, 7, 9, 14, 15, 17, 22, 24], "someth": 18, "somewhat": 16, "sophist": 17, "sor1984": 21, "sort": [5, 7, 18, 20, 21], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "sp": 3, "space": [2, 5, 7, 9, 15, 18, 19, 24], "span": [18, 20], "special": [7, 9, 13], "specif": [5, 9, 12, 15, 17, 18], "specifi": [2, 3, 4, 7, 18, 22, 24], "spectral": 5, "spectrum": [5, 20], "spgq2006": 21, "spirit": 4, "spook": 21, "sprql2004": 21, "sqrt": 5, "squar": [5, 7], "squared_differ": 7, "sr": [0, 2, 17, 20], "sr2": 18, "sr3": 18, "sr_gener": 18, "sr_gf2": 18, "sr_gf2_2": 18, "sr_gf2n": 18, "sr_pc": 17, "srang": [5, 20], "ssami2007": 21, "stad": 7, "stage": 3, "standard": [1, 2, 4, 15, 18, 20], "star": 18, "start": 2, "stat": 15, "state": [1, 3, 17, 18, 23], "state_arrai": 18, "state_chr": 17, "state_vr": 17, "statement": 20, "statist": [5, 7, 14], "std": 15, "stddev": 15, "stenn": [1, 3, 21], "step": 17, "sti2006": 7, "stop": 7, "stopshiftingm": 7, "str": [4, 7, 18, 19, 22], "stream": [0, 14], "stream_ciph": 23, "streebog": 21, "stribog": 21, "string": [1, 2, 3, 4, 5, 7, 9, 13, 16, 17, 18, 19, 20, 22, 23, 24], "string_to_list": 4, "strip": [7, 20], "strong": 20, "strongli": 17, "structur": [2, 4, 5, 15, 17, 18, 20], "studi": [2, 4, 5, 17, 18], "stw2013": 21, "sub": [2, 18, 19, 20, 24], "sub_byt": [17, 18, 20], "sub_bytes_poli": 17, "sub_bytes_poly_constr": 17, "subbyt": [17, 18], "subclass": 15, "subgroup": 11, "subgroup_s": 11, "subject": [12, 18], "subkei": [4, 17, 18], "subseteq": 13, "subspac": 5, "substack": 20, "substitut": [2, 3, 4, 7, 8, 9, 20], "substitutionciph": 8, "substitutioncryptosystem": [7, 9], "suffici": [19, 22, 24], "suitabl": [2, 17, 18], "sum": [5, 7], "sum_": [5, 7, 14, 20], "sum_of_square_ind": 5, "suppli": 17, "support": [3, 7, 18], "suppos": [7, 20], "sure": [19, 22, 24], "sv2000": 21, "swap": 1, "swifft": 13, "switch": 4, "sycon": 21, "symbol": [5, 11, 13, 15, 18, 19, 20], "symboliclog": 20, "symmetr": [2, 5, 6, 9, 20], "symmetrickeyciph": [6, 8, 23], "symmetrickeycryptosystem": [7, 9, 22], "system": [0, 7, 15, 17], "syytiytt2002": 21, "t": [5, 7, 13, 18, 19, 21], "tab": 10, "tabl": [2, 3, 5, 18, 20], "tabular": [2, 4], "tahehtnitaceht": 7, "take": [1, 3, 5, 9, 11, 14, 17, 18, 20], "taken": [2, 19], "tang": 21, "tcnoablsnuvcknylkbonubghvcnianrroubghvcni": 7, "teach": [2, 4, 17, 18], "technic": 15, "techniqu": [2, 17, 18], "temporarili": 18, "term": [2, 14, 16, 17, 18, 20], "test": [3, 7, 11, 13, 15, 17, 18, 19, 24], "test_consist": 18, "tgif": 21, "th": [2, 4, 17, 18, 19], "than": [2, 4, 7, 14, 17, 18, 20], "theaffinecryptosystemgeneralizestheshiftciph": 7, "thecatinthehat": [7, 23], "thei": [15, 18, 19, 24], "them": [17, 20], "therefor": [2, 5, 7], "theshiftcryptosystemgeneralizesthecaesarciph": 7, "theta": 2, "thi": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24], "think": 15, "third": 20, "thoma": 17, "thorough": [2, 4], "those": [4, 5, 7, 15, 16, 17, 19, 22], "though": 17, "thought": 2, "thousand": 17, "three": [2, 5, 14, 17, 20], "through": [3, 4, 5, 7, 15, 17, 18, 19], "thu": [2, 3, 4, 7, 18, 20], "tigfeyoubqosmg": 7, "tij": 7, "tijgudjqif": 7, "tijgujohvtjohnpevmbsbsjuinfujd": 7, "tim": 22, "time": [2, 3, 4, 5, 7, 14, 17, 18, 20], "timothi": 14, "tkzyml": 7, "to_bit": 20, "toi": 11, "too": [1, 3, 11], "tool": [2, 4, 17, 18], "top": [2, 3, 7], "total": [2, 20, 24], "toward": 20, "tr": 5, "trace": 21, "traceback": [1, 3, 5, 15, 16, 17, 20], "transform": [5, 17, 18, 20], "transit": 8, "transpos": [7, 13], "transposit": [7, 9], "transpositionciph": 8, "transpositioncryptosystem": [7, 9], "treatment": 20, "triangular": 13, "trifl": 21, "true": [1, 2, 3, 4, 5, 6, 7, 11, 13, 15, 17, 18, 19, 20, 21, 23, 24], "truth": [5, 20], "truth_tabl": 5, "truthtabl": 20, "try": 18, "tsli": 7, "tu": 13, "tulaivcieeyaisecuvislruvcynsulruvqvgdnylytges": 7, "tupl": [5, 7, 15, 16, 18, 20], "ture": 21, "turn": 9, "tweak": 3, "twine": 21, "two": [2, 3, 4, 5, 14, 17, 18, 19, 20, 22, 24], "twofish_p0": 21, "twofish_p1": 21, "twofish_q0_t0": 21, "twofish_q0_t3": 21, "twofish_q1_t0": 21, "twofish_q1_t3": 21, "typ": 18, "type": [5, 10, 13], "typeerror": [5, 17, 20], "typic": [15, 16, 20], "typo": 5, "u": [1, 5, 14, 17, 19, 20, 21, 24], "ub": 15, "ubound": [19, 22, 24], "ubq": 19, "udcikmp11": 21, "udcikmp2011": 21, "ujk": 7, "ujkhvekrjgt": 7, "ujkhvkpiwukpioqfwnctctkvjogvk": 7, "ulaznm": 7, "ultra": 3, "unabl": 5, "unchang": 2, "under": [5, 14, 19, 22], "undergo": 4, "underli": 18, "understand": [2, 4, 17, 18], "understood": [16, 18], "unfortun": 17, "uni": 16, "uniform": [15, 20, 21], "uniformli": 15, "uniformnoiselw": 15, "uniformpolynomialsampl": 15, "uniformsampl": 15, "uniqu": [2, 7, 13], "univari": [15, 20], "unknown": 5, "unlik": 17, "unpickl": 5, "unpickle_booleanfunct": 5, "up": [4, 7], "updat": 3, "upper": [7, 19, 22, 24], "upper_bound": [15, 19, 22], "upstream": [5, 18, 20], "us": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "usabl": 18, "usag": [1, 3, 17], "user": [7, 8, 15, 18], "usual": [3, 4, 15, 16], "util": [0, 17, 19], "v": [1, 3, 5, 7, 18, 19, 20, 21], "v_b": 5, "val": 5, "valid": [1, 4, 7, 17], "valu": [1, 2, 3, 4, 5, 7, 17, 18, 19, 20, 22], "valueerror": [1, 3, 5, 17], "van": [2, 4, 7, 19, 24], "vap": 19, "var": [16, 18], "varformatstr": [16, 18], "variabl": [5, 16, 17, 18, 20], "variable_dict": 18, "variable_nam": 18, "variant": [0, 2, 4, 17], "varieti": 18, "variou": [7, 9, 17, 20], "varphi": 7, "varstr": [16, 18], "vebganyaqqogamqyenambdenyotmebdenunihtoboviqmq": 7, "vector": [1, 3, 4, 5, 13, 15, 16, 18, 20], "veri": [7, 17, 20], "verifi": [18, 22], "version": [1, 2, 3, 4, 7, 11, 12, 17, 18, 19, 21, 24], "via": 8, "view": 14, "vigener": [7, 8, 9], "vigenereciph": 8, "vigenerecryptosystem": [7, 9], "vincent": [11, 12], "vj2004": 21, "vkl": 7, "vkliwbrxujhdu": 7, "vkliwflskhu": 7, "vkliwlqjxvlqjprgxodudulwkphwlf": 7, "vmbaon": 7, "vn": 18, "vstacpucoogacyouspcytbspugnystbspepirngtgvioyo": 7, "vytcgpbmtenystobspctepirnytagtddcepirnyta": 7, "w": [5, 18, 20], "w0": 18, "w1": 18, "w100": 18, "w101": 18, "w102": 18, "w103": 18, "w104": 18, "w105": 18, "w106": 18, "w107": 18, "w2": 18, "w200": 18, "w201": 18, "w202": 18, "w203": 18, "w3": 18, "w_": [3, 18], "w_0": 3, "w_i": 3, "wa": [15, 18, 19], "wage": 21, "wai": [3, 5], "walsh": 5, "walsh_hadamard_transform": 5, "want": [1, 3, 13, 17, 22], "warn": 5, "warp": 21, "we": [2, 3, 4, 5, 7, 9, 14, 15, 17, 18, 19, 20, 21, 22, 24], "weight": [5, 20], "welch": 21, "well": [1, 17], "went": 7, "wfytp2008": 21, "what": [1, 3, 18], "when": [1, 3, 7, 11, 14, 15, 17, 18, 22], "where": [2, 3, 4, 5, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 22, 24], "wherea": [3, 19], "whether": [1, 2, 3, 11, 17, 18, 19, 24], "which": [2, 3, 4, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 22], "while": [2, 5, 7, 15, 17, 18, 19], "whirlpool": 21, "whirlpool_": 21, "whirlpool_r": 21, "white": 19, "whiten": 3, "whole": 17, "whose": [9, 17, 18, 19, 22], "wi": 18, "width": 18, "wiemer": 21, "wikipedia": [19, 21], "wise": 4, "wish": 17, "with_decrypt": 17, "with_encrypt": 17, "within": [2, 7, 15, 19, 22, 24], "without": [11, 17, 20], "wlm": 7, "wlmjxgmtliv": 7, "wlmjxmrkywmrkqshypevevmxlqixmg": 7, "wncbpo": 7, "word": [3, 18], "work": [2, 3, 4, 7, 8, 11, 13, 15, 18, 19, 20], "workaround": 18, "world": 3, "worri": 22, "worst": 13, "would": [7, 19, 22], "wrap": 7, "wrapper": [15, 17], "written": 22, "wsk1997": 21, "wt": 20, "wu2009": 21, "ww2005": 21, "www": [20, 21], "wz2011": 21, "wzy2015": 21, "x": [1, 2, 3, 5, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23], "x0": [5, 18, 20], "x1": [5, 18, 20], "x100": 18, "x101": 18, "x102": 18, "x103": 18, "x104": 18, "x105": 18, "x106": 18, "x107": 18, "x2": [5, 18, 20], "x200": 18, "x201": 18, "x202": 18, "x203": 18, "x204": 18, "x205": 18, "x206": 18, "x207": 18, "x210": 18, "x211": 18, "x212": 18, "x213": 18, "x3": [5, 18], "x4": 5, "x5": 5, "x_": [14, 18, 19, 22], "x_0": [14, 19, 22], "x_1": 14, "x_2": 14, "x_i": [19, 22], "x_k": 14, "x_n": 14, "x_t": 19, "xi": [18, 20], "xmn": 7, "xmnkyhnumjw": 7, "xmnkynslzxnslrtizqfwfwnymrjynh": 7, "xodcqp": 7, "xoodyak": 21, "xor": 3, "y": [5, 20], "y0": [18, 20], "y1": [18, 20], "y2": [18, 20], "y3": 18, "ya": 7, "yann": [5, 20], "yarara": 21, "yet": 17, "yi": 20, "yno": 7, "ynolziovnkx": 7, "ynolzotmayotmsujargxgxoznskzoi": 7, "you": [1, 3, 13, 22, 24], "your": [7, 17, 19, 22], "ypedrq": 7, "ywhwxsw2014": 21, "z": [5, 7, 9, 13], "z_1": 22, "z_2": 22, "z_i": 22, "z_l": 22, "zblryv2015": 21, "zdybxjz2019": 21, "zero": [2, 5, 18], "zerodivis": 18, "zerodivisionerror": 18, "zha2019": 21, "zjrrs2019": 21, "zmod": 15, "zop": 7, "zopmajpwoli": 7, "zopmapunbzpuntvkbshyhypaotlapj": 7, "zorro": 21, "zqfesr": 7, "zqtouhwueegouiewqhuitrqhwgbiqtrqhahmnbgtgzmei": 7, "zuc_s0": 21, "zuc_s1": 21, "zyxwvutsrqponmlkjihgfedcba": 7, "zz": [1, 3, 5, 7, 13, 14, 15, 19, 22], "\u03c3": 15}, "titles": ["Cryptography", "DES", "Mini-AES", "PRESENT", "Simplified DES", "Boolean functions", "Ciphers", "Classical Cryptosystems", "Classical Ciphers", "Cryptosystems", "Index of key exchange schemes", "Diffie-Hellman Key Exchange Scheme", "Key Exchange Schemes", "Hard Lattice Generator", "Linear feedback shift register (LFSR) sequence commands", "(Ring-)LWE oracle generators", "Abstract base class for generators of polynomial systems", "Rijndael-GF", "Small Scale Variants of the AES (SR) Polynomial System Generator", "Blum-Goldwasser Probabilistic Encryption", "S-Boxes and Their Algebraic Representations", "S-Boxes used in cryptographic schemes", "Stream Cryptosystems", "Stream Ciphers", "Utility Functions for Cryptography"], "titleterms": {"": [20, 21], "Their": 20, "abstract": 16, "ae": [2, 18], "algebra": 20, "base": 16, "blum": 19, "boolean": 5, "box": [20, 21], "cipher": [6, 8, 23], "class": 16, "classic": [7, 8], "command": 14, "cryptograph": 21, "cryptographi": [0, 24], "cryptosystem": [7, 9, 22], "de": [1, 4], "diffi": 11, "encrypt": 19, "exchang": [10, 11, 12], "feedback": 14, "function": [5, 24], "gener": [13, 15, 16, 18], "gf": 17, "goldwass": 19, "hard": 13, "hellman": 11, "index": 10, "indic": 0, "kei": [10, 11, 12], "lattic": 13, "lfsr": 14, "linear": 14, "lwe": 15, "mini": 2, "oracl": 15, "polynomi": [16, 18], "present": 3, "probabilist": 19, "regist": 14, "represent": 20, "rijndael": 17, "ring": 15, "scale": 18, "scheme": [10, 11, 12, 21], "sequenc": 14, "shift": 14, "simplifi": 4, "small": 18, "sr": 18, "stream": [22, 23], "system": [16, 18], "tabl": 0, "us": 21, "util": 24, "variant": 18}})