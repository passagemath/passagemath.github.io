Search.setIndex({"alltitles": {"Abstract SAT Solver": [[7, null]], "An ANF to CNF Converter using a Dense/Sparse Strategy": [[2, null]], "Classes and Methods": [[2, "classes-and-methods"], [4, "classes-and-methods"]], "Converters": [[0, "converters"]], "CryptoMiniSat Solver": [[3, null]], "Details on Specific Converterts": [[0, "details-on-specific-converterts"]], "Details on Specific Highlevel Interfaces": [[0, "details-on-specific-highlevel-interfaces"]], "Details on Specific Solvers": [[0, "details-on-specific-solvers"]], "Functions": [[1, "functions"]], "Highlevel Interfaces": [[0, "highlevel-interfaces"]], "Indices and Tables": [[0, "indices-and-tables"]], "PicoSAT Solver": [[5, null]], "SAT Functions for Boolean Polynomials": [[1, null]], "SAT-Solvers via DIMACS Files": [[4, null]], "Sat": [[0, null]], "Solve SAT problems Integer Linear Programming": [[6, null]], "Solvers": [[0, "solvers"]]}, "docnames": ["index", "sage/sat/boolean_polynomials", "sage/sat/converters/polybori", "sage/sat/solvers/cryptominisat", "sage/sat/solvers/dimacs", "sage/sat/solvers/picosat", "sage/sat/solvers/sat_lp", "sage/sat/solvers/satsolver"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2}, "filenames": ["index.rst", "sage/sat/boolean_polynomials.rst", "sage/sat/converters/polybori.rst", "sage/sat/solvers/cryptominisat.rst", "sage/sat/solvers/dimacs.rst", "sage/sat/solvers/picosat.rst", "sage/sat/solvers/sat_lp.rst", "sage/sat/solvers/satsolver.rst"], "indexentries": {"__call__() (sage.sat.converters.polybori.cnfencoder method)": [[2, "sage.sat.converters.polybori.CNFEncoder.__call__", false]], "__call__() (sage.sat.solvers.dimacs.dimacs method)": [[4, "sage.sat.solvers.dimacs.DIMACS.__call__", false]], "__init__() (sage.sat.converters.polybori.cnfencoder method)": [[2, "sage.sat.converters.polybori.CNFEncoder.__init__", false]], "__init__() (sage.sat.solvers.dimacs.dimacs method)": [[4, "sage.sat.solvers.dimacs.DIMACS.__init__", false]], "add_clause() (sage.sat.solvers.cryptominisat.cryptominisat method)": [[3, "sage.sat.solvers.cryptominisat.CryptoMiniSat.add_clause", false]], "add_clause() (sage.sat.solvers.dimacs.dimacs method)": [[4, "sage.sat.solvers.dimacs.DIMACS.add_clause", false]], "add_clause() (sage.sat.solvers.picosat.picosat method)": [[5, "sage.sat.solvers.picosat.PicoSAT.add_clause", false]], "add_clause() (sage.sat.solvers.sat_lp.satlp method)": [[6, "sage.sat.solvers.sat_lp.SatLP.add_clause", false]], "add_clause() (sage.sat.solvers.satsolver.satsolver method)": [[7, "sage.sat.solvers.satsolver.SatSolver.add_clause", false]], "add_xor_clause() (sage.sat.solvers.cryptominisat.cryptominisat method)": [[3, "sage.sat.solvers.cryptominisat.CryptoMiniSat.add_xor_clause", false]], "clauses() (sage.sat.converters.polybori.cnfencoder method)": [[2, "sage.sat.converters.polybori.CNFEncoder.clauses", false]], "clauses() (sage.sat.solvers.cryptominisat.cryptominisat method)": [[3, "sage.sat.solvers.cryptominisat.CryptoMiniSat.clauses", false]], "clauses() (sage.sat.solvers.dimacs.dimacs method)": [[4, "sage.sat.solvers.dimacs.DIMACS.clauses", false]], "clauses() (sage.sat.solvers.picosat.picosat method)": [[5, "sage.sat.solvers.picosat.PicoSAT.clauses", false]], "clauses() (sage.sat.solvers.satsolver.satsolver method)": [[7, "sage.sat.solvers.satsolver.SatSolver.clauses", false]], "clauses_dense() (sage.sat.converters.polybori.cnfencoder method)": [[2, "sage.sat.converters.polybori.CNFEncoder.clauses_dense", false]], "clauses_sparse() (sage.sat.converters.polybori.cnfencoder method)": [[2, "sage.sat.converters.polybori.CNFEncoder.clauses_sparse", false]], "cnfencoder (class in sage.sat.converters.polybori)": [[2, "sage.sat.converters.polybori.CNFEncoder", false]], "command (sage.sat.solvers.dimacs.dimacs attribute)": [[4, "sage.sat.solvers.dimacs.DIMACS.command", false]], "command (sage.sat.solvers.dimacs.glucose attribute)": [[4, "sage.sat.solvers.dimacs.Glucose.command", false]], "command (sage.sat.solvers.dimacs.glucosesyrup attribute)": [[4, "sage.sat.solvers.dimacs.GlucoseSyrup.command", false]], "command (sage.sat.solvers.dimacs.kissat attribute)": [[4, "sage.sat.solvers.dimacs.Kissat.command", false]], "command (sage.sat.solvers.dimacs.rsat attribute)": [[4, "sage.sat.solvers.dimacs.RSat.command", false]], "conflict_clause() (sage.sat.solvers.satsolver.satsolver method)": [[7, "sage.sat.solvers.satsolver.SatSolver.conflict_clause", false]], "cryptominisat (class in sage.sat.solvers.cryptominisat)": [[3, "sage.sat.solvers.cryptominisat.CryptoMiniSat", false]], "dimacs (class in sage.sat.solvers.dimacs)": [[4, "sage.sat.solvers.dimacs.DIMACS", false]], "glucose (class in sage.sat.solvers.dimacs)": [[4, "sage.sat.solvers.dimacs.Glucose", false]], "glucosesyrup (class in sage.sat.solvers.dimacs)": [[4, "sage.sat.solvers.dimacs.GlucoseSyrup", false]], "kissat (class in sage.sat.solvers.dimacs)": [[4, "sage.sat.solvers.dimacs.Kissat", false]], "learn() (in module sage.sat.boolean_polynomials)": [[1, "sage.sat.boolean_polynomials.learn", false]], "learnt_clauses() (sage.sat.solvers.satsolver.satsolver method)": [[7, "sage.sat.solvers.satsolver.SatSolver.learnt_clauses", false]], "module": [[1, "module-sage.sat.boolean_polynomials", false], [2, "module-sage.sat.converters.polybori", false], [3, "module-sage.sat.solvers.cryptominisat", false], [4, "module-sage.sat.solvers.dimacs", false], [5, "module-sage.sat.solvers.picosat", false], [6, "module-sage.sat.solvers.sat_lp", false], [7, "module-sage.sat.solvers.satsolver", false]], "monomial() (sage.sat.converters.polybori.cnfencoder method)": [[2, "sage.sat.converters.polybori.CNFEncoder.monomial", false]], "nvars() (sage.sat.solvers.cryptominisat.cryptominisat method)": [[3, "sage.sat.solvers.cryptominisat.CryptoMiniSat.nvars", false]], "nvars() (sage.sat.solvers.dimacs.dimacs method)": [[4, "sage.sat.solvers.dimacs.DIMACS.nvars", false]], "nvars() (sage.sat.solvers.picosat.picosat method)": [[5, "sage.sat.solvers.picosat.PicoSAT.nvars", false]], "nvars() (sage.sat.solvers.sat_lp.satlp method)": [[6, "sage.sat.solvers.sat_lp.SatLP.nvars", false]], "nvars() (sage.sat.solvers.satsolver.satsolver method)": [[7, "sage.sat.solvers.satsolver.SatSolver.nvars", false]], "permutations (sage.sat.converters.polybori.cnfencoder attribute)": [[2, "sage.sat.converters.polybori.CNFEncoder.permutations", false]], "phi (sage.sat.converters.polybori.cnfencoder property)": [[2, "sage.sat.converters.polybori.CNFEncoder.phi", false]], "picosat (class in sage.sat.solvers.picosat)": [[5, "sage.sat.solvers.picosat.PicoSAT", false]], "read() (sage.sat.solvers.satsolver.satsolver method)": [[7, "sage.sat.solvers.satsolver.SatSolver.read", false]], "render_dimacs() (sage.sat.solvers.dimacs.dimacs static method)": [[4, "sage.sat.solvers.dimacs.DIMACS.render_dimacs", false]], "rsat (class in sage.sat.solvers.dimacs)": [[4, "sage.sat.solvers.dimacs.RSat", false]], "sage.sat.boolean_polynomials": [[1, "module-sage.sat.boolean_polynomials", false]], "sage.sat.converters.polybori": [[2, "module-sage.sat.converters.polybori", false]], "sage.sat.solvers.cryptominisat": [[3, "module-sage.sat.solvers.cryptominisat", false]], "sage.sat.solvers.dimacs": [[4, "module-sage.sat.solvers.dimacs", false]], "sage.sat.solvers.picosat": [[5, "module-sage.sat.solvers.picosat", false]], "sage.sat.solvers.sat_lp": [[6, "module-sage.sat.solvers.sat_lp", false]], "sage.sat.solvers.satsolver": [[7, "module-sage.sat.solvers.satsolver", false]], "sat() (in module sage.sat.solvers.satsolver)": [[7, "sage.sat.solvers.satsolver.SAT", false]], "satlp (class in sage.sat.solvers.sat_lp)": [[6, "sage.sat.solvers.sat_lp.SatLP", false]], "satsolver (class in sage.sat.solvers.satsolver)": [[7, "sage.sat.solvers.satsolver.SatSolver", false]], "solve() (in module sage.sat.boolean_polynomials)": [[1, "sage.sat.boolean_polynomials.solve", false]], "split_xor() (sage.sat.converters.polybori.cnfencoder method)": [[2, "sage.sat.converters.polybori.CNFEncoder.split_xor", false]], "to_polynomial() (sage.sat.converters.polybori.cnfencoder method)": [[2, "sage.sat.converters.polybori.CNFEncoder.to_polynomial", false]], "var() (sage.sat.converters.polybori.cnfencoder method)": [[2, "sage.sat.converters.polybori.CNFEncoder.var", false]], "var() (sage.sat.solvers.cryptominisat.cryptominisat method)": [[3, "sage.sat.solvers.cryptominisat.CryptoMiniSat.var", false]], "var() (sage.sat.solvers.dimacs.dimacs method)": [[4, "sage.sat.solvers.dimacs.DIMACS.var", false]], "var() (sage.sat.solvers.picosat.picosat method)": [[5, "sage.sat.solvers.picosat.PicoSAT.var", false]], "var() (sage.sat.solvers.sat_lp.satlp method)": [[6, "sage.sat.solvers.sat_lp.SatLP.var", false]], "var() (sage.sat.solvers.satsolver.satsolver method)": [[7, "sage.sat.solvers.satsolver.SatSolver.var", false]], "write() (sage.sat.solvers.dimacs.dimacs method)": [[4, "sage.sat.solvers.dimacs.DIMACS.write", false]], "zero_blocks() (sage.sat.converters.polybori.cnfencoder method)": [[2, "sage.sat.converters.polybori.CNFEncoder.zero_blocks", false]]}, "objects": {"sage.sat": [[1, 0, 0, "-", "boolean_polynomials"]], "sage.sat.boolean_polynomials": [[1, 1, 1, "", "learn"], [1, 1, 1, "", "solve"]], "sage.sat.converters": [[2, 0, 0, "-", "polybori"]], "sage.sat.converters.polybori": [[2, 2, 1, "", "CNFEncoder"]], "sage.sat.converters.polybori.CNFEncoder": [[2, 3, 1, "", "__call__"], [2, 3, 1, "", "__init__"], [2, 3, 1, "", "clauses"], [2, 3, 1, "", "clauses_dense"], [2, 3, 1, "", "clauses_sparse"], [2, 3, 1, "", "monomial"], [2, 4, 1, "", "permutations"], [2, 5, 1, "", "phi"], [2, 3, 1, "", "split_xor"], [2, 3, 1, "", "to_polynomial"], [2, 3, 1, "", "var"], [2, 3, 1, "", "zero_blocks"]], "sage.sat.solvers": [[3, 0, 0, "-", "cryptominisat"], [4, 0, 0, "-", "dimacs"], [5, 0, 0, "-", "picosat"], [6, 0, 0, "-", "sat_lp"], [7, 0, 0, "-", "satsolver"]], "sage.sat.solvers.cryptominisat": [[3, 2, 1, "", "CryptoMiniSat"]], "sage.sat.solvers.cryptominisat.CryptoMiniSat": [[3, 3, 1, "", "add_clause"], [3, 3, 1, "", "add_xor_clause"], [3, 3, 1, "", "clauses"], [3, 3, 1, "", "nvars"], [3, 3, 1, "", "var"]], "sage.sat.solvers.dimacs": [[4, 2, 1, "", "DIMACS"], [4, 2, 1, "", "Glucose"], [4, 2, 1, "", "GlucoseSyrup"], [4, 2, 1, "", "Kissat"], [4, 2, 1, "", "RSat"]], "sage.sat.solvers.dimacs.DIMACS": [[4, 3, 1, "", "__call__"], [4, 3, 1, "", "__init__"], [4, 3, 1, "", "add_clause"], [4, 3, 1, "", "clauses"], [4, 4, 1, "", "command"], [4, 3, 1, "", "nvars"], [4, 3, 1, "", "render_dimacs"], [4, 3, 1, "", "var"], [4, 3, 1, "", "write"]], "sage.sat.solvers.dimacs.Glucose": [[4, 4, 1, "", "command"]], "sage.sat.solvers.dimacs.GlucoseSyrup": [[4, 4, 1, "", "command"]], "sage.sat.solvers.dimacs.Kissat": [[4, 4, 1, "", "command"]], "sage.sat.solvers.dimacs.RSat": [[4, 4, 1, "", "command"]], "sage.sat.solvers.picosat": [[5, 2, 1, "", "PicoSAT"]], "sage.sat.solvers.picosat.PicoSAT": [[5, 3, 1, "", "add_clause"], [5, 3, 1, "", "clauses"], [5, 3, 1, "", "nvars"], [5, 3, 1, "", "var"]], "sage.sat.solvers.sat_lp": [[6, 2, 1, "", "SatLP"]], "sage.sat.solvers.sat_lp.SatLP": [[6, 3, 1, "", "add_clause"], [6, 3, 1, "", "nvars"], [6, 3, 1, "", "var"]], "sage.sat.solvers.satsolver": [[7, 1, 1, "", "SAT"], [7, 2, 1, "", "SatSolver"]], "sage.sat.solvers.satsolver.SatSolver": [[7, 3, 1, "", "add_clause"], [7, 3, 1, "", "clauses"], [7, 3, 1, "", "conflict_clause"], [7, 3, 1, "", "learnt_clauses"], [7, 3, 1, "", "nvars"], [7, 3, 1, "", "read"], [7, 3, 1, "", "var"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "terms": {"": [0, 1, 2, 4, 6, 7], "0": [0, 1, 2, 3, 4, 5, 6, 7], "001": 6, "09": 2, "1": [0, 1, 2, 3, 4, 5, 6, 7], "10": 2, "100": 4, "1000": 0, "11": 2, "15": 3, "16": [1, 2], "16924": 7, "2": [0, 1, 2, 3, 4, 5, 6, 7], "2008": 2, "2009": [0, 2, 7], "20090305015900": [0, 7], "2010": 2, "2012": [1, 2, 3, 4, 7], "2017": 3, "2018": [4, 5], "2023": 4, "2300": 1, "256": 1, "26676": 1, "3": [0, 1, 2, 3, 4, 5, 7], "31891": 1, "36": [0, 1], "4": [0, 1, 2, 3, 5], "5": [2, 3, 5], "6": [2, 3, 5, 6], "7": [2, 3, 5], "8": [1, 2, 3, 5], "9": [2, 3, 5], "A": [1, 4, 7], "AND": 0, "By": 0, "For": [0, 1, 2, 4, 6], "If": [1, 2, 3, 4, 5, 6, 7], "In": [0, 1], "It": 2, "Its": 6, "NOT": 0, "OR": 0, "The": [1, 2, 4, 5, 6, 7], "These": [0, 1], "With": [4, 7], "_": [0, 2, 4], "__call__": [2, 4], "__init__": [2, 4], "_first_ngen": [0, 1, 2], "ab": [3, 4, 5, 6, 7], "abort": 3, "abstract": 0, "accept": [3, 4, 5], "accomplish": 0, "ad": [0, 2, 4], "add": [3, 4, 5, 6, 7], "add_claus": [0, 3, 4, 5, 6, 7], "add_xor_claus": 3, "admiss": 7, "ae": [0, 1], "after": [2, 3], "albrecht": [1, 2, 3, 4, 7], "algebra": 0, "all": [0, 1, 2, 3, 4, 5, 6, 7], "allow": [4, 7], "allow_zero_invers": 1, "also": [0, 4, 7], "altern": 0, "although": 1, "alwai": [3, 4, 7], "an": [0, 1, 3, 4, 6, 7], "anf": [0, 1], "anf2cnf": 2, "anf2cnfconvert": 2, "ani": [0, 1, 3, 4, 5, 6, 7], "anyth": 4, "appear": [1, 4], "approach": 2, "ar": [1, 2, 3, 4, 5, 6, 7], "archiv": [0, 7], "arg": 7, "around": 2, "articl": 0, "ask": 1, "assign": [1, 4], "assum": 7, "assumpt": [4, 7], "augment": 3, "author": [1, 2, 3, 4, 5, 7], "automat": [3, 4, 5, 6, 7], "avail": 7, "b": [0, 1, 2], "base": [0, 2, 3, 4, 5, 6, 7], "basi": 2, "becaus": 1, "befor": 2, "behaviour": 2, "benchmarks2009": [0, 7], "between": [3, 5], "bind": [3, 5], "blanklin": [0, 3, 4, 5], "block": 2, "blueprint": 0, "boolean": [0, 2, 3], "boolean_polynomi": [0, 1], "booleanpolynomi": 2, "booleanpolynomialr": [0, 1, 2], "break": [0, 1], "brickenstein": 2, "c": [0, 1, 2, 4, 7], "c_": 1, "c_cutting_numb": 1, "c_max_vars_spars": 1, "cach": 2, "call": [2, 4, 7], "can": [0, 1, 6, 7], "case": 1, "cb2007": 2, "ce": 2, "chain": 2, "chosen": 4, "chunk": 2, "class": [1, 3, 5, 6, 7], "claus": [0, 1, 2, 3, 4, 5, 6, 7], "clauses_dens": 2, "clauses_spars": [0, 2], "cm": 0, "cnf": [0, 1, 3, 4, 5, 7], "cnfencod": [0, 1, 2], "cnfsat": 7, "coeffici": 2, "combin": 1, "command": 4, "comment": 7, "compar": 2, "compat": [3, 4, 5], "complet": 3, "confl_limit": 3, "conflict": [3, 7], "conflict_claus": 7, "conjunct": 0, "conjunctive_normal_form": 0, "consid": [1, 3, 5], "consist": [4, 7], "constant": 2, "construct": [0, 1, 2, 4, 7], "constructor": 2, "contain": [1, 4, 7], "context": 1, "convent": [3, 4, 5, 7], "convers": [0, 2], "convert": 1, "correct": 2, "correspond": [2, 3, 5, 7], "cpu": 3, "creat": [0, 2, 3, 4, 5, 6, 7], "crypto": 1, "cryptominisat": [0, 1, 4, 6, 7], "cubic": 1, "current": 4, "cutting_numb": 2, "cyclegraph": 6, "cython": 3, "d": [1, 2], "data": 7, "decis": [2, 3, 4, 5, 7], "default": [0, 1, 2, 3, 4, 5, 6, 7], "defin": [6, 7], "degre": 1, "denot": 1, "dens": 0, "dictionari": 1, "differ": 7, "dimac": [0, 2, 3, 5, 7], "direct": 2, "directli": 4, "disabl": 2, "discourag": 1, "discuss": 7, "distinguish": 2, "divid": 2, "doc": 7, "dvo": 7, "e": [0, 2, 3, 4, 5, 6, 7], "each": [1, 2], "easi": 4, "easier": 0, "easili": 0, "edg": 6, "edu": [0, 4, 7], "either": [2, 4], "element": [1, 3, 4, 5, 6, 7], "eli": 7, "els": [4, 7], "encod": 2, "end": 7, "entri": 4, "eq": 1, "equal_zero": 2, "equat": [0, 1], "equival": [3, 4], "evalu": 3, "everi": 7, "exampl": [0, 1, 2, 3, 4, 5, 6, 7], "except": [0, 1], "exclud": 1, "exclus": 1, "expect": 6, "express": 0, "extend": [4, 7], "extens": 3, "extern": 0, "f": [0, 1, 2], "fals": [0, 1, 2, 3, 4, 6, 7], "far": [3, 4, 5, 6, 7], "featur": 4, "few": 1, "file": [0, 3, 5, 7], "file_object": 7, "filenam": [0, 2, 3, 4, 5, 7], "first": [1, 2, 3, 4, 7], "fmv": 4, "fn": [0, 2, 3, 4, 5], "follow": [0, 3, 7], "form": [0, 2], "format": [0, 3, 4, 5, 7], "fr": [0, 4], "from": [0, 1, 2, 3, 4, 5, 6, 7], "front": 3, "fsu": 7, "function": [0, 2, 4], "further": 1, "furthermor": [0, 1], "gener": [1, 2, 3, 4, 5, 6, 7], "get_valu": 6, "gf2": [0, 1], "given": [0, 5], "gl": 0, "glpk": 7, "glucos": [0, 4, 7], "glucosesyrup": 4, "graph": 6, "greater": [3, 4, 5, 6, 7], "h": 1, "ha": [1, 3, 4, 5, 6, 7], "have": [3, 4], "header": 7, "henc": 0, "here": [1, 6], "highlevel": 1, "hold": 4, "how": [0, 1], "howev": [4, 7], "html": [0, 7], "http": [0, 4, 7], "hundr": 4, "i": [0, 1, 2, 3, 4, 5, 6, 7], "ideal": 1, "ignor": [3, 4, 5], "ilp": [6, 7], "implement": 4, "import": [0, 1, 2, 3, 4, 5, 6, 7], "improv": 2, "includ": 4, "increas": 1, "index": [0, 2, 3, 5], "inexact": 6, "infin": 1, "inform": [4, 6], "infrastructur": 4, "inherit": [4, 7], "initi": [1, 2, 4, 5, 6], "input": [0, 1, 2, 3, 4, 5, 6, 7], "inspir": 0, "instal": [0, 5, 7], "instanc": [0, 1, 2, 4, 6, 7], "instead": 1, "int": 2, "integ": [0, 1, 2, 3, 4, 5, 7], "integrality_toler": 6, "inter": 1, "interchang": 0, "interest": 1, "interfac": [3, 4, 7], "intermedi": [3, 5], "intern": [0, 2], "interreduct": 1, "introduc": [2, 7], "invers": 2, "invert": 3, "involv": 0, "io": 7, "is_xor": [3, 4, 7], "issu": [1, 7], "item": 2, "iter": 2, "its": 6, "jburkardt": 7, "jku": 4, "join": 1, "k033": 1, "keep": 2, "kissat": 4, "known": 0, "kwd": [1, 4, 7], "l": 1, "lab_11": 7, "labb\u00e9": 4, "label": 6, "labri": [0, 4], "last": [0, 7], "later": 2, "lazili": 7, "learn": 1, "learn_sat": 1, "learnt": 7, "learnt_claus": 7, "least": 1, "len": 1, "length": [1, 2, 4], "level": [1, 4, 6], "limit": 5, "line": [0, 3, 4, 7], "linear": 0, "linearis": 2, "list": [1, 2, 3, 4, 5, 7], "lit": [3, 4, 5, 6, 7], "liter": [0, 3, 4, 5, 7], "long": 1, "lp": [6, 7], "lsimon": [0, 4], "m": 2, "mai": 4, "make": [0, 3, 4], "mani": 3, "map": [1, 2], "martin": [1, 2, 3, 4, 7], "mate": 2, "max_learnt_length": 1, "max_length_learnt": 1, "max_vars_spars": 2, "maxim": [3, 5], "maximum": 2, "mean": [1, 4, 6], "method": [6, 7], "michael": 2, "milp": 6, "mip": [0, 7], "mix": 6, "mixedintegerlinearprogram": 6, "model": 4, "modul": [0, 4], "monomi": 2, "monomial_list": 2, "monteil": [3, 5], "more": [1, 2, 6], "most": [2, 7], "mq": [0, 1], "msoo": [0, 7], "multi_polynomial_sequ": 1, "must": [0, 4, 7], "n": [1, 7], "n1": 7, "n2": 7, "n3": 7, "name": [0, 1, 2, 4, 7], "necessari": 0, "need": [0, 7], "never": 3, "new": [0, 1, 2, 3, 4, 5, 6, 7], "next": 1, "nlit": 4, "none": [0, 1, 2, 3, 4, 5, 6, 7], "nonzero": [3, 4, 5, 6, 7], "normal": [0, 1], "notat": [0, 7], "note": [3, 5, 7], "notimplementederror": 7, "now": [0, 1, 2], "np": 7, "number": [1, 2, 3, 4, 5, 6, 7], "numer": [0, 7], "nvar": [3, 4, 5, 6, 7], "nvariabl": 2, "nx1": 7, "object": [1, 7], "old": 2, "one": [0, 2, 3, 4, 6, 7], "onli": [1, 7], "open": [0, 2, 3, 4, 5], "option": [0, 1, 3, 4, 5, 7], "org": [0, 7], "origin": [1, 3, 4, 5, 7], "other": [3, 4, 5], "otherwis": [1, 2, 7], "our": [4, 7], "output": [1, 2, 3, 4, 5, 7], "over": [2, 6], "p": [0, 2, 3, 4, 5, 7], "packag": [0, 5, 7], "page": 0, "pair": 1, "parallel": 4, "paramet": [1, 6], "pars": 4, "part": 2, "particular": 1, "pass": [0, 1, 2], "pbori": [0, 2], "pdf": 7, "peopl": 7, "perform": 6, "permut": 2, "perso": [0, 4], "phi": 2, "picosat": [0, 7], "point": [3, 4, 5, 7], "polybori": [0, 1, 2], "polynomi": [0, 2], "polynomial_system": [0, 1], "polynomialsequ": 1, "popular": [4, 7], "posit": 3, "pre": 0, "prefix": 1, "print": [0, 2, 3, 4, 5], "problem": [0, 1, 4, 7], "produc": [1, 4], "program": 0, "prop_limit": 5, "propag": 5, "properti": 2, "provid": [0, 3], "py": 2, "pycosat": [5, 7], "pycryptosat": [0, 3, 7], "pythion": 4, "python": [0, 1, 2, 3, 4, 5, 6, 7], "q": 4, "queri": 2, "quiet": 6, "r": [0, 1], "random": [0, 2], "random_se": 2, "randomis": 2, "read": [0, 2, 3, 4, 5, 7], "readlin": [0, 4], "reason": [0, 4], "recent": 7, "reduc": [1, 2], "refer": 0, "reli": [3, 5], "render_dimac": 4, "represent": 2, "research": 0, "respect": 1, "result": 1, "return": [1, 2, 3, 4, 5, 6, 7], "rewrit": 3, "rh": [3, 4, 7], "ring": [0, 1, 2, 6], "rsat": [0, 4], "ru": 7, "run": [1, 4], "s_": 1, "s_verbos": 1, "sage": [0, 1, 2, 3, 4, 5, 6, 7], "sagelib": 0, "sampl": 7, "sat": [2, 3, 5], "sat_lp": 6, "satcompetit": [0, 7], "satlp": [6, 7], "satsolv": [3, 4, 5, 6, 7], "sb": 1, "sbox": 1, "sc": 7, "scale": [0, 1], "search": 0, "second": 2, "see": [0, 1, 4, 6, 7], "seed": 2, "select": 7, "sequenc": [0, 1], "set": [2, 3, 4, 5, 6, 7], "set_random_se": 1, "sg09": 0, "shell": 0, "ship": 0, "should": [0, 3, 5], "show": 0, "silent": 4, "simpl": [0, 1, 4, 7], "slower": 6, "sls_ae": 1, "small": [0, 1], "so": [3, 4, 5, 6, 7], "solut": [1, 4], "solv": [0, 1, 4, 7], "solve_sat": [0, 1], "solver": [1, 2, 6], "solver1": 4, "solver2": 4, "solver3": 4, "some": 4, "someth": 2, "soo": 2, "sort": [1, 2, 6], "sourc": [1, 2, 3, 4, 5, 6, 7], "span": 1, "spars": 0, "specif": 1, "specifi": [4, 6, 7], "split": 2, "split_xor": 2, "sr": [0, 1], "standard": 3, "start": [0, 4, 7], "state": 1, "static": 4, "still": [3, 5], "str": 1, "strategi": 0, "string": [4, 7], "stringio": 7, "sub": [0, 1], "subchain": 2, "summar": 7, "support": [0, 1, 2, 4], "syrup": [4, 7], "system": [0, 1], "s\u00e9bastien": 4, "tabl": 2, "target_vari": 1, "temporari": 4, "th": 4, "than": [3, 4, 5, 6, 7], "them": 1, "thi": [0, 1, 2, 3, 4, 5, 7], "thierri": [3, 5], "thin": 2, "those": 2, "thread": 3, "three": 1, "through": [1, 7], "time": 1, "tmp_filenam": [0, 2, 3, 4, 5], "to_polynomi": 2, "traceback": 7, "track": 2, "true": [0, 1, 2, 3, 4, 7], "truth": 2, "try": [0, 1], "tupl": [3, 4, 5, 6, 7], "two": 2, "type": 0, "u": 6, "ucla": [0, 4], "underli": 2, "unifi": 2, "unitari": 7, "unitary_onli": 7, "unsat": [4, 7], "up": 0, "upstream": 3, "us": [0, 1, 3, 4, 5, 6, 7], "use_xor_claus": 2, "user": 4, "usual": [0, 2, 4], "v": [4, 6], "valid": 4, "valu": [1, 7], "var": [2, 3, 4, 5, 6, 7], "variabl": [0, 1, 2, 3, 4, 5, 6, 7], "variou": 0, "verb": 4, "verbos": [1, 3, 4, 5, 6], "veri": [0, 1], "version": [1, 2, 3, 4, 5, 7], "via": 0, "wa": 2, "we": [0, 1, 2], "web": [0, 7], "well": 7, "were": 7, "when": [0, 4, 6], "where": [2, 3, 4, 5, 7], "whether": 3, "which": [0, 1, 2, 4, 6], "while": [0, 1], "wikipedia": 0, "work": [0, 1, 3], "workaround": 1, "wrapper": 2, "writabl": [3, 4, 5, 7], "write": [0, 2, 4], "written": [0, 3, 4, 5, 7], "www": [0, 4, 7], "x": [3, 7], "x1": [0, 3], "x2": 0, "x3": 0, "xor": [2, 3, 7], "your": 5, "zero": [2, 4], "zero_block": 2, "zerodivisionerror": [0, 1]}, "titles": ["Sat", "SAT Functions for Boolean Polynomials", "An ANF to CNF Converter using a Dense/Sparse Strategy", "CryptoMiniSat Solver", "SAT-Solvers via DIMACS Files", "PicoSAT Solver", "Solve SAT problems Integer Linear Programming", "Abstract SAT Solver"], "titleterms": {"abstract": 7, "an": 2, "anf": 2, "boolean": 1, "class": [2, 4], "cnf": 2, "convert": [0, 2], "convertert": 0, "cryptominisat": 3, "dens": 2, "detail": 0, "dimac": 4, "file": 4, "function": 1, "highlevel": 0, "indic": 0, "integ": 6, "interfac": 0, "linear": 6, "method": [2, 4], "picosat": 5, "polynomi": 1, "problem": 6, "program": 6, "sat": [0, 1, 4, 6, 7], "solv": 6, "solver": [0, 3, 4, 5, 7], "spars": 2, "specif": 0, "strategi": 2, "tabl": 0, "us": 2, "via": 4}})