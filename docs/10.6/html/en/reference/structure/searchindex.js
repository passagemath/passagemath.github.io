Search.setIndex({"alltitles": {"A quick summary for the impatient": [[5, "a-quick-summary-for-the-impatient"]], "Abstract base class for Sage objects": [[26, null]], "Accessing and setting option values": [[12, "accessing-and-setting-option-values"]], "An example of set factory": [[29, null]], "Arithmetic for Elements": [[5, "arithmetic-for-elements"]], "Arithmetic in more detail": [[5, "arithmetic-in-more-detail"]], "Base class for objects of a category": [[2, null]], "Base class for old-style parent objects": [[23, null]], "Base class for old-style parent objects with a base ring": [[21, null]], "Base class for old-style parent objects with generators": [[22, null]], "Base class for parent objects": [[20, null]], "Class inheritance": [[31, "class-inheritance"]], "Comparing the two ways of implementing a cached representation": [[31, "comparing-the-two-ways-of-implementing-a-cached-representation"]], "Construction of options classes": [[12, "construction-of-options-classes"]], "Cython Functions for Timing Clone Protocol": [[17, null]], "Cython-like rich comparisons in Python": [[25, null]], "Debug options for the sage.structure modules": [[3, null]], "Dispatchers": [[12, "dispatchers"]], "Doc testing": [[12, "doc-testing"]], "Documentation for options": [[12, "documentation-for-options"]], "Dynamic classes": [[4, null]], "Element Wrapper": [[6, null]], "Elements": [[0, "elements"], [5, null]], "Elements, Array and Lists With Clone Protocol": [[14, null]], "Elements, Array and Lists With Clone Protocol, demonstration classes": [[15, null]], "Examples": [[5, "examples"]], "Factorizations": [[7, null]], "Factory for cached representations": [[9, null]], "Finite Homogeneous Sequences": [[27, null]], "Formal sums": [[10, null]], "Global options": [[12, null]], "Global proof preferences": [[24, null]], "How to Define a New Element Class": [[5, "how-to-define-a-new-element-class"]], "Implementation details": [[5, "implementation-details"]], "Implementing a cached representation": [[31, "implementing-a-cached-representation"]], "Indexed Generators": [[13, null]], "Indices and Tables": [[0, "indices-and-tables"]], "IntegerFactorization objects": [[8, null]], "Internals": [[0, "internals"]], "Mathematical Data Structures": [[0, "mathematical-data-structures"]], "Mutability Cython Implementation": [[18, null]], "Normalising the arguments": [[31, "normalising-the-arguments"]], "Old-Style Parents (Deprecated)": [[0, "old-style-parents-deprecated"]], "Parents": [[0, "parents"], [0, "id1"]], "Parents and Elements": [[0, null]], "Performance Test for Clone Protocol": [[16, null]], "Pickling": [[12, "pickling"]], "Precision management for non-exact objects": [[19, null]], "Pure python code for abstract base class for objects with generators": [[11, null]], "Python versus extension classes": [[31, "python-versus-extension-classes"]], "Sage Objects": [[0, "sage-objects"]], "Set factories": [[28, null]], "Setter functions": [[12, "setter-functions"]], "Simplicity and transparency": [[31, "simplicity-and-transparency"]], "Test of the factory module": [[30, null]], "The Abstract Element Class Hierarchy": [[5, "the-abstract-element-class-hierarchy"]], "Todo": [[2, "id1"], [20, "id1"], [28, "id1"], [28, "id2"], [28, "id3"], [31, "id1"], [31, "id2"]], "Unique Representation": [[31, null]], "Use of Heuristic and Probabilistic Algorithms": [[0, "use-of-heuristic-and-probabilistic-algorithms"]], "Using CachedRepresentation": [[31, "using-cachedrepresentation"]], "Using UniqueFactory": [[31, "using-uniquefactory"]], "Utilities": [[0, "utilities"]], "What is a cached representation?": [[31, "what-is-a-cached-representation"]], "What is a unique representation?": [[31, "what-is-a-unique-representation"]], "Whether or not computations are provably correct by default": [[1, null]]}, "docnames": ["index", "sage/misc/proof", "sage/structure/category_object", "sage/structure/debug_options", "sage/structure/dynamic_class", "sage/structure/element", "sage/structure/element_wrapper", "sage/structure/factorization", "sage/structure/factorization_integer", "sage/structure/factory", "sage/structure/formal_sum", "sage/structure/gens_py", "sage/structure/global_options", "sage/structure/indexed_generators", "sage/structure/list_clone", "sage/structure/list_clone_demo", "sage/structure/list_clone_timings", "sage/structure/list_clone_timings_cy", "sage/structure/mutability", "sage/structure/nonexact", "sage/structure/parent", "sage/structure/parent_base", "sage/structure/parent_gens", "sage/structure/parent_old", "sage/structure/proof/proof", "sage/structure/richcmp", "sage/structure/sage_object", "sage/structure/sequence", "sage/structure/set_factories", "sage/structure/set_factories_example", "sage/structure/test_factory", "sage/structure/unique_representation"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2}, "filenames": ["index.rst", "sage/misc/proof.rst", "sage/structure/category_object.rst", "sage/structure/debug_options.rst", "sage/structure/dynamic_class.rst", "sage/structure/element.rst", "sage/structure/element_wrapper.rst", "sage/structure/factorization.rst", "sage/structure/factorization_integer.rst", "sage/structure/factory.rst", "sage/structure/formal_sum.rst", "sage/structure/gens_py.rst", "sage/structure/global_options.rst", "sage/structure/indexed_generators.rst", "sage/structure/list_clone.rst", "sage/structure/list_clone_demo.rst", "sage/structure/list_clone_timings.rst", "sage/structure/list_clone_timings_cy.rst", "sage/structure/mutability.rst", "sage/structure/nonexact.rst", "sage/structure/parent.rst", "sage/structure/parent_base.rst", "sage/structure/parent_gens.rst", "sage/structure/parent_old.rst", "sage/structure/proof/proof.rst", "sage/structure/richcmp.rst", "sage/structure/sage_object.rst", "sage/structure/sequence.rst", "sage/structure/set_factories.rst", "sage/structure/set_factories_example.rst", "sage/structure/test_factory.rst", "sage/structure/unique_representation.rst"], "indexentries": {"__add__() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.__add__", false]], "__call__() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.__call__", false]], "__contains__() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.__contains__", false]], "__floordiv__() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.__floordiv__", false]], "__mod__() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.__mod__", false]], "__mul__() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.__mul__", false]], "__mul__() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.__mul__", false]], "__neg__() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.__neg__", false]], "__sub__() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.__sub__", false]], "__truediv__() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.__truediv__", false]], "_an_element_() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent._an_element_", false]], "_ascii_art_() (sage.structure.sage_object.sageobject method)": [[26, "sage.structure.sage_object.SageObject._ascii_art_", false]], "_cache_key() (sage.structure.sage_object.sageobject method)": [[26, "sage.structure.sage_object.SageObject._cache_key", false]], "_coerce_map_from_() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent._coerce_map_from_", false]], "_convert_map_from_() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent._convert_map_from_", false]], "_get_action_() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent._get_action_", false]], "_init_category_() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent._init_category_", false]], "_is_coercion_cached() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent._is_coercion_cached", false]], "_is_conversion_cached() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent._is_conversion_cached", false]], "_populate_coercion_lists_() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent._populate_coercion_lists_", false]], "_repr_option() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent._repr_option", false]], "_richcmp_() (sage.structure.element.element method)": [[5, "sage.structure.element.Element._richcmp_", false]], "a (class in sage.structure.test_factory)": [[30, "sage.structure.test_factory.A", false]], "abelian_iterator() (in module sage.structure.gens_py)": [[11, "sage.structure.gens_py.abelian_iterator", false]], "abs() (sage.structure.element.ringelement method)": [[5, "sage.structure.element.RingElement.abs", false]], "add1_immutable() (in module sage.structure.list_clone_timings)": [[16, "sage.structure.list_clone_timings.add1_immutable", false]], "add1_internal() (in module sage.structure.list_clone_timings)": [[16, "sage.structure.list_clone_timings.add1_internal", false]], "add1_mutable() (in module sage.structure.list_clone_timings)": [[16, "sage.structure.list_clone_timings.add1_mutable", false]], "add1_with() (in module sage.structure.list_clone_timings)": [[16, "sage.structure.list_clone_timings.add1_with", false]], "add_constraints() (sage.structure.set_factories.setfactory method)": [[28, "sage.structure.set_factories.SetFactory.add_constraints", false]], "add_constraints() (sage.structure.set_factories_example.xypairsfactory method)": [[29, "sage.structure.set_factories_example.XYPairsFactory.add_constraints", false]], "additive_order() (sage.structure.element.moduleelement method)": [[5, "sage.structure.element.ModuleElement.additive_order", false]], "additive_order() (sage.structure.element.ringelement method)": [[5, "sage.structure.element.RingElement.additive_order", false]], "additivegroupelement (class in sage.structure.element)": [[5, "sage.structure.element.AdditiveGroupElement", false]], "algebraelement (class in sage.structure.element)": [[5, "sage.structure.element.AlgebraElement", false]], "allpairs (class in sage.structure.set_factories_example)": [[29, "sage.structure.set_factories_example.AllPairs", false]], "an_element() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.an_element", false]], "an_element() (sage.structure.set_factories_example.pairs_y method)": [[29, "sage.structure.set_factories_example.Pairs_Y.an_element", false]], "an_element() (sage.structure.set_factories_example.pairsx_ method)": [[29, "sage.structure.set_factories_example.PairsX_.an_element", false]], "append() (sage.structure.element_wrapper.elementwrappertester method)": [[6, "sage.structure.element_wrapper.ElementWrapperTester.append", false]], "append() (sage.structure.list_clone.clonablelist method)": [[14, "sage.structure.list_clone.ClonableList.append", false]], "append() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.append", false]], "barefunctionpolicy (class in sage.structure.set_factories)": [[28, "sage.structure.set_factories.BareFunctionPolicy", false]], "base() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.base", false]], "base_change() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.base_change", false]], "base_extend() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.base_extend", false]], "base_extend() (sage.structure.formal_sum.formalsums method)": [[10, "sage.structure.formal_sum.FormalSums.base_extend", false]], "base_extend() (sage.structure.parent_base.parentwithbase method)": [[21, "sage.structure.parent_base.ParentWithBase.base_extend", false]], "base_ring() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.base_ring", false]], "base_ring() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.base_ring", false]], "bin_op() (in module sage.structure.element)": [[5, "sage.structure.element.bin_op", false]], "bla() (sage.structure.dynamic_class.testclass method)": [[4, "sage.structure.dynamic_class.TestClass.bla", false]], "cachedrepresentation (class in sage.structure.unique_representation)": [[31, "sage.structure.unique_representation.CachedRepresentation", false]], "canonical_associate() (sage.structure.element.fieldelement method)": [[5, "sage.structure.element.FieldElement.canonical_associate", false]], "canonical_coercion() (in module sage.structure.element)": [[5, "sage.structure.element.canonical_coercion", false]], "categories() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.categories", false]], "category() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.category", false]], "category() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.category", false]], "category() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.category", false]], "category() (sage.structure.sage_object.sageobject method)": [[26, "sage.structure.sage_object.SageObject.category", false]], "categoryobject (class in sage.structure.category_object)": [[2, "sage.structure.category_object.CategoryObject", false]], "certify_names() (in module sage.structure.category_object)": [[2, "sage.structure.category_object.certify_names", false]], "check() (sage.structure.list_clone.clonablearray method)": [[14, "sage.structure.list_clone.ClonableArray.check", false]], "check() (sage.structure.list_clone.clonableintarray method)": [[14, "sage.structure.list_clone.ClonableIntArray.check", false]], "check() (sage.structure.list_clone_demo.increasingarray method)": [[15, "sage.structure.list_clone_demo.IncreasingArray.check", false]], "check() (sage.structure.list_clone_demo.increasingintarray method)": [[15, "sage.structure.list_clone_demo.IncreasingIntArray.check", false]], "check() (sage.structure.list_clone_demo.increasinglist method)": [[15, "sage.structure.list_clone_demo.IncreasingList.check", false]], "check() (sage.structure.list_clone_demo.sortedlist method)": [[15, "sage.structure.list_clone_demo.SortedList.check", false]], "check() (sage.structure.list_clone_timings.increasingarrayspy.element method)": [[16, "sage.structure.list_clone_timings.IncreasingArraysPy.Element.check", false]], "check_default_category() (in module sage.structure.category_object)": [[2, "sage.structure.category_object.check_default_category", false]], "check_element() (sage.structure.set_factories.parentwithsetfactory method)": [[28, "sage.structure.set_factories.ParentWithSetFactory.check_element", false]], "check_element() (sage.structure.set_factories_example.allpairs method)": [[29, "sage.structure.set_factories_example.AllPairs.check_element", false]], "check_element() (sage.structure.set_factories_example.pairs_y method)": [[29, "sage.structure.set_factories_example.Pairs_Y.check_element", false]], "check_element() (sage.structure.set_factories_example.pairsx_ method)": [[29, "sage.structure.set_factories_example.PairsX_.check_element", false]], "check_element() (sage.structure.set_factories_example.singletonpair method)": [[29, "sage.structure.set_factories_example.SingletonPair.check_element", false]], "clonablearray (class in sage.structure.list_clone)": [[14, "sage.structure.list_clone.ClonableArray", false]], "clonableelement (class in sage.structure.list_clone)": [[14, "sage.structure.list_clone.ClonableElement", false]], "clonableintarray (class in sage.structure.list_clone)": [[14, "sage.structure.list_clone.ClonableIntArray", false]], "clonablelist (class in sage.structure.list_clone)": [[14, "sage.structure.list_clone.ClonableList", false]], "clone() (sage.structure.list_clone.clonableelement method)": [[14, "sage.structure.list_clone.ClonableElement.clone", false]], "coerce() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.coerce", false]], "coerce_binop() (in module sage.structure.element)": [[5, "sage.structure.element.coerce_binop", false]], "coerce_embedding() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.coerce_embedding", false]], "coerce_map_from() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.coerce_map_from", false]], "coercion_traceback() (in module sage.structure.element)": [[5, "sage.structure.element.coercion_traceback", false]], "commutativealgebraelement (class in sage.structure.element)": [[5, "sage.structure.element.CommutativeAlgebraElement", false]], "commutativeringelement (class in sage.structure.element)": [[5, "sage.structure.element.CommutativeRingElement", false]], "constraints() (sage.structure.set_factories.parentwithsetfactory method)": [[28, "sage.structure.set_factories.ParentWithSetFactory.constraints", false]], "convert_map_from() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.convert_map_from", false]], "count() (sage.structure.list_clone.clonablearray method)": [[14, "sage.structure.list_clone.ClonableArray.count", false]], "create_key() (sage.structure.factory.uniquefactory method)": [[9, "sage.structure.factory.UniqueFactory.create_key", false]], "create_key() (sage.structure.test_factory.uniquefactorytester method)": [[30, "sage.structure.test_factory.UniqueFactoryTester.create_key", false]], "create_key_and_extra_args() (sage.structure.factory.uniquefactory method)": [[9, "sage.structure.factory.UniqueFactory.create_key_and_extra_args", false]], "create_object() (sage.structure.factory.uniquefactory method)": [[9, "sage.structure.factory.UniqueFactory.create_object", false]], "create_object() (sage.structure.test_factory.uniquefactorytester method)": [[30, "sage.structure.test_factory.UniqueFactoryTester.create_object", false]], "cy_add1_immutable() (in module sage.structure.list_clone_timings_cy)": [[17, "sage.structure.list_clone_timings_cy.cy_add1_immutable", false]], "cy_add1_internal() (in module sage.structure.list_clone_timings_cy)": [[17, "sage.structure.list_clone_timings_cy.cy_add1_internal", false]], "cy_add1_mutable() (in module sage.structure.list_clone_timings_cy)": [[17, "sage.structure.list_clone_timings_cy.cy_add1_mutable", false]], "cy_add1_with() (in module sage.structure.list_clone_timings_cy)": [[17, "sage.structure.list_clone_timings_cy.cy_add1_with", false]], "debugoptions_class (class in sage.structure.debug_options)": [[3, "sage.structure.debug_options.DebugOptions_class", false]], "dedekinddomainelement (class in sage.structure.element)": [[5, "sage.structure.element.DedekindDomainElement", false]], "default_prec() (sage.structure.nonexact.nonexact method)": [[19, "sage.structure.nonexact.Nonexact.default_prec", false]], "degree() (sage.structure.element.euclideandomainelement method)": [[5, "sage.structure.element.EuclideanDomainElement.degree", false]], "divides() (sage.structure.element.commutativeringelement method)": [[5, "sage.structure.element.CommutativeRingElement.divides", false]], "divides() (sage.structure.element.fieldelement method)": [[5, "sage.structure.element.FieldElement.divides", false]], "dummyparent (class in sage.structure.element_wrapper)": [[6, "sage.structure.element_wrapper.DummyParent", false]], "dump() (sage.structure.sage_object.sageobject method)": [[26, "sage.structure.sage_object.SageObject.dump", false]], "dumps() (sage.structure.sage_object.sageobject method)": [[26, "sage.structure.sage_object.SageObject.dumps", false]], "dynamic_class() (in module sage.structure.dynamic_class)": [[4, "sage.structure.dynamic_class.dynamic_class", false]], "dynamic_class_internal() (in module sage.structure.dynamic_class)": [[4, "sage.structure.dynamic_class.dynamic_class_internal", false]], "dynamicclasscallmetaclass (class in sage.structure.dynamic_class)": [[4, "sage.structure.dynamic_class.DynamicClasscallMetaclass", false]], "dynamicinheritcomparisonclasscallmetaclass (class in sage.structure.dynamic_class)": [[4, "sage.structure.dynamic_class.DynamicInheritComparisonClasscallMetaclass", false]], "dynamicinheritcomparisonmetaclass (class in sage.structure.dynamic_class)": [[4, "sage.structure.dynamic_class.DynamicInheritComparisonMetaclass", false]], "dynamicmetaclass (class in sage.structure.dynamic_class)": [[4, "sage.structure.dynamic_class.DynamicMetaclass", false]], "element (class in sage.structure.element)": [[5, "sage.structure.element.Element", false]], "element (sage.structure.formal_sum.formalsums attribute)": [[10, "sage.structure.formal_sum.FormalSums.Element", false]], "element (sage.structure.list_clone_demo.increasingarrays attribute)": [[15, "sage.structure.list_clone_demo.IncreasingArrays.Element", false]], "element (sage.structure.list_clone_demo.increasingintarrays attribute)": [[15, "sage.structure.list_clone_demo.IncreasingIntArrays.Element", false]], "element (sage.structure.list_clone_demo.increasinglists attribute)": [[15, "sage.structure.list_clone_demo.IncreasingLists.Element", false]], "element (sage.structure.list_clone_demo.sortedlists attribute)": [[15, "sage.structure.list_clone_demo.SortedLists.Element", false]], "element_class() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.element_class", false]], "element_constructor_attributes() (sage.structure.set_factories.barefunctionpolicy method)": [[28, "sage.structure.set_factories.BareFunctionPolicy.element_constructor_attributes", false]], "element_constructor_attributes() (sage.structure.set_factories.facadeparentpolicy method)": [[28, "sage.structure.set_factories.FacadeParentPolicy.element_constructor_attributes", false]], "element_constructor_attributes() (sage.structure.set_factories.selfparentpolicy method)": [[28, "sage.structure.set_factories.SelfParentPolicy.element_constructor_attributes", false]], "element_constructor_attributes() (sage.structure.set_factories.setfactorypolicy method)": [[28, "sage.structure.set_factories.SetFactoryPolicy.element_constructor_attributes", false]], "element_constructor_attributes() (sage.structure.set_factories.topmostparentpolicy method)": [[28, "sage.structure.set_factories.TopMostParentPolicy.element_constructor_attributes", false]], "elementwithcachedmethod (class in sage.structure.element)": [[5, "sage.structure.element.ElementWithCachedMethod", false]], "elementwrapper (class in sage.structure.element_wrapper)": [[6, "sage.structure.element_wrapper.ElementWrapper", false]], "elementwrappercheckwrappedclass (class in sage.structure.element_wrapper)": [[6, "sage.structure.element_wrapper.ElementWrapperCheckWrappedClass", false]], "elementwrappertester (class in sage.structure.element_wrapper)": [[6, "sage.structure.element_wrapper.ElementWrapperTester", false]], "eltpair (class in sage.structure.parent)": [[20, "sage.structure.parent.EltPair", false]], "euclideandomainelement (class in sage.structure.element)": [[5, "sage.structure.element.EuclideanDomainElement", false]], "expand() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.expand", false]], "expression (class in sage.structure.element)": [[5, "sage.structure.element.Expression", false]], "extend() (sage.structure.list_clone.clonablelist method)": [[14, "sage.structure.list_clone.ClonableList.extend", false]], "extend() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.extend", false]], "facade_element_constructor_attributes() (sage.structure.set_factories.setfactorypolicy method)": [[28, "sage.structure.set_factories.SetFactoryPolicy.facade_element_constructor_attributes", false]], "facade_policy() (sage.structure.set_factories.parentwithsetfactory method)": [[28, "sage.structure.set_factories.ParentWithSetFactory.facade_policy", false]], "facadeparentpolicy (class in sage.structure.set_factories)": [[28, "sage.structure.set_factories.FacadeParentPolicy", false]], "factorization (class in sage.structure.factorization)": [[7, "sage.structure.factorization.Factorization", false]], "factory() (sage.structure.set_factories.parentwithsetfactory method)": [[28, "sage.structure.set_factories.ParentWithSetFactory.factory", false]], "factory() (sage.structure.set_factories.setfactorypolicy method)": [[28, "sage.structure.set_factories.SetFactoryPolicy.factory", false]], "fieldelement (class in sage.structure.element)": [[5, "sage.structure.element.FieldElement", false]], "formalsum (class in sage.structure.formal_sum)": [[10, "sage.structure.formal_sum.FormalSum", false]], "formalsums (class in sage.structure.formal_sum)": [[10, "sage.structure.formal_sum.FormalSums", false]], "gcd() (sage.structure.element.principalidealdomainelement method)": [[5, "sage.structure.element.PrincipalIdealDomainElement.gcd", false]], "gcd() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.gcd", false]], "gen() (sage.structure.parent_gens.parentwithgens method)": [[22, "sage.structure.parent_gens.ParentWithGens.gen", false]], "generic_factory_reduce() (in module sage.structure.factory)": [[9, "sage.structure.factory.generic_factory_reduce", false]], "generic_factory_unpickle() (in module sage.structure.factory)": [[9, "sage.structure.factory.generic_factory_unpickle", false]], "gens() (sage.structure.parent_gens.parentwithgens method)": [[22, "sage.structure.parent_gens.ParentWithGens.gens", false]], "gens_dict() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.gens_dict", false]], "gens_dict_recursive() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.gens_dict_recursive", false]], "get_action() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.get_action", false]], "get_coercion_model() (in module sage.structure.element)": [[5, "sage.structure.element.get_coercion_model", false]], "get_custom_name() (sage.structure.sage_object.sageobject method)": [[26, "sage.structure.sage_object.SageObject.get_custom_name", false]], "get_flag() (in module sage.structure.proof.proof)": [[24, "sage.structure.proof.proof.get_flag", false]], "get_object() (sage.structure.factory.uniquefactory method)": [[9, "sage.structure.factory.UniqueFactory.get_object", false]], "get_version() (sage.structure.factory.uniquefactory method)": [[9, "sage.structure.factory.UniqueFactory.get_version", false]], "globaloptions (class in sage.structure.global_options)": [[12, "sage.structure.global_options.GlobalOptions", false]], "globaloptionsmeta (class in sage.structure.global_options)": [[12, "sage.structure.global_options.GlobalOptionsMeta", false]], "globaloptionsmetameta (class in sage.structure.global_options)": [[12, "sage.structure.global_options.GlobalOptionsMetaMeta", false]], "has_coerce_map_from() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.has_coerce_map_from", false]], "have_same_parent() (in module sage.structure.element)": [[5, "sage.structure.element.have_same_parent", false]], "hom() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.Hom", false]], "hom() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.Hom", false], [20, "sage.structure.parent.Parent.hom", false]], "hom() (sage.structure.parent_gens.parentwithgens method)": [[22, "sage.structure.parent_gens.ParentWithGens.hom", false]], "increasingarray (class in sage.structure.list_clone_demo)": [[15, "sage.structure.list_clone_demo.IncreasingArray", false]], "increasingarrays (class in sage.structure.list_clone_demo)": [[15, "sage.structure.list_clone_demo.IncreasingArrays", false]], "increasingarrayspy (class in sage.structure.list_clone_timings)": [[16, "sage.structure.list_clone_timings.IncreasingArraysPy", false]], "increasingarrayspy.element (class in sage.structure.list_clone_timings)": [[16, "sage.structure.list_clone_timings.IncreasingArraysPy.Element", false]], "increasingintarray (class in sage.structure.list_clone_demo)": [[15, "sage.structure.list_clone_demo.IncreasingIntArray", false]], "increasingintarrays (class in sage.structure.list_clone_demo)": [[15, "sage.structure.list_clone_demo.IncreasingIntArrays", false]], "increasinglist (class in sage.structure.list_clone_demo)": [[15, "sage.structure.list_clone_demo.IncreasingList", false]], "increasinglists (class in sage.structure.list_clone_demo)": [[15, "sage.structure.list_clone_demo.IncreasingLists", false]], "index() (sage.structure.list_clone.clonablearray method)": [[14, "sage.structure.list_clone.ClonableArray.index", false]], "index() (sage.structure.list_clone.clonableintarray method)": [[14, "sage.structure.list_clone.ClonableIntArray.index", false]], "indexedgenerators (class in sage.structure.indexed_generators)": [[13, "sage.structure.indexed_generators.IndexedGenerators", false]], "indices() (sage.structure.indexed_generators.indexedgenerators method)": [[13, "sage.structure.indexed_generators.IndexedGenerators.indices", false]], "infinityelement (class in sage.structure.element)": [[5, "sage.structure.element.InfinityElement", false]], "inject_variables() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.inject_variables", false]], "insert() (sage.structure.list_clone.clonablelist method)": [[14, "sage.structure.list_clone.ClonableList.insert", false]], "insert() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.insert", false]], "integerfactorization (class in sage.structure.factorization_integer)": [[8, "sage.structure.factorization_integer.IntegerFactorization", false]], "integraldomainelement (class in sage.structure.element)": [[5, "sage.structure.element.IntegralDomainElement", false]], "inverse_mod() (sage.structure.element.commutativeringelement method)": [[5, "sage.structure.element.CommutativeRingElement.inverse_mod", false]], "is_additivegroupelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_AdditiveGroupElement", false]], "is_algebraelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_AlgebraElement", false]], "is_commutative() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.is_commutative", false]], "is_commutativealgebraelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_CommutativeAlgebraElement", false]], "is_commutativeringelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_CommutativeRingElement", false]], "is_dedekinddomainelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_DedekindDomainElement", false]], "is_element() (in module sage.structure.element)": [[5, "sage.structure.element.is_Element", false]], "is_euclideandomainelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_EuclideanDomainElement", false]], "is_exact() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.is_exact", false]], "is_fieldelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_FieldElement", false]], "is_immutable() (sage.structure.element.moduleelementwithmutability method)": [[5, "sage.structure.element.ModuleElementWithMutability.is_immutable", false]], "is_immutable() (sage.structure.list_clone.clonableelement method)": [[14, "sage.structure.list_clone.ClonableElement.is_immutable", false]], "is_immutable() (sage.structure.mutability.mutability method)": [[18, "sage.structure.mutability.Mutability.is_immutable", false]], "is_immutable() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.is_immutable", false]], "is_infinityelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_InfinityElement", false]], "is_integral() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.is_integral", false]], "is_integraldomainelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_IntegralDomainElement", false]], "is_matrix() (in module sage.structure.element)": [[5, "sage.structure.element.is_Matrix", false]], "is_moduleelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_ModuleElement", false]], "is_monoidelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_MonoidElement", false]], "is_multiplicativegroupelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_MultiplicativeGroupElement", false]], "is_mutable() (sage.structure.element.moduleelementwithmutability method)": [[5, "sage.structure.element.ModuleElementWithMutability.is_mutable", false]], "is_mutable() (sage.structure.list_clone.clonableelement method)": [[14, "sage.structure.list_clone.ClonableElement.is_mutable", false]], "is_mutable() (sage.structure.mutability.mutability method)": [[18, "sage.structure.mutability.Mutability.is_mutable", false]], "is_mutable() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.is_mutable", false]], "is_nilpotent() (sage.structure.element.integraldomainelement method)": [[5, "sage.structure.element.IntegralDomainElement.is_nilpotent", false]], "is_nilpotent() (sage.structure.element.ringelement method)": [[5, "sage.structure.element.RingElement.is_nilpotent", false]], "is_one() (sage.structure.element.ringelement method)": [[5, "sage.structure.element.RingElement.is_one", false]], "is_parent() (in module sage.structure.parent)": [[20, "sage.structure.parent.is_Parent", false]], "is_prime() (sage.structure.element.ringelement method)": [[5, "sage.structure.element.RingElement.is_prime", false]], "is_principalidealdomainelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_PrincipalIdealDomainElement", false]], "is_ringelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_RingElement", false]], "is_square() (sage.structure.element.commutativeringelement method)": [[5, "sage.structure.element.CommutativeRingElement.is_square", false]], "is_unit() (sage.structure.element.fieldelement method)": [[5, "sage.structure.element.FieldElement.is_unit", false]], "is_vector() (in module sage.structure.element)": [[5, "sage.structure.element.is_Vector", false]], "is_zero() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.is_zero", false]], "latex_name() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.latex_name", false]], "latex_variable_names() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.latex_variable_names", false]], "lcm() (sage.structure.element.principalidealdomainelement method)": [[5, "sage.structure.element.PrincipalIdealDomainElement.lcm", false]], "lcm() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.lcm", false]], "leading_coefficient() (sage.structure.element.euclideandomainelement method)": [[5, "sage.structure.element.EuclideanDomainElement.leading_coefficient", false]], "list() (sage.structure.list_clone.clonableintarray method)": [[14, "sage.structure.list_clone.ClonableIntArray.list", false]], "localvars (class in sage.structure.parent_gens)": [[22, "sage.structure.parent_gens.localvars", false]], "lookup_global() (in module sage.structure.factory)": [[9, "sage.structure.factory.lookup_global", false]], "m (in module sage.structure.dynamic_class)": [[4, "sage.structure.dynamic_class.M", false]], "make_element() (in module sage.structure.element)": [[5, "sage.structure.element.make_element", false]], "matrix (class in sage.structure.element)": [[5, "sage.structure.element.Matrix", false]], "mod() (sage.structure.element.commutativeringelement method)": [[5, "sage.structure.element.CommutativeRingElement.mod", false]], "module": [[1, "module-sage.misc.proof", false], [2, "module-sage.structure.category_object", false], [3, "module-sage.structure.debug_options", false], [4, "module-sage.structure.dynamic_class", false], [5, "module-sage.structure.element", false], [6, "module-sage.structure.element_wrapper", false], [7, "module-sage.structure.factorization", false], [8, "module-sage.structure.factorization_integer", false], [9, "module-sage.structure.factory", false], [10, "module-sage.structure.formal_sum", false], [11, "module-sage.structure.gens_py", false], [12, "module-sage.structure.global_options", false], [13, "module-sage.structure.indexed_generators", false], [14, "module-sage.structure.list_clone", false], [15, "module-sage.structure.list_clone_demo", false], [16, "module-sage.structure.list_clone_timings", false], [17, "module-sage.structure.list_clone_timings_cy", false], [18, "module-sage.structure.mutability", false], [19, "module-sage.structure.nonexact", false], [20, "module-sage.structure.parent", false], [21, "module-sage.structure.parent_base", false], [22, "module-sage.structure.parent_gens", false], [23, "module-sage.structure.parent_old", false], [24, "module-sage.structure.proof.proof", false], [25, "module-sage.structure.richcmp", false], [26, "module-sage.structure.sage_object", false], [27, "module-sage.structure.sequence", false], [28, "module-sage.structure.set_factories", false], [29, "module-sage.structure.set_factories_example", false], [30, "module-sage.structure.test_factory", false], [31, "module-sage.structure.unique_representation", false]], "moduleelement (class in sage.structure.element)": [[5, "sage.structure.element.ModuleElement", false]], "moduleelementwithmutability (class in sage.structure.element)": [[5, "sage.structure.element.ModuleElementWithMutability", false]], "monoidelement (class in sage.structure.element)": [[5, "sage.structure.element.MonoidElement", false]], "multiplicative_iterator() (in module sage.structure.gens_py)": [[11, "sage.structure.gens_py.multiplicative_iterator", false]], "multiplicative_order() (sage.structure.element.monoidelement method)": [[5, "sage.structure.element.MonoidElement.multiplicative_order", false]], "multiplicative_order() (sage.structure.element.ringelement method)": [[5, "sage.structure.element.RingElement.multiplicative_order", false]], "multiplicativegroupelement (class in sage.structure.element)": [[5, "sage.structure.element.MultiplicativeGroupElement", false]], "mutability (class in sage.structure.mutability)": [[18, "sage.structure.mutability.Mutability", false]], "n() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.n", false]], "ngens() (sage.structure.parent_gens.parentwithgens method)": [[22, "sage.structure.parent_gens.ParentWithGens.ngens", false]], "nonexact (class in sage.structure.nonexact)": [[19, "sage.structure.nonexact.Nonexact", false]], "normalize() (sage.structure.list_clone.normalizedclonablelist method)": [[14, "sage.structure.list_clone.NormalizedClonableList.normalize", false]], "normalize() (sage.structure.list_clone_demo.sortedlist method)": [[15, "sage.structure.list_clone_demo.SortedList.normalize", false]], "normalize_names() (in module sage.structure.category_object)": [[2, "sage.structure.category_object.normalize_names", false]], "normalizedclonablelist (class in sage.structure.list_clone)": [[14, "sage.structure.list_clone.NormalizedClonableList", false]], "numerical_approx() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.numerical_approx", false]], "object() (sage.structure.parent.set_generic method)": [[20, "sage.structure.parent.Set_generic.object", false]], "objgen() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.objgen", false]], "objgens() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.objgens", false]], "option (class in sage.structure.global_options)": [[12, "sage.structure.global_options.Option", false]], "order() (sage.structure.element.additivegroupelement method)": [[5, "sage.structure.element.AdditiveGroupElement.order", false]], "order() (sage.structure.element.moduleelement method)": [[5, "sage.structure.element.ModuleElement.order", false]], "order() (sage.structure.element.monoidelement method)": [[5, "sage.structure.element.MonoidElement.order", false]], "order() (sage.structure.element.multiplicativegroupelement method)": [[5, "sage.structure.element.MultiplicativeGroupElement.order", false]], "other_keys() (sage.structure.factory.uniquefactory method)": [[9, "sage.structure.factory.UniqueFactory.other_keys", false]], "pairs_y (class in sage.structure.set_factories_example)": [[29, "sage.structure.set_factories_example.Pairs_Y", false]], "pairs_y() (sage.structure.set_factories_example.allpairs method)": [[29, "sage.structure.set_factories_example.AllPairs.pairs_y", false]], "pairsx_ (class in sage.structure.set_factories_example)": [[29, "sage.structure.set_factories_example.PairsX_", false]], "parent (class in sage.structure.parent)": [[20, "sage.structure.parent.Parent", false]], "parent (class in sage.structure.parent_old)": [[23, "sage.structure.parent_old.Parent", false]], "parent() (in module sage.structure.element)": [[5, "sage.structure.element.parent", false]], "parent() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.parent", false]], "parent() (sage.structure.sage_object.sageobject method)": [[26, "sage.structure.sage_object.SageObject.parent", false]], "parentwithbase (class in sage.structure.parent_base)": [[21, "sage.structure.parent_base.ParentWithBase", false]], "parentwithgens (class in sage.structure.parent_gens)": [[22, "sage.structure.parent_gens.ParentWithGens", false]], "parentwithsetfactory (class in sage.structure.set_factories)": [[28, "sage.structure.set_factories.ParentWithSetFactory", false]], "parse_indices_names() (in module sage.structure.indexed_generators)": [[13, "sage.structure.indexed_generators.parse_indices_names", false]], "policy() (sage.structure.set_factories.parentwithsetfactory method)": [[28, "sage.structure.set_factories.ParentWithSetFactory.policy", false]], "pop() (sage.structure.list_clone.clonablelist method)": [[14, "sage.structure.list_clone.ClonableList.pop", false]], "pop() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.pop", false]], "powers() (sage.structure.element.monoidelement method)": [[5, "sage.structure.element.MonoidElement.powers", false]], "powers() (sage.structure.element.ringelement method)": [[5, "sage.structure.element.RingElement.powers", false]], "prefix() (sage.structure.indexed_generators.indexedgenerators method)": [[13, "sage.structure.indexed_generators.IndexedGenerators.prefix", false]], "principalidealdomainelement (class in sage.structure.element)": [[5, "sage.structure.element.PrincipalIdealDomainElement", false]], "print_options() (sage.structure.indexed_generators.indexedgenerators method)": [[13, "sage.structure.indexed_generators.IndexedGenerators.print_options", false]], "prod() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.prod", false]], "quo_rem() (sage.structure.element.euclideandomainelement method)": [[5, "sage.structure.element.EuclideanDomainElement.quo_rem", false]], "quo_rem() (sage.structure.element.fieldelement method)": [[5, "sage.structure.element.FieldElement.quo_rem", false]], "radical() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.radical", false]], "radical_value() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.radical_value", false]], "reduce() (sage.structure.formal_sum.formalsum method)": [[10, "sage.structure.formal_sum.FormalSum.reduce", false]], "reduce_data() (sage.structure.factory.uniquefactory method)": [[9, "sage.structure.factory.UniqueFactory.reduce_data", false]], "refine_category_hash_check (sage.structure.debug_options.debugoptions_class attribute)": [[3, "sage.structure.debug_options.DebugOptions_class.refine_category_hash_check", false]], "register_action() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.register_action", false]], "register_coercion() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.register_coercion", false]], "register_conversion() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.register_conversion", false]], "register_embedding() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.register_embedding", false]], "register_factory_unpickle() (in module sage.structure.factory)": [[9, "sage.structure.factory.register_factory_unpickle", false]], "remove() (sage.structure.list_clone.clonablelist method)": [[14, "sage.structure.list_clone.ClonableList.remove", false]], "remove() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.remove", false]], "rename() (sage.structure.sage_object.sageobject method)": [[26, "sage.structure.sage_object.SageObject.rename", false]], "require_immutable() (in module sage.structure.mutability)": [[18, "sage.structure.mutability.require_immutable", false]], "require_mutable() (in module sage.structure.mutability)": [[18, "sage.structure.mutability.require_mutable", false]], "reset_name() (sage.structure.sage_object.sageobject method)": [[26, "sage.structure.sage_object.SageObject.reset_name", false]], "reverse() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.reverse", false]], "revop() (in module sage.structure.richcmp)": [[25, "sage.structure.richcmp.revop", false]], "rich_to_bool() (in module sage.structure.richcmp)": [[25, "sage.structure.richcmp.rich_to_bool", false]], "rich_to_bool_sgn() (in module sage.structure.richcmp)": [[25, "sage.structure.richcmp.rich_to_bool_sgn", false]], "richcmp() (in module sage.structure.richcmp)": [[25, "sage.structure.richcmp.richcmp", false]], "richcmp_by_eq_and_lt() (in module sage.structure.richcmp)": [[25, "sage.structure.richcmp.richcmp_by_eq_and_lt", false]], "richcmp_item() (in module sage.structure.richcmp)": [[25, "sage.structure.richcmp.richcmp_item", false]], "richcmp_method() (in module sage.structure.richcmp)": [[25, "sage.structure.richcmp.richcmp_method", false]], "richcmp_not_equal() (in module sage.structure.richcmp)": [[25, "sage.structure.richcmp.richcmp_not_equal", false]], "ringelement (class in sage.structure.element)": [[5, "sage.structure.element.RingElement", false]], "sage.misc.proof": [[1, "module-sage.misc.proof", false]], "sage.structure.category_object": [[2, "module-sage.structure.category_object", false]], "sage.structure.debug_options": [[3, "module-sage.structure.debug_options", false]], "sage.structure.dynamic_class": [[4, "module-sage.structure.dynamic_class", false]], "sage.structure.element": [[5, "module-sage.structure.element", false]], "sage.structure.element_wrapper": [[6, "module-sage.structure.element_wrapper", false]], "sage.structure.factorization": [[7, "module-sage.structure.factorization", false]], "sage.structure.factorization_integer": [[8, "module-sage.structure.factorization_integer", false]], "sage.structure.factory": [[9, "module-sage.structure.factory", false]], "sage.structure.formal_sum": [[10, "module-sage.structure.formal_sum", false]], "sage.structure.gens_py": [[11, "module-sage.structure.gens_py", false]], "sage.structure.global_options": [[12, "module-sage.structure.global_options", false]], "sage.structure.indexed_generators": [[13, "module-sage.structure.indexed_generators", false]], "sage.structure.list_clone": [[14, "module-sage.structure.list_clone", false]], "sage.structure.list_clone_demo": [[15, "module-sage.structure.list_clone_demo", false]], "sage.structure.list_clone_timings": [[16, "module-sage.structure.list_clone_timings", false]], "sage.structure.list_clone_timings_cy": [[17, "module-sage.structure.list_clone_timings_cy", false]], "sage.structure.mutability": [[18, "module-sage.structure.mutability", false]], "sage.structure.nonexact": [[19, "module-sage.structure.nonexact", false]], "sage.structure.parent": [[20, "module-sage.structure.parent", false]], "sage.structure.parent_base": [[21, "module-sage.structure.parent_base", false]], "sage.structure.parent_gens": [[22, "module-sage.structure.parent_gens", false]], "sage.structure.parent_old": [[23, "module-sage.structure.parent_old", false]], "sage.structure.proof.proof": [[24, "module-sage.structure.proof.proof", false]], "sage.structure.richcmp": [[25, "module-sage.structure.richcmp", false]], "sage.structure.sage_object": [[26, "module-sage.structure.sage_object", false]], "sage.structure.sequence": [[27, "module-sage.structure.sequence", false]], "sage.structure.set_factories": [[28, "module-sage.structure.set_factories", false]], "sage.structure.set_factories_example": [[29, "module-sage.structure.set_factories_example", false]], "sage.structure.test_factory": [[30, "module-sage.structure.test_factory", false]], "sage.structure.unique_representation": [[31, "module-sage.structure.unique_representation", false]], "sageobject (class in sage.structure.sage_object)": [[26, "sage.structure.sage_object.SageObject", false]], "save() (sage.structure.sage_object.sageobject method)": [[26, "sage.structure.sage_object.SageObject.save", false]], "self_element_constructor_attributes() (sage.structure.set_factories.setfactorypolicy method)": [[28, "sage.structure.set_factories.SetFactoryPolicy.self_element_constructor_attributes", false]], "selfparentpolicy (class in sage.structure.set_factories)": [[28, "sage.structure.set_factories.SelfParentPolicy", false]], "seq() (in module sage.structure.sequence)": [[27, "sage.structure.sequence.seq", false]], "sequence() (in module sage.structure.sequence)": [[27, "sage.structure.sequence.Sequence", false]], "sequence_generic (class in sage.structure.sequence)": [[27, "sage.structure.sequence.Sequence_generic", false]], "set_generic (class in sage.structure.parent)": [[20, "sage.structure.parent.Set_generic", false]], "set_immutable() (sage.structure.element.moduleelementwithmutability method)": [[5, "sage.structure.element.ModuleElementWithMutability.set_immutable", false]], "set_immutable() (sage.structure.list_clone.clonableelement method)": [[14, "sage.structure.list_clone.ClonableElement.set_immutable", false]], "set_immutable() (sage.structure.mutability.mutability method)": [[18, "sage.structure.mutability.Mutability.set_immutable", false]], "set_immutable() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.set_immutable", false]], "setfactory (class in sage.structure.set_factories)": [[28, "sage.structure.set_factories.SetFactory", false]], "setfactorypolicy (class in sage.structure.set_factories)": [[28, "sage.structure.set_factories.SetFactoryPolicy", false]], "short_repr() (sage.structure.parent.eltpair method)": [[20, "sage.structure.parent.EltPair.short_repr", false]], "simplify() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.simplify", false]], "single_pair() (sage.structure.set_factories_example.pairs_y method)": [[29, "sage.structure.set_factories_example.Pairs_Y.single_pair", false]], "singletonpair (class in sage.structure.set_factories_example)": [[29, "sage.structure.set_factories_example.SingletonPair", false]], "sort() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.sort", false]], "sort() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.sort", false]], "sortedlist (class in sage.structure.list_clone_demo)": [[15, "sage.structure.list_clone_demo.SortedList", false]], "sortedlists (class in sage.structure.list_clone_demo)": [[15, "sage.structure.list_clone_demo.SortedLists", false]], "split_index_keywords() (in module sage.structure.indexed_generators)": [[13, "sage.structure.indexed_generators.split_index_keywords", false]], "sqrt() (sage.structure.element.commutativeringelement method)": [[5, "sage.structure.element.CommutativeRingElement.sqrt", false]], "standardize_names_index_set() (in module sage.structure.indexed_generators)": [[13, "sage.structure.indexed_generators.standardize_names_index_set", false]], "subs() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.subs", false]], "subs() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.subs", false]], "subset() (sage.structure.set_factories.parentwithsetfactory method)": [[28, "sage.structure.set_factories.ParentWithSetFactory.subset", false]], "substitute() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.substitute", false]], "testclass (class in sage.structure.dynamic_class)": [[4, "sage.structure.dynamic_class.TestClass", false]], "topmostparentpolicy (class in sage.structure.set_factories)": [[28, "sage.structure.set_factories.TopMostParentPolicy", false]], "unique_parent_warnings (sage.structure.debug_options.debugoptions_class attribute)": [[3, "sage.structure.debug_options.DebugOptions_class.unique_parent_warnings", false]], "uniquefactory (class in sage.structure.factory)": [[9, "sage.structure.factory.UniqueFactory", false]], "uniquefactorytester (class in sage.structure.test_factory)": [[30, "sage.structure.test_factory.UniqueFactoryTester", false]], "uniquerepresentation (class in sage.structure.unique_representation)": [[31, "sage.structure.unique_representation.UniqueRepresentation", false]], "unit() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.unit", false]], "universe() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.universe", false]], "universe() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.universe", false]], "unreduce() (in module sage.structure.unique_representation)": [[31, "sage.structure.unique_representation.unreduce", false]], "value (sage.structure.element_wrapper.elementwrapper attribute)": [[6, "sage.structure.element_wrapper.ElementWrapper.value", false]], "value() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.value", false]], "variable_name() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.variable_name", false]], "variable_names() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.variable_names", false]], "vector (class in sage.structure.element)": [[5, "sage.structure.element.Vector", false]], "withpicklingbyinitargs (class in sage.structure.unique_representation)": [[31, "sage.structure.unique_representation.WithPicklingByInitArgs", false]], "withproof (class in sage.structure.proof.proof)": [[24, "sage.structure.proof.proof.WithProof", false]], "wrapped_class (sage.structure.element_wrapper.elementwrappercheckwrappedclass attribute)": [[6, "sage.structure.element_wrapper.ElementWrapperCheckWrappedClass.wrapped_class", false]], "xypair (class in sage.structure.set_factories_example)": [[29, "sage.structure.set_factories_example.XYPair", false]], "xypairs() (in module sage.structure.set_factories_example)": [[29, "sage.structure.set_factories_example.XYPairs", false]], "xypairsfactory (class in sage.structure.set_factories_example)": [[29, "sage.structure.set_factories_example.XYPairsFactory", false]]}, "objects": {"sage.misc": [[1, 0, 0, "-", "proof"]], "sage.structure": [[2, 0, 0, "-", "category_object"], [3, 0, 0, "-", "debug_options"], [4, 0, 0, "-", "dynamic_class"], [5, 0, 0, "-", "element"], [6, 0, 0, "-", "element_wrapper"], [7, 0, 0, "-", "factorization"], [8, 0, 0, "-", "factorization_integer"], [9, 0, 0, "-", "factory"], [10, 0, 0, "-", "formal_sum"], [11, 0, 0, "-", "gens_py"], [12, 0, 0, "-", "global_options"], [13, 0, 0, "-", "indexed_generators"], [14, 0, 0, "-", "list_clone"], [15, 0, 0, "-", "list_clone_demo"], [16, 0, 0, "-", "list_clone_timings"], [17, 0, 0, "-", "list_clone_timings_cy"], [18, 0, 0, "-", "mutability"], [19, 0, 0, "-", "nonexact"], [20, 0, 0, "-", "parent"], [21, 0, 0, "-", "parent_base"], [22, 0, 0, "-", "parent_gens"], [23, 0, 0, "-", "parent_old"], [25, 0, 0, "-", "richcmp"], [26, 0, 0, "-", "sage_object"], [27, 0, 0, "-", "sequence"], [28, 0, 0, "-", "set_factories"], [29, 0, 0, "-", "set_factories_example"], [30, 0, 0, "-", "test_factory"], [31, 0, 0, "-", "unique_representation"]], "sage.structure.category_object": [[2, 1, 1, "", "CategoryObject"], [2, 3, 1, "", "certify_names"], [2, 3, 1, "", "check_default_category"], [2, 3, 1, "", "normalize_names"]], "sage.structure.category_object.CategoryObject": [[2, 2, 1, "", "Hom"], [2, 2, 1, "", "base"], [2, 2, 1, "", "base_ring"], [2, 2, 1, "", "categories"], [2, 2, 1, "", "category"], [2, 2, 1, "", "gens_dict"], [2, 2, 1, "", "gens_dict_recursive"], [2, 2, 1, "", "inject_variables"], [2, 2, 1, "", "latex_name"], [2, 2, 1, "", "latex_variable_names"], [2, 2, 1, "", "objgen"], [2, 2, 1, "", "objgens"], [2, 2, 1, "", "variable_name"], [2, 2, 1, "", "variable_names"]], "sage.structure.debug_options": [[3, 1, 1, "", "DebugOptions_class"]], "sage.structure.debug_options.DebugOptions_class": [[3, 4, 1, "", "refine_category_hash_check"], [3, 4, 1, "", "unique_parent_warnings"]], "sage.structure.dynamic_class": [[4, 1, 1, "", "DynamicClasscallMetaclass"], [4, 1, 1, "", "DynamicInheritComparisonClasscallMetaclass"], [4, 1, 1, "", "DynamicInheritComparisonMetaclass"], [4, 1, 1, "", "DynamicMetaclass"], [4, 4, 1, "", "M"], [4, 1, 1, "", "TestClass"], [4, 3, 1, "", "dynamic_class"], [4, 3, 1, "", "dynamic_class_internal"]], "sage.structure.dynamic_class.TestClass": [[4, 2, 1, "", "bla"]], "sage.structure.element": [[5, 1, 1, "", "AdditiveGroupElement"], [5, 1, 1, "", "AlgebraElement"], [5, 1, 1, "", "CommutativeAlgebraElement"], [5, 1, 1, "", "CommutativeRingElement"], [5, 1, 1, "", "DedekindDomainElement"], [5, 1, 1, "", "Element"], [5, 1, 1, "", "ElementWithCachedMethod"], [5, 1, 1, "", "EuclideanDomainElement"], [5, 1, 1, "", "Expression"], [5, 1, 1, "", "FieldElement"], [5, 1, 1, "", "InfinityElement"], [5, 1, 1, "", "IntegralDomainElement"], [5, 1, 1, "", "Matrix"], [5, 1, 1, "", "ModuleElement"], [5, 1, 1, "", "ModuleElementWithMutability"], [5, 1, 1, "", "MonoidElement"], [5, 1, 1, "", "MultiplicativeGroupElement"], [5, 1, 1, "", "PrincipalIdealDomainElement"], [5, 1, 1, "", "RingElement"], [5, 1, 1, "", "Vector"], [5, 3, 1, "", "bin_op"], [5, 3, 1, "", "canonical_coercion"], [5, 3, 1, "", "coerce_binop"], [5, 3, 1, "", "coercion_traceback"], [5, 3, 1, "", "get_coercion_model"], [5, 3, 1, "", "have_same_parent"], [5, 3, 1, "", "is_AdditiveGroupElement"], [5, 3, 1, "", "is_AlgebraElement"], [5, 3, 1, "", "is_CommutativeAlgebraElement"], [5, 3, 1, "", "is_CommutativeRingElement"], [5, 3, 1, "", "is_DedekindDomainElement"], [5, 3, 1, "", "is_Element"], [5, 3, 1, "", "is_EuclideanDomainElement"], [5, 3, 1, "", "is_FieldElement"], [5, 3, 1, "", "is_InfinityElement"], [5, 3, 1, "", "is_IntegralDomainElement"], [5, 3, 1, "", "is_Matrix"], [5, 3, 1, "", "is_ModuleElement"], [5, 3, 1, "", "is_MonoidElement"], [5, 3, 1, "", "is_MultiplicativeGroupElement"], [5, 3, 1, "", "is_PrincipalIdealDomainElement"], [5, 3, 1, "", "is_RingElement"], [5, 3, 1, "", "is_Vector"], [5, 3, 1, "", "make_element"], [5, 3, 1, "", "parent"]], "sage.structure.element.AdditiveGroupElement": [[5, 2, 1, "", "order"]], "sage.structure.element.CommutativeRingElement": [[5, 2, 1, "", "divides"], [5, 2, 1, "", "inverse_mod"], [5, 2, 1, "", "is_square"], [5, 2, 1, "", "mod"], [5, 2, 1, "", "sqrt"]], "sage.structure.element.Element": [[5, 2, 1, "", "__add__"], [5, 2, 1, "", "__floordiv__"], [5, 2, 1, "", "__mod__"], [5, 2, 1, "", "__mul__"], [5, 2, 1, "", "__neg__"], [5, 2, 1, "", "__sub__"], [5, 2, 1, "", "__truediv__"], [5, 2, 1, "", "_richcmp_"], [5, 2, 1, "", "base_extend"], [5, 2, 1, "", "base_ring"], [5, 2, 1, "", "category"], [5, 2, 1, "", "is_zero"], [5, 2, 1, "", "n"], [5, 2, 1, "", "numerical_approx"], [5, 2, 1, "", "parent"], [5, 2, 1, "", "subs"], [5, 2, 1, "", "substitute"]], "sage.structure.element.EuclideanDomainElement": [[5, 2, 1, "", "degree"], [5, 2, 1, "", "leading_coefficient"], [5, 2, 1, "", "quo_rem"]], "sage.structure.element.FieldElement": [[5, 2, 1, "", "canonical_associate"], [5, 2, 1, "", "divides"], [5, 2, 1, "", "is_unit"], [5, 2, 1, "", "quo_rem"]], "sage.structure.element.IntegralDomainElement": [[5, 2, 1, "", "is_nilpotent"]], "sage.structure.element.ModuleElement": [[5, 2, 1, "", "additive_order"], [5, 2, 1, "", "order"]], "sage.structure.element.ModuleElementWithMutability": [[5, 2, 1, "", "is_immutable"], [5, 2, 1, "", "is_mutable"], [5, 2, 1, "", "set_immutable"]], "sage.structure.element.MonoidElement": [[5, 2, 1, "", "multiplicative_order"], [5, 2, 1, "", "order"], [5, 2, 1, "", "powers"]], "sage.structure.element.MultiplicativeGroupElement": [[5, 2, 1, "", "order"]], "sage.structure.element.PrincipalIdealDomainElement": [[5, 2, 1, "", "gcd"], [5, 2, 1, "", "lcm"]], "sage.structure.element.RingElement": [[5, 2, 1, "", "abs"], [5, 2, 1, "", "additive_order"], [5, 2, 1, "", "is_nilpotent"], [5, 2, 1, "", "is_one"], [5, 2, 1, "", "is_prime"], [5, 2, 1, "", "multiplicative_order"], [5, 2, 1, "", "powers"]], "sage.structure.element_wrapper": [[6, 1, 1, "", "DummyParent"], [6, 1, 1, "", "ElementWrapper"], [6, 1, 1, "", "ElementWrapperCheckWrappedClass"], [6, 1, 1, "", "ElementWrapperTester"]], "sage.structure.element_wrapper.ElementWrapper": [[6, 4, 1, "", "value"]], "sage.structure.element_wrapper.ElementWrapperCheckWrappedClass": [[6, 4, 1, "", "wrapped_class"]], "sage.structure.element_wrapper.ElementWrapperTester": [[6, 2, 1, "", "append"]], "sage.structure.factorization": [[7, 1, 1, "", "Factorization"]], "sage.structure.factorization.Factorization": [[7, 2, 1, "", "base_change"], [7, 2, 1, "", "expand"], [7, 2, 1, "", "gcd"], [7, 2, 1, "", "is_commutative"], [7, 2, 1, "", "is_integral"], [7, 2, 1, "", "lcm"], [7, 2, 1, "", "prod"], [7, 2, 1, "", "radical"], [7, 2, 1, "", "radical_value"], [7, 2, 1, "", "simplify"], [7, 2, 1, "", "sort"], [7, 2, 1, "", "subs"], [7, 2, 1, "", "unit"], [7, 2, 1, "", "universe"], [7, 2, 1, "", "value"]], "sage.structure.factorization_integer": [[8, 1, 1, "", "IntegerFactorization"]], "sage.structure.factory": [[9, 1, 1, "", "UniqueFactory"], [9, 3, 1, "", "generic_factory_reduce"], [9, 3, 1, "", "generic_factory_unpickle"], [9, 3, 1, "", "lookup_global"], [9, 3, 1, "", "register_factory_unpickle"]], "sage.structure.factory.UniqueFactory": [[9, 2, 1, "", "create_key"], [9, 2, 1, "", "create_key_and_extra_args"], [9, 2, 1, "", "create_object"], [9, 2, 1, "", "get_object"], [9, 2, 1, "", "get_version"], [9, 2, 1, "", "other_keys"], [9, 2, 1, "", "reduce_data"]], "sage.structure.formal_sum": [[10, 1, 1, "", "FormalSum"], [10, 1, 1, "", "FormalSums"]], "sage.structure.formal_sum.FormalSum": [[10, 2, 1, "", "reduce"]], "sage.structure.formal_sum.FormalSums": [[10, 4, 1, "", "Element"], [10, 2, 1, "", "base_extend"]], "sage.structure.gens_py": [[11, 3, 1, "", "abelian_iterator"], [11, 3, 1, "", "multiplicative_iterator"]], "sage.structure.global_options": [[12, 1, 1, "", "GlobalOptions"], [12, 1, 1, "", "GlobalOptionsMeta"], [12, 1, 1, "", "GlobalOptionsMetaMeta"], [12, 1, 1, "", "Option"]], "sage.structure.indexed_generators": [[13, 1, 1, "", "IndexedGenerators"], [13, 3, 1, "", "parse_indices_names"], [13, 3, 1, "", "split_index_keywords"], [13, 3, 1, "", "standardize_names_index_set"]], "sage.structure.indexed_generators.IndexedGenerators": [[13, 2, 1, "", "indices"], [13, 2, 1, "", "prefix"], [13, 2, 1, "", "print_options"]], "sage.structure.list_clone": [[14, 1, 1, "", "ClonableArray"], [14, 1, 1, "", "ClonableElement"], [14, 1, 1, "", "ClonableIntArray"], [14, 1, 1, "", "ClonableList"], [14, 1, 1, "", "NormalizedClonableList"]], "sage.structure.list_clone.ClonableArray": [[14, 2, 1, "", "check"], [14, 2, 1, "", "count"], [14, 2, 1, "", "index"]], "sage.structure.list_clone.ClonableElement": [[14, 2, 1, "", "clone"], [14, 2, 1, "", "is_immutable"], [14, 2, 1, "", "is_mutable"], [14, 2, 1, "", "set_immutable"]], "sage.structure.list_clone.ClonableIntArray": [[14, 2, 1, "", "check"], [14, 2, 1, "", "index"], [14, 2, 1, "", "list"]], "sage.structure.list_clone.ClonableList": [[14, 2, 1, "", "append"], [14, 2, 1, "", "extend"], [14, 2, 1, "", "insert"], [14, 2, 1, "", "pop"], [14, 2, 1, "", "remove"]], "sage.structure.list_clone.NormalizedClonableList": [[14, 2, 1, "", "normalize"]], "sage.structure.list_clone_demo": [[15, 1, 1, "", "IncreasingArray"], [15, 1, 1, "", "IncreasingArrays"], [15, 1, 1, "", "IncreasingIntArray"], [15, 1, 1, "", "IncreasingIntArrays"], [15, 1, 1, "", "IncreasingList"], [15, 1, 1, "", "IncreasingLists"], [15, 1, 1, "", "SortedList"], [15, 1, 1, "", "SortedLists"]], "sage.structure.list_clone_demo.IncreasingArray": [[15, 2, 1, "", "check"]], "sage.structure.list_clone_demo.IncreasingArrays": [[15, 4, 1, "", "Element"]], "sage.structure.list_clone_demo.IncreasingIntArray": [[15, 2, 1, "", "check"]], "sage.structure.list_clone_demo.IncreasingIntArrays": [[15, 4, 1, "", "Element"]], "sage.structure.list_clone_demo.IncreasingList": [[15, 2, 1, "", "check"]], "sage.structure.list_clone_demo.IncreasingLists": [[15, 4, 1, "", "Element"]], "sage.structure.list_clone_demo.SortedList": [[15, 2, 1, "", "check"], [15, 2, 1, "", "normalize"]], "sage.structure.list_clone_demo.SortedLists": [[15, 4, 1, "", "Element"]], "sage.structure.list_clone_timings": [[16, 1, 1, "", "IncreasingArraysPy"], [16, 3, 1, "", "add1_immutable"], [16, 3, 1, "", "add1_internal"], [16, 3, 1, "", "add1_mutable"], [16, 3, 1, "", "add1_with"]], "sage.structure.list_clone_timings.IncreasingArraysPy": [[16, 1, 1, "", "Element"]], "sage.structure.list_clone_timings.IncreasingArraysPy.Element": [[16, 2, 1, "", "check"]], "sage.structure.list_clone_timings_cy": [[17, 3, 1, "", "cy_add1_immutable"], [17, 3, 1, "", "cy_add1_internal"], [17, 3, 1, "", "cy_add1_mutable"], [17, 3, 1, "", "cy_add1_with"]], "sage.structure.mutability": [[18, 1, 1, "", "Mutability"], [18, 3, 1, "", "require_immutable"], [18, 3, 1, "", "require_mutable"]], "sage.structure.mutability.Mutability": [[18, 2, 1, "", "is_immutable"], [18, 2, 1, "", "is_mutable"], [18, 2, 1, "", "set_immutable"]], "sage.structure.nonexact": [[19, 1, 1, "", "Nonexact"]], "sage.structure.nonexact.Nonexact": [[19, 2, 1, "", "default_prec"]], "sage.structure.parent": [[20, 1, 1, "", "EltPair"], [20, 1, 1, "", "Parent"], [20, 1, 1, "", "Set_generic"], [20, 3, 1, "", "is_Parent"]], "sage.structure.parent.EltPair": [[20, 2, 1, "", "short_repr"]], "sage.structure.parent.Parent": [[20, 2, 1, "", "Hom"], [20, 2, 1, "", "__call__"], [20, 2, 1, "", "__contains__"], [20, 2, 1, "", "__mul__"], [20, 2, 1, "", "_an_element_"], [20, 2, 1, "", "_coerce_map_from_"], [20, 2, 1, "", "_convert_map_from_"], [20, 2, 1, "", "_get_action_"], [20, 2, 1, "", "_init_category_"], [20, 2, 1, "", "_is_coercion_cached"], [20, 2, 1, "", "_is_conversion_cached"], [20, 2, 1, "", "_populate_coercion_lists_"], [20, 2, 1, "", "_repr_option"], [20, 2, 1, "", "an_element"], [20, 2, 1, "", "category"], [20, 2, 1, "", "coerce"], [20, 2, 1, "", "coerce_embedding"], [20, 2, 1, "", "coerce_map_from"], [20, 2, 1, "", "convert_map_from"], [20, 2, 1, "", "element_class"], [20, 2, 1, "", "get_action"], [20, 2, 1, "", "has_coerce_map_from"], [20, 2, 1, "", "hom"], [20, 2, 1, "", "is_exact"], [20, 2, 1, "", "register_action"], [20, 2, 1, "", "register_coercion"], [20, 2, 1, "", "register_conversion"], [20, 2, 1, "", "register_embedding"]], "sage.structure.parent.Set_generic": [[20, 2, 1, "", "object"]], "sage.structure.parent_base": [[21, 1, 1, "", "ParentWithBase"]], "sage.structure.parent_base.ParentWithBase": [[21, 2, 1, "", "base_extend"]], "sage.structure.parent_gens": [[22, 1, 1, "", "ParentWithGens"], [22, 1, 1, "", "localvars"]], "sage.structure.parent_gens.ParentWithGens": [[22, 2, 1, "", "gen"], [22, 2, 1, "", "gens"], [22, 2, 1, "", "hom"], [22, 2, 1, "", "ngens"]], "sage.structure.parent_old": [[23, 1, 1, "", "Parent"]], "sage.structure.proof": [[24, 0, 0, "-", "proof"]], "sage.structure.proof.proof": [[24, 1, 1, "", "WithProof"], [24, 3, 1, "", "get_flag"]], "sage.structure.richcmp": [[25, 3, 1, "", "revop"], [25, 3, 1, "", "rich_to_bool"], [25, 3, 1, "", "rich_to_bool_sgn"], [25, 3, 1, "", "richcmp"], [25, 3, 1, "", "richcmp_by_eq_and_lt"], [25, 3, 1, "", "richcmp_item"], [25, 3, 1, "", "richcmp_method"], [25, 3, 1, "", "richcmp_not_equal"]], "sage.structure.sage_object": [[26, 1, 1, "", "SageObject"]], "sage.structure.sage_object.SageObject": [[26, 2, 1, "", "_ascii_art_"], [26, 2, 1, "", "_cache_key"], [26, 2, 1, "", "category"], [26, 2, 1, "", "dump"], [26, 2, 1, "", "dumps"], [26, 2, 1, "", "get_custom_name"], [26, 2, 1, "", "parent"], [26, 2, 1, "", "rename"], [26, 2, 1, "", "reset_name"], [26, 2, 1, "", "save"]], "sage.structure.sequence": [[27, 3, 1, "", "Sequence"], [27, 1, 1, "", "Sequence_generic"], [27, 3, 1, "", "seq"]], "sage.structure.sequence.Sequence_generic": [[27, 2, 1, "", "append"], [27, 2, 1, "", "extend"], [27, 2, 1, "", "insert"], [27, 2, 1, "", "is_immutable"], [27, 2, 1, "", "is_mutable"], [27, 2, 1, "", "pop"], [27, 2, 1, "", "remove"], [27, 2, 1, "", "reverse"], [27, 2, 1, "", "set_immutable"], [27, 2, 1, "", "sort"], [27, 2, 1, "", "universe"]], "sage.structure.set_factories": [[28, 1, 1, "", "BareFunctionPolicy"], [28, 1, 1, "", "FacadeParentPolicy"], [28, 1, 1, "", "ParentWithSetFactory"], [28, 1, 1, "", "SelfParentPolicy"], [28, 1, 1, "", "SetFactory"], [28, 1, 1, "", "SetFactoryPolicy"], [28, 1, 1, "", "TopMostParentPolicy"]], "sage.structure.set_factories.BareFunctionPolicy": [[28, 2, 1, "", "element_constructor_attributes"]], "sage.structure.set_factories.FacadeParentPolicy": [[28, 2, 1, "", "element_constructor_attributes"]], "sage.structure.set_factories.ParentWithSetFactory": [[28, 2, 1, "", "check_element"], [28, 2, 1, "", "constraints"], [28, 2, 1, "", "facade_policy"], [28, 2, 1, "", "factory"], [28, 2, 1, "", "policy"], [28, 2, 1, "", "subset"]], "sage.structure.set_factories.SelfParentPolicy": [[28, 2, 1, "", "element_constructor_attributes"]], "sage.structure.set_factories.SetFactory": [[28, 2, 1, "", "add_constraints"]], "sage.structure.set_factories.SetFactoryPolicy": [[28, 2, 1, "", "element_constructor_attributes"], [28, 2, 1, "", "facade_element_constructor_attributes"], [28, 2, 1, "", "factory"], [28, 2, 1, "", "self_element_constructor_attributes"]], "sage.structure.set_factories.TopMostParentPolicy": [[28, 2, 1, "", "element_constructor_attributes"]], "sage.structure.set_factories_example": [[29, 1, 1, "", "AllPairs"], [29, 1, 1, "", "PairsX_"], [29, 1, 1, "", "Pairs_Y"], [29, 1, 1, "", "SingletonPair"], [29, 1, 1, "", "XYPair"], [29, 3, 1, "", "XYPairs"], [29, 1, 1, "", "XYPairsFactory"]], "sage.structure.set_factories_example.AllPairs": [[29, 2, 1, "", "check_element"], [29, 2, 1, "", "pairs_y"]], "sage.structure.set_factories_example.PairsX_": [[29, 2, 1, "", "an_element"], [29, 2, 1, "", "check_element"]], "sage.structure.set_factories_example.Pairs_Y": [[29, 2, 1, "", "an_element"], [29, 2, 1, "", "check_element"], [29, 2, 1, "", "single_pair"]], "sage.structure.set_factories_example.SingletonPair": [[29, 2, 1, "", "check_element"]], "sage.structure.set_factories_example.XYPairsFactory": [[29, 2, 1, "", "add_constraints"]], "sage.structure.test_factory": [[30, 1, 1, "", "A"], [30, 1, 1, "", "UniqueFactoryTester"]], "sage.structure.test_factory.UniqueFactoryTester": [[30, 2, 1, "", "create_key"], [30, 2, 1, "", "create_object"]], "sage.structure.unique_representation": [[31, 1, 1, "", "CachedRepresentation"], [31, 1, 1, "", "UniqueRepresentation"], [31, 1, 1, "", "WithPicklingByInitArgs"], [31, 3, 1, "", "unreduce"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "terms": {"": [2, 4, 5, 9, 12, 13, 14, 20, 25, 26, 27, 28, 29, 31], "0": [2, 4, 5, 7, 9, 10, 12, 14, 16, 18, 20, 22, 24, 25, 26, 27, 28, 29, 31], "00000000000000": 5, "01": [7, 8], "02": [16, 31], "03": 14, "04": 6, "05": [6, 9, 16], "06": [5, 10], "07": [5, 10], "08": [5, 7, 31], "09": [9, 10], "1": [2, 5, 7, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31], "10": [2, 5, 7, 8, 12, 14, 19, 20, 22, 24, 27], "100": [7, 14, 26, 27], "1000": [14, 24], "10000": 27, "1000000": 31, "11": [2, 5, 7, 14, 20], "11115": 5, "12": [2, 5, 7, 10, 14, 16, 19], "120": 5, "121": 5, "12215": 31, "12313": 20, "128": 5, "13": [5, 7, 16], "14": [16, 19, 26], "14000000000000": 26, "14014": 20, "141592654": 5, "1416": 5, "14249": 20, "14519": 6, "14711": 20, "15": [2, 5, 7, 12, 14, 16], "16": [5, 7, 14, 19], "160": 7, "16934": 9, "17": [5, 7, 16], "18": 19, "18795": 10, "19": [7, 10, 20, 22], "2": [2, 4, 5, 7, 9, 10, 13, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31], "20": [5, 7, 10, 12, 19, 26], "200": 31, "2006": [5, 7, 10, 22], "2007": 5, "2008": [6, 7, 9, 31], "2009": 10, "2010": [5, 6, 8, 10, 14], "2011": 28, "2012": 28, "2013": [6, 9, 12, 31], "2014": 9, "2016": [5, 12], "2017": 12, "20767": 5, "20922789888000": 19, "22": 7, "23": 7, "2327856159383841": 20, "23435": 4, "24": 19, "25": [5, 7, 14, 28, 31], "27": [9, 16], "272118": 20, "28": 16, "29": 5, "298": 26, "3": [2, 4, 5, 6, 7, 9, 10, 13, 14, 15, 16, 18, 20, 22, 25, 26, 27, 28, 29, 30, 31], "30": [5, 7], "300": 26, "31": [20, 22], "34": [16, 27], "342": 16, "35": [5, 16, 20], "36": 16, "3628800": 19, "37": 5, "37922": 20, "38077": 5, "4": [2, 5, 7, 12, 14, 16, 18, 19, 22, 25, 26, 27, 28, 29, 30, 31], "40": [8, 9, 12], "40320": 19, "41": 26, "414213562373095": 10, "42": [5, 16], "43": 26, "44": 26, "446": 16, "45": [7, 26], "453": 24, "462": 20, "465571231876768": 20, "47": 26, "479001600": 19, "49": [20, 22], "5": [2, 4, 5, 6, 7, 9, 10, 12, 14, 15, 16, 18, 20, 22, 25, 26, 27, 28, 29, 31], "50": [20, 27], "5000000000000001": 7, "51": 16, "52": 16, "53": [5, 16], "5347": 5, "55": 20, "5759": 5, "59": 7, "5979": 20, "6": [2, 5, 7, 9, 14, 16, 18, 19, 20, 22, 25, 27, 31], "625": 16, "6402373705728000": 19, "666666666666666": 20, "666666666666667": [5, 20], "7": [2, 5, 9, 10, 14, 16, 18, 20, 22, 27, 31], "72": 16, "720": 19, "736": 16, "752": 16, "7797": 20, "7925519925154479": 20, "8": [2, 5, 14, 19, 20, 25, 27, 29], "81": 31, "86": 16, "861": 16, "869": 16, "87178291200": 19, "9": [2, 4, 5, 7, 10, 14, 16, 26, 27, 31], "91": 16, "94": 16, "95": 16, "A": [4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31], "And": [28, 31], "As": [20, 22, 28, 29, 31], "BE": 20, "But": [14, 20, 31], "By": [4, 5, 12, 20, 27, 31], "For": [2, 5, 7, 9, 12, 13, 14, 20, 22, 25, 28, 31], "IN": 27, "IT": 20, "If": [2, 4, 5, 7, 12, 13, 14, 20, 22, 25, 26, 27, 28, 31], "In": [2, 4, 5, 7, 8, 9, 12, 20, 22, 26, 27, 28, 31], "It": [5, 7, 9, 12, 14, 22, 25, 27, 28, 29, 31], "Its": [20, 31], "NOT": 9, "No": 5, "Of": 31, "On": [4, 5, 6, 7, 20, 28, 31], "One": [14, 25, 29, 31], "Or": 4, "Such": 31, "THE": 20, "That": 31, "The": [2, 4, 6, 7, 9, 10, 12, 13, 14, 20, 22, 25, 26, 27, 28, 29, 31], "Then": [4, 5, 9, 14, 25, 31], "There": [4, 5, 6, 7, 9, 20, 22, 25, 26, 28, 31], "These": [5, 7, 12, 13, 31], "To": [4, 5, 7, 12, 14, 18, 20, 22, 26, 27, 31], "With": [0, 2, 4, 9, 13, 25, 31], "_": [2, 9, 12, 20], "__abs__": 5, "__add__": 5, "__bases__": 4, "__bool__": 5, "__call__": [5, 20, 28, 29], "__class__": [2, 16, 20], "__classcall__": [9, 31], "__classcall_private__": [9, 31], "__contains__": 20, "__copi": 6, "__copy__": [14, 16, 31], "__deepcopy__": 31, "__del__": 31, "__dict__": [4, 31], "__dictoffset__": 4, "__eq__": [25, 31], "__floordiv__": 5, "__ge__": 12, "__get__": 31, "__getattr__": 4, "__getnewargs__": 31, "__getstate__": 5, "__hash__": [5, 18, 31], "__init__": [4, 5, 9, 14, 18, 20, 25, 28, 31], "__le__": 12, "__lt__": 25, "__main__": [4, 9, 18, 31], "__mod__": 5, "__module__": [4, 20], "__mul__": [5, 6, 20], "__name__": [4, 20], "__ne__": 25, "__neg__": 5, "__new__": [5, 31], "__reduce__": [4, 9, 31], "__reduce_ex__": 9, "__repr__": [9, 31], "__richcmp__": 25, "__setitem__": 27, "__setstate__": 5, "__sub__": 5, "__subclasses__": 5, "__truediv__": 5, "__weakref__": 9, "_act_": 20, "_add_": 5, "_add_long": 5, "_add_to_opt": 12, "_an_element_": 20, "_ascii_art_": 26, "_assign_nam": 22, "_cache_kei": [9, 26], "_call_": 20, "_class": 5, "_coerce_map_from_": 20, "_convert_map_from_": 20, "_default_polici": 28, "_dict": 5, "_dispatch": 12, "_div_": 5, "_element_constructor": 20, "_element_constructor_": [20, 28], "_element_init_pass_par": 20, "_entri": 5, "_eq": 25, "_facade_for": [20, 28], "_factory_data": [9, 31], "_first_ngen": [2, 5, 7, 19, 20, 22, 26], "_floordiv_": 5, "_foo": 2, "_foo0": 2, "_ge_": 12, "_ge_option_a": 12, "_ge_option_b": 12, "_get_action_": 20, "_get_list": 16, "_hash_": 14, "_hom_": 20, "_init_category_": 20, "_integer_": 20, "_is_coercion_cach": 20, "_is_conversion_cach": 20, "_is_immut": 18, "_latex_gener": 13, "_le_": 12, "_le_option_a": 12, "_le_option_b": 12, "_lmul_": 20, "_lt": 25, "_m": 18, "_mod_": 5, "_mul_": [5, 20], "_mul_long": 5, "_name": 22, "_neg_": 5, "_new_c": 5, "_pairs_i": 29, "_parent": 5, "_parent_for": 28, "_populate_coercion_lists_": 20, "_pow_": 5, "_pow_int": 5, "_reduct": [4, 31], "_remove_from_coerce_cach": 20, "_repr_": [5, 6, 12, 14, 20, 26], "_repr_gener": 13, "_repr_opt": 20, "_repr_option_bracket": 13, "_repr_with_bel": 12, "_repr_with_whistl": 12, "_require_immut": 18, "_require_mut": [14, 18], "_reset": [12, 26], "_richcmp_": [5, 25], "_rmul_": 20, "_sageobject__custom_nam": 26, "_someth": 2, "_sub_": 5, "_unset_coercions_us": 20, "_val": 18, "_x": [4, 14], "_y": 14, "a1": [2, 25], "a2": [2, 25], "a42": 2, "a42bar": 2, "a_": 13, "a_class": 20, "aa": 5, "ab": [2, 5, 20, 31], "abbrevi": 12, "abc": 2, "abelian": 10, "abelian_iter": 11, "abil": 4, "abl": [22, 28, 31], "about": [5, 8, 9, 14, 20, 31], "abov": [4, 5, 12, 25, 31], "absolut": [5, 27, 31], "abstract": [0, 4, 7, 13, 14, 20, 28, 31], "accept": [5, 9, 20, 28, 31], "access": [7, 13, 31], "accord": [7, 25, 31], "accordingli": [20, 31], "account": [9, 27, 31], "accuraci": 5, "achiev": [4, 5, 12, 26, 31], "across": 5, "act": [20, 31], "action": [12, 20], "action_list": 20, "actual": [5, 7, 8, 9, 12, 20, 25, 28, 29, 31], "ad": [5, 7, 9, 10, 20, 28, 31], "add": [5, 12, 20, 26, 28, 29, 31], "add1_immut": 16, "add1_intern": 16, "add1_mut": 16, "add1_with": 16, "add_constraint": [28, 29], "addit": [2, 5, 9, 12, 20, 31], "addition": [9, 14, 20], "additive_ord": 5, "additivegroupel": 5, "address": [4, 31], "adic": 26, "adjac": 7, "admittedli": 28, "advanc": [20, 31], "advantag": 31, "affect": [9, 27], "after": [2, 5, 12, 13, 14, 20, 24, 25, 27, 31], "again": [4, 9, 12, 14, 18, 27, 31], "against": [6, 10, 31], "aim": 5, "ala": 31, "alexand": [7, 10], "algebra": [4, 7, 20, 31], "algebrael": 5, "algorithm": [5, 28], "alia": [4, 5, 6, 10, 12, 15], "all": [2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31], "allow": [2, 5, 9, 12, 13, 20, 22, 25, 26, 27, 31], "allpair": [28, 29], "allpairs_with_categori": 28, "along": [9, 13], "alpha": 2, "alpha0": 2, "alpha1": 2, "alphanumer": 2, "alreadi": [9, 14, 20, 28, 31], "also": [2, 4, 5, 7, 9, 12, 13, 14, 20, 22, 25, 26, 27, 28, 31], "alt_nam": 12, "altern": [12, 14, 20, 26, 28], "alternatinggroup": 20, "although": 5, "alwai": [5, 20, 25, 26, 28], "ambient": [2, 9, 22], "ambigu": 12, "among": [4, 26], "an": [0, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 18, 20, 22, 24, 25, 26, 27, 28, 31], "an_el": [20, 28, 29], "analog": 25, "analogu": [20, 23], "andrew": 12, "anew": 9, "ani": [2, 4, 5, 9, 13, 14, 20, 22, 25, 26, 27, 28, 31], "anoth": [4, 5, 7, 12, 20, 31], "answer": 4, "anymor": [10, 31], "anyth": [13, 20], "anywher": 27, "apart": 12, "appear": 2, "append": [6, 14, 27], "appet": 12, "appli": [5, 12, 28, 31], "applic": [4, 6, 31], "approach": 31, "appropri": [4, 13, 26, 28, 31], "approxim": 5, "ar": [0, 2, 4, 5, 6, 7, 9, 12, 13, 14, 20, 22, 23, 25, 26, 27, 28, 31], "arbitrari": [5, 12, 13, 25, 31], "architectur": 5, "arg": [5, 7, 9, 12, 20, 28, 30, 31], "args_opt": 29, "argument": [2, 4, 5, 6, 9, 12, 13, 20, 25, 26, 28, 29], "aris": 31, "arithmet": [7, 9, 20, 24], "arithmeticerror": 5, "around": [5, 8, 26, 31], "arrabiata": 12, "arrai": [0, 4, 12], "art": [20, 26], "artifici": 9, "ascii": [20, 26], "ascii_art": [20, 26], "asciiart": 26, "aspect": 9, "assert": [20, 25], "assertionerror": 20, "assign": [5, 7, 9, 12, 27, 31], "associ": [5, 12], "assum": [4, 5, 7, 18, 22, 25, 28, 31], "atfer": 14, "atom": 20, "attach": 12, "attempt": [5, 7, 20, 24], "attribut": [4, 5, 9, 12, 13, 18, 20, 25, 26, 28, 31], "attributeerror": 5, "author": [5, 6, 7, 8, 9, 10, 12, 14, 18, 22, 25, 28, 31], "automag": 31, "automat": [4, 5, 9, 12, 20, 31], "automorph": 20, "avail": [9, 13, 31], "avoid": [14, 31], "awai": 20, "awar": 31, "b": [2, 4, 5, 9, 10, 13, 20, 22, 25, 26, 27, 28, 29, 31], "b1": [2, 25], "b11": 2, "b2": 25, "b_": 13, "back": [5, 24, 26, 31], "backward": [13, 27], "bad": 27, "bake": 12, "bar": 4, "bare": [6, 28], "barefunctionpolici": 28, "barfoo": 4, "base": [0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 24, 25, 27, 28, 29, 30, 31], "base_chang": 7, "base_extend": [5, 10, 21], "base_map": [20, 22], "base_r": [2, 5, 7], "basi": [12, 13, 20, 31], "basic": [5, 12, 28, 31], "battletoad": 9, "bb": [2, 5], "becaus": [5, 9, 10, 12, 20, 22, 25, 26, 27, 31], "becom": [12, 25], "been": [5, 9, 13, 20, 26, 31], "befor": [5, 6, 20, 24, 27, 28, 31], "begin": [12, 14], "behav": [5, 14, 25, 26, 28], "behavior": [4, 14, 20, 27, 31], "behaviour": [4, 5, 9, 12, 31], "being": [9, 12, 21, 22, 26, 27, 31], "bell": 12, "belong": 28, "below": [7, 9, 12, 25, 27, 31], "benefit": 31, "besid": 31, "best": [4, 12, 16], "betterusag": 31, "between": [5, 9, 20, 31], "beyond": 20, "big": 28, "bigcup_": 29, "bigger": 2, "bin_op": 5, "binari": 5, "bind": 31, "binop": 5, "binput": 26, "bit": [5, 8, 31], "bla": [4, 6, 16, 17], "blanklin": [12, 20], "block": [4, 14, 24], "bool": 28, "boolean": [4, 5, 12, 13, 14, 20, 25, 26, 27, 28], "booleanpolynomialr": 2, "both": [4, 5, 13, 20, 25, 31], "bound": [20, 31], "bracket": 13, "bradshaw": [5, 9], "braun": 10, "bread": 12, "break": [5, 7, 10, 12, 14, 26], "brief": 12, "bruhat": 4, "bug": [7, 10], "build": [4, 28], "built": [4, 5, 9, 14, 27, 28], "bunch": 28, "bypass": 31, "c": [2, 4, 5, 9, 13, 14, 20, 22, 25, 26, 28, 31], "c1": 31, "c2": 31, "c2b": 31, "cach": [0, 4, 5, 7, 14, 20, 26], "cached_funct": [4, 31], "cached_in_parent_method": 5, "cached_method": [4, 5, 26], "cachedrepresent": 9, "cachefunc": [4, 5], "cake": 12, "call": [2, 4, 5, 7, 9, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 27, 28, 29, 31], "callabl": [9, 20, 31], "caller": [5, 8], "can": [2, 4, 5, 7, 8, 9, 12, 14, 18, 20, 22, 25, 26, 27, 28, 29, 31], "cannot": [2, 4, 5, 9, 14, 18, 20, 25, 26, 31], "canon": [5, 20, 22, 27, 31], "canonic": 31, "canonical_associ": 5, "canonical_coercion": 5, "cap": 20, "capabl": 12, "cardin": 28, "care": 9, "carri": 26, "carriag": 27, "cartesian_product": 4, "case": [5, 6, 7, 9, 10, 12, 14, 20, 22, 25, 27, 28, 31], "case_sensit": 12, "cast": 5, "casual": 5, "cat": 2, "catch": 31, "categori": [0, 4, 5, 6, 10, 13, 20, 22, 26, 27, 28, 31], "category_object": [2, 22], "categoryobject": [2, 20, 22], "caught": 5, "caus": 12, "caveat": 31, "cc": [5, 20, 31], "ccc": 2, "cdef": [5, 9, 25, 26, 31], "cdf": 20, "certain": [9, 20, 28], "certainli": 5, "certify_nam": 2, "chanc": 31, "chang": [5, 7, 9, 10, 12, 14, 18, 19, 22, 25, 26, 27, 28, 31], "charact": 2, "characterist": 27, "check": [2, 4, 5, 7, 9, 10, 12, 13, 14, 15, 16, 20, 22, 27, 28, 29, 31], "check_default_categori": 2, "check_el": [28, 29], "checker": 12, "choic": [20, 28], "choos": [4, 9, 31], "chosen": [4, 9, 20], "cimport": 5, "circumst": 31, "circumv": 27, "circumvent": 27, "cl": [4, 12, 25, 31], "class": [0, 3, 6, 7, 8, 9, 10, 13, 14, 16, 18, 19, 24, 25, 27, 28, 29, 30], "classcallmetaclass": [4, 31], "classmethod": 12, "cleanli": 31, "clear_cach": 5, "clearli": 14, "clonablearrai": [14, 15, 16], "clonableel": 14, "clonableintarrai": [14, 15], "clonablelist": [14, 15], "clone": 0, "cm": 5, "cmd": 16, "cmp": [12, 25], "cn": 2, "co": 19, "coarser": 9, "code": [0, 2, 4, 5, 14, 20, 22, 24, 28, 29, 31], "codomain": [2, 20, 22], "coeff": 10, "coeffici": 10, "coerc": [5, 7, 20, 22, 27], "coerce_binop": 5, "coerce_embed": 20, "coerce_list": 20, "coerce_map_from": 20, "coercion": [5, 7, 9, 10, 20, 22, 25, 26, 27], "coercion_model": [5, 20], "coercion_traceback": 5, "coercionmodel": 5, "coexist": 31, "collect": [20, 28, 31], "column": 20, "com": [5, 20], "combin": [4, 7, 31], "combinat": [2, 7, 12, 13, 26, 31], "combinatori": 4, "combinatorialfreemodul": [2, 13], "come": [4, 5, 28], "comma": [2, 13, 27], "common": [4, 5, 7, 12, 14, 27, 28], "commut": [2, 5, 7], "commutativealgebrael": 5, "commutativeringel": 5, "comp": 26, "compact": 12, "compar": 25, "comparison": [0, 5, 6, 7, 20, 31], "compat": [5, 13, 27, 31], "complet": [5, 12, 20, 25], "complex": [20, 27], "complex_doubl": 20, "complex_mpfr": 5, "complexnumb": 5, "complic": [5, 7, 31], "compress": 26, "comput": [0, 5, 14, 20, 23, 25, 26, 28, 31], "con": [28, 29], "concern": 28, "conclud": 31, "concret": 5, "condit": 5, "confus": 31, "consecut": 14, "consequ": [9, 29, 31], "consid": [5, 9, 20, 25, 28, 29], "consist": [4, 9, 13, 25, 28, 31], "constant": 25, "constraint": [28, 29, 31], "construct": [4, 6, 9, 14, 20, 22, 27, 28, 29, 31], "constructor": [2, 20, 27, 28, 31], "contain": [5, 6, 7, 8, 9, 12, 13, 20, 23], "content": 14, "context": [2, 4, 22], "continu": [5, 12, 25], "contrast": 31, "control": [9, 12, 13, 28], "conveni": [5, 31], "convent": [12, 26], "convers": [5, 7, 20, 25, 27], "convert": [2, 14, 20, 25, 27], "convert_list": 20, "convert_map_from": 20, "convert_method_nam": 20, "cooper": 28, "coordin": [2, 28], "coordinate_r": 2, "copi": [2, 4, 5, 7, 14, 16, 18, 20, 27, 31], "correct": [0, 22, 24], "correctli": [14, 28], "correspond": [2, 5, 9, 12, 25, 27, 28], "cost": 12, "could": [5, 25, 28, 29], "count": [9, 14], "coupl": [7, 28, 29], "cours": [12, 31], "cpdef": 5, "cr": [7, 8, 27], "cr_str": 27, "cream": 12, "creat": [2, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 22, 25, 27, 28, 29, 31], "create_kei": [9, 30, 31], "create_key_and_extra_arg": [9, 31], "create_object": [9, 30, 31], "creation": [9, 12, 14, 27, 31], "cremona": 7, "critic": 5, "crude": 29, "crust": 12, "cumbersom": 4, "curiou": [5, 31], "current": [2, 4, 12, 13, 28, 31], "custom": [4, 9, 12, 25, 26, 28, 31], "customis": 12, "cy_add1_immut": [16, 17], "cy_add1_intern": [16, 17], "cy_add1_mut": [16, 17], "cy_add1_with": [16, 17], "cycl": [4, 14], "cython": [0, 2, 4, 5, 6, 9, 14, 16, 31], "cython_cod": 5, "d": [2, 5, 9, 12, 13, 20, 26, 31], "dai": 12, "data": [4, 5, 8, 9, 14, 31], "databas": 28, "david": [5, 7, 10], "de": [12, 18], "deal": [5, 28], "debug": [0, 5], "debug_opt": 3, "debugoptions_class": 3, "decid": [25, 28], "decim": 5, "declar": 5, "decompress": 26, "decor": [5, 18, 25, 31], "decreas": 7, "dedekind": 2, "dedekinddomainel": 5, "deepcopi": 31, "def": [4, 5, 6, 9, 12, 14, 18, 20, 22, 25, 26, 28, 31], "default": [0, 2, 4, 5, 6, 7, 9, 12, 13, 14, 19, 20, 26, 27, 28, 29, 31], "default_categori": 2, "default_prec": 19, "defer": 20, "defin": [2, 7, 9, 10, 12, 13, 14, 15, 20, 22, 25, 26, 28, 31], "definit": [5, 9, 31], "defn": [20, 22], "degre": [5, 7, 20], "del": 31, "deleg": 31, "delet": 31, "demey": [5, 12, 25], "demonstr": [0, 5, 9, 13, 14, 29, 31], "denot": 20, "dens": 20, "depend": [4, 5, 9, 12, 26, 28, 31], "deprec": [5, 20, 21, 22], "deprecationwarn": [5, 20], "derickx": 5, "deriv": [4, 5, 9, 10, 20, 22, 25, 26, 27, 28, 31], "describ": [5, 12, 25, 29], "descript": [12, 13, 25], "descriptor": 31, "design": [5, 14, 20, 31], "desir": [4, 5, 6, 20, 28, 31], "despit": 12, "dessert": 12, "destroi": 31, "detail": [9, 12, 14, 20, 25, 26, 28], "detect": [5, 20], "determin": [2, 4, 5, 7, 9, 20, 22, 24, 27, 31], "devic": 28, "di": 26, "dict": 12, "dictionari": [2, 4, 5, 12, 13, 20, 31], "differ": [4, 5, 7, 9, 12, 20, 22, 25, 26, 27, 28, 31], "difficulti": 31, "digit": 5, "dimens": [5, 7], "dimension": 20, "direct": [5, 20], "directli": [5, 9, 20, 28, 31], "disadvantag": 31, "discard": 7, "discourag": 31, "discov": 20, "discuss": [4, 31], "disjoint": 29, "disjointunionenumeratedset": 29, "dispatch": 20, "dispatch_to": 12, "displai": [12, 13, 20, 22, 26], "distinct": [9, 14, 31], "divid": 5, "divis": [5, 7, 24], "divisor": 5, "do": [5, 7, 9, 12, 13, 20, 22, 25, 27, 28, 31], "doc": 31, "doccl": 4, "docstr": 12, "doctest": [4, 5, 9, 14, 15, 16, 18, 20, 25, 31], "document": [4, 5, 7, 9, 10, 13, 29, 31], "doe": [2, 4, 5, 6, 7, 9, 12, 13, 20, 25, 26, 31], "doesn": [5, 14], "domain": [2, 9, 20, 22], "don": [4, 9, 13, 14], "done": [5, 6, 8, 9, 12, 24, 31], "dot": 14, "doubl": [5, 7, 31], "doubt": 5, "down": [4, 5, 8, 20, 31], "drop": 31, "due": 31, "dummi": [6, 28], "dummypar": 6, "dump": [4, 5, 7, 9, 26, 31], "duplic": [28, 29], "dure": [9, 14, 20, 26, 28, 31], "dx": 26, "dyn": 4, "dynam": [0, 12], "dynamic_class": [4, 20], "dynamic_class_intern": 4, "dynamicclasscallmetaclass": 4, "dynamicinheritcomparisonclasscallmetaclass": 4, "dynamicinheritcomparisonmetaclass": 4, "dynamicmetaclass": 4, "e": [2, 4, 5, 6, 9, 12, 13, 14, 16, 20, 25, 26, 27, 28, 31], "e1": 5, "e2": 5, "e_i": 7, "each": [4, 7, 12, 13, 20, 27, 28], "eas": 5, "easi": [9, 22, 28, 31], "easier": [9, 12, 25, 31], "easili": [7, 24, 31], "ebroken": 5, "effect": [9, 12, 13, 31], "effici": [2, 5, 25, 27, 28, 29], "either": [5, 12, 13, 20, 25, 27], "el": [14, 28, 29], "el1": 14, "el2": [14, 28], "el3": 14, "el4": 14, "elc": 14, "elc2": 14, "element": [2, 4, 9, 10, 12, 13, 16, 20, 22, 25, 26, 27, 28, 29, 31], "element_ascii_art": 20, "element_cache_test": 5, "element_class": [5, 20, 28], "element_constructor": 20, "element_constructor_attribut": 28, "element_is_atom": 20, "element_via_parent_test": 5, "element_wrapp": 6, "elementmethod": 5, "elementwithcachedmethod": 5, "elementwrapp": [6, 20, 28, 29], "elementwrappercheckwrappedclass": 6, "elementwrappertest": 6, "elimin": 5, "ellipsi": [5, 9], "ellipsis_rang": 5, "ellipticcurv": 20, "els": 13, "elsewher": 2, "eltpair": 20, "emb": 20, "embed": 20, "empti": [4, 5, 9, 13, 20, 25, 27, 28, 31], "empty_tupl": 26, "emptyseterror": 20, "emul": 4, "enabl": [5, 12], "encod": 14, "encount": 5, "encourag": [5, 20], "end": [12, 14, 16, 20, 26, 27], "end_doc": 12, "endomorph": 20, "endow": [4, 6], "endpoint": 20, "enough": [9, 20, 25, 28, 31], "ensur": [4, 5, 9, 14, 20, 28, 31], "ent": 12, "entir": 27, "entre": 12, "entri": [2, 5, 12, 13, 20, 22, 25, 27], "enumer": [2, 4, 13, 28], "epython": 5, "eq": 25, "eq_attr": 25, "equal": [2, 5, 6, 9, 12, 20, 25, 31], "equip": [2, 12, 22], "equival": [5, 7, 9, 14, 25, 31], "error": [2, 5, 14, 20, 24], "esp": 12, "espresso": 12, "essenc": 14, "etc": [5, 6, 20, 25, 27], "euclidean": 2, "euclideandomainel": 5, "evalu": [5, 9, 28, 31], "even": [2, 5, 9, 20, 24, 25, 31], "eventu": [12, 20, 31], "everi": [12, 25, 26, 27], "everyth": [9, 13, 25, 27, 31], "exact": [0, 20, 25], "exactli": [12, 13, 20], "exampl": [0, 2, 3, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 30, 31], "examplepar": 5, "except": [4, 5, 13, 14, 20, 22], "exchang": 14, "exclud": 25, "exclus": 25, "execut": 4, "exemplifi": 29, "exist": [6, 9, 13, 20, 22, 25, 26, 27, 28, 31], "exp": [5, 26], "expand": 7, "expect": [5, 9, 12], "explain": [28, 31], "explan": [9, 31], "explicit": 13, "explicitli": [5, 12, 27, 31], "explos": 4, "expon": [5, 7], "expos": [5, 25], "express": 5, "extend": [5, 9, 14, 20, 22, 27, 31], "extens": [5, 9, 15, 22, 26], "extern": 31, "extra": [9, 26, 28], "extra_arg": [9, 30, 31], "f": [2, 4, 5, 7, 9, 13, 18, 20, 22, 26, 28, 31], "f7": 10, "facad": [20, 28, 29], "facade_element_constructor_attribut": 28, "facade_for": [20, 28], "facade_polici": [28, 29], "facadeparentpolici": 28, "facadeset": 28, "fact": [5, 20, 31], "factor": [0, 2, 6, 8], "factori": [0, 31], "factorization_integ": [7, 8], "fail": [5, 9, 20, 28], "failur": 5, "fairli": 7, "fake": [5, 31], "fall": 5, "fals": [3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 18, 20, 22, 24, 25, 26, 27, 28, 31], "famili": 29, "familiar": [2, 20], "fanci": 12, "far": [25, 31], "fast": [5, 20, 31], "fast_method": 9, "faster": [5, 20, 31], "fastest": [5, 20], "featur": [5, 6, 12, 18, 31], "few": [20, 22, 28], "field": [2, 5, 7, 9, 10, 13, 20, 22, 26, 27, 31], "fieldel": 5, "file": [28, 31], "filenam": 26, "final": [4, 14, 28, 31], "find": [4, 5, 7, 9, 20, 31], "fine": 31, "finish": 12, "finit": [0, 5, 9, 10, 13, 20, 22, 28, 31], "finite_field_constructor": 9, "finite_field_givaro": 31, "finite_field_pari_ffelt": 31, "finite_field_prime_modn": 31, "finite_r": [5, 9, 10, 20, 22, 31], "finitefield_givaro_with_categori": 31, "finitefield_pari_ffelt_with_categori": 31, "finitefield_prime_modn_with_categori": 31, "first": [2, 4, 5, 6, 7, 9, 10, 12, 13, 14, 18, 20, 22, 25, 26, 27, 28, 29, 31], "first_opt": 12, "fix": [5, 7, 10, 14, 20, 28, 31], "fixm": 20, "flag": 24, "flexibl": [27, 28], "float": [5, 27], "floatcmp": 5, "floor": 5, "florent": [14, 28], "fluffi": 12, "fly": 4, "follow": [2, 4, 5, 7, 9, 10, 12, 14, 20, 22, 28, 29, 31], "foo": [2, 4, 28, 30], "foobar": 4, "foobar1": 4, "foobar2": 4, "forbidden": 14, "forc": [5, 9, 12], "forev": 24, "form": [7, 13, 14, 31], "formal": [0, 7], "formal_sum": 10, "formalsum": 10, "format": 16, "formatt": 20, "formerli": 31, "found": [5, 9, 27, 31], "four": 9, "fpylll": [5, 10], "fraction": [5, 7], "fraction_field": 5, "framework": [5, 20, 26, 28], "free": [2, 7, 9, 22], "free_modul": 9, "freealgebra": [2, 7], "freemodul": [2, 22], "freemoduleelement_generic_dens": 5, "freemodulefactory_with_standard_basi": 9, "freez": 27, "french": 26, "fresh": 14, "friend": 25, "from": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31], "fulfil": 14, "full": [6, 9, 20], "fulli": 5, "fun": 22, "func": [5, 9, 20], "function": [0, 2, 4, 5, 7, 9, 10, 13, 18, 20, 22, 25, 26, 27, 28, 29, 31], "further": [4, 31], "furthermor": [4, 14, 20], "futur": [4, 28], "g": [2, 4, 5, 6, 7, 9, 13, 20, 25, 26, 27, 31], "g3": 31, "gadget": 31, "gain": [9, 27], "gamma_0": 7, "gap": 5, "garbag": 31, "gather": 28, "gaussian": 5, "gc": 20, "gcd": [2, 5, 7], "gen": [2, 5, 7, 20, 22, 26], "gener": [0, 2, 5, 7, 8, 9, 10, 12, 20, 25, 28, 31], "generic_factory_reduc": 9, "generic_factory_unpickl": 9, "gens_dict": 2, "gens_dict_recurs": 2, "gens_pi": 11, "get": [7, 9, 12, 26, 31], "get_act": 20, "get_coercion_model": 5, "get_custom_nam": 26, "get_flag": 24, "get_i": 14, "get_object": [9, 20], "get_test_shel": 26, "get_vers": 9, "get_x": 14, "gf": [5, 9, 10, 20, 22, 27, 31], "ghjv1994": 14, "github": [5, 20], "givaro": 9, "give": [12, 13, 20, 22, 31], "given": [2, 4, 5, 9, 10, 12, 13, 14, 20, 25, 26, 27, 28, 31], "global": [0, 5, 9, 22, 26], "global_opt": 12, "globalopt": 12, "globaloptionsmeta": 12, "globaloptionsmetameta": 12, "goal": 29, "goe": 20, "gonzalo": 5, "good": [4, 12, 22, 28], "got": 5, "granular": 9, "greater": 13, "greatest": 5, "greatli": 27, "group": [2, 4, 5, 10, 20, 22, 31], "groupel": 4, "guarante": [2, 5, 8, 20, 24, 27, 31], "guess": 20, "guess_pass_par": 20, "h": [2, 5, 26, 31], "ha": [4, 5, 7, 8, 9, 12, 13, 20, 26, 27, 28, 31], "had": 6, "hand": [4, 5, 6, 7, 20, 31], "handl": [5, 9, 13, 20, 28, 31], "hang": 24, "happen": [5, 20, 27, 31], "hard": 5, "hardcod": 4, "harvei": [5, 10], "has_coerce_map_from": 20, "hasattr": 9, "hash": [5, 6, 14, 18, 26, 27, 31], "hashabl": [26, 27, 31], "have": [4, 5, 7, 9, 12, 13, 18, 20, 25, 26, 27, 28, 31], "have_same_par": 5, "height": 25, "help": [5, 12], "helper": 25, "henc": [5, 9, 31], "here": [4, 5, 6, 9, 12, 25, 28, 29, 31], "hi": 27, "hidden": 29, "hierarchi": [2, 20, 23, 28], "highest": 26, "hivert": [14, 28], "hold": [5, 7, 14], "hom": [2, 20, 22], "homogen": 0, "homomorph": [2, 20, 22], "homset": 20, "homspac": [2, 20], "hopefulli": [4, 9], "how": [4, 9, 12, 14, 20, 24, 25, 27, 28, 29, 31], "howev": [5, 7, 8, 9, 12, 14, 20, 26, 27, 31], "howto": 31, "html": 31, "http": [5, 20, 31], "huge": 4, "i": [2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29], "ia": 14, "ia1": 14, "ia2": 14, "id": 5, "idea": [9, 12], "ideal": [2, 5, 7, 9, 20, 22], "idempot": 31, "ident": [5, 9, 20, 25, 27, 28, 31], "identifi": 26, "iff": 25, "ignor": [5, 7, 28, 31], "ignore_reduct": 4, "illeg": 14, "illustr": [2, 4, 7, 9, 12, 20, 22, 27, 28, 31], "im_gen": [20, 22], "imag": [20, 22], "imagin": 31, "immut": [5, 7, 14, 18, 26, 27, 31], "impl": 9, "implement": [0, 4, 6, 7, 9, 12, 14, 19, 20, 25, 26, 28, 29], "impli": 31, "implic": 31, "implicitli": 31, "import": [2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31], "impos": 31, "imposs": [7, 9, 31], "in_dict": 5, "includ": [7, 12, 13, 26], "incompat": 9, "incomplet": 15, "incorrectli": 14, "increas": [14, 15, 16], "increasingarrai": [14, 15, 16], "increasingarrayspi": 16, "increasingintarrai": [14, 15], "increasinglist": [14, 15], "inde": [28, 31], "indent": 22, "index": [0, 14, 25, 27], "index_set": 13, "index_set_std": 13, "indexed_gener": 13, "indexedgener": 13, "indexerror": 2, "indic": [13, 14, 25], "indirect": [4, 5, 14, 15, 16, 18, 20, 25], "indirectli": 20, "individu": 12, "induc": 22, "infinit": [2, 20], "infinitepolynomialr": 2, "infinityel": 5, "inform": [9, 12, 20, 28, 31], "inherit": [4, 5, 6, 8, 9, 14, 20, 26, 28], "inheritcomparisonclasscallmetaclass": 4, "inheritcomparisonmetaclass": 4, "init": 28, "init_no_par": 20, "initi": [6, 8, 9, 12, 14, 20, 28, 31], "inject": 2, "inject_vari": 2, "inlin": 5, "inplac": 7, "input": [2, 4, 5, 7, 12, 13, 14, 19, 20, 22, 25, 27, 28, 29, 31], "inquir": 20, "insert": [4, 12, 14, 27], "insid": 31, "instanc": [4, 5, 6, 9, 12, 14, 18, 25, 27, 28, 31], "instanti": 5, "instead": [4, 5, 9, 12, 13, 14, 18, 20, 22, 25, 27, 28, 31], "instruct": 14, "int": [4, 5, 8, 12, 14, 20, 27], "integ": [2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31], "integer_r": 9, "integerfactor": [0, 7], "integr": [2, 26], "integraldomainel": 5, "intend": [9, 14, 25, 31], "intens": 31, "intent": [5, 28], "intention": [28, 29], "interact": [2, 9, 22, 31], "interfac": [4, 10, 28], "intern": [9, 20, 22, 25, 29], "interpret": [2, 4, 26], "interv": [20, 25], "intpair": 14, "introduct": 29, "introspect": 4, "intrus": 31, "invari": [14, 20, 31], "invers": [4, 5], "inverse_mod": 5, "invert": 5, "invis": [5, 31], "invok": [5, 12], "involv": [5, 7, 20, 22, 27, 31], "ipython": 27, "irreduc": [5, 7], "is_additivegroupel": 5, "is_algebrael": 5, "is_commut": 7, "is_commutativealgebrael": 5, "is_commutativeringel": 5, "is_dedekinddomainel": 5, "is_el": 5, "is_euclideandomainel": 5, "is_exact": 20, "is_fieldel": 5, "is_immut": [5, 14, 18, 27], "is_infinityel": 5, "is_integr": 7, "is_integraldomainel": 5, "is_left": 20, "is_matrix": 5, "is_moduleel": 5, "is_monoidel": 5, "is_multiplicativegroupel": 5, "is_mut": [5, 14, 18, 27], "is_nilpot": 5, "is_on": 5, "is_par": 20, "is_prim": [5, 24], "is_principalidealdomainel": 5, "is_ringel": 5, "is_squar": 5, "is_unit": 5, "is_vector": 5, "is_zero": 5, "isinst": [5, 6, 7, 9, 10, 20, 27, 28, 31], "isn": 9, "issu": [4, 5, 6, 9, 10, 20, 31], "issubclass": 31, "item": [2, 7, 14, 20, 25, 27], "iter": [2, 13, 14, 27, 28, 29, 31], "iterate_kei": 13, "its": [2, 4, 5, 7, 9, 12, 13, 14, 20, 25, 26, 28, 31], "itself": [5, 7, 9, 12, 20, 26, 28], "j": [14, 20, 25], "jena": 18, "jeroen": [5, 12, 25], "john": 7, "join": [2, 5], "joincategori": 20, "julian": 9, "just": [4, 5, 9, 20, 28, 31], "k": [5, 7, 9, 14, 20, 22, 26], "k25": 31, "k5": 31, "k_into_m": 20, "karg": 12, "keep": 31, "kei": [2, 7, 9, 12, 13, 14, 20, 26, 27, 30, 31], "kept": [6, 27, 28, 29], "keyword": [5, 9, 12, 13, 20, 28, 31], "kind": [20, 28], "king": [9, 18, 31], "know": [5, 9, 25, 27, 31], "known": 28, "kohel": 7, "kp": 31, "kwd": [5, 7, 9, 13, 20, 30], "l": [5, 14, 15, 20, 22, 31], "l1": 25, "l2": 25, "l_into_k": 20, "l_into_m": 20, "label": 2, "lambda": [7, 12, 13, 20, 28], "larg": 12, "last": [2, 5, 7, 9, 12, 14, 15, 16, 18, 20, 22, 24, 26, 27, 28, 29, 31], "later": [26, 31], "latex": [2, 12, 13], "latex_bracket": 13, "latex_nam": [2, 13, 22], "latex_prefix": 13, "latex_scalar_mult": 13, "latex_variable_nam": 2, "latter": [5, 20, 31], "laurent": 19, "lazi": [4, 5, 20], "lazili": 25, "lazy_attribut": 4, "lazynamedunop": 5, "lazywrapp": 5, "lcm": [5, 7], "ldot": 5, "lead": 31, "leading_coeffici": 5, "leak": 20, "least": [5, 31], "left": [4, 5, 13, 20, 25, 28], "legal": 12, "len": [5, 7, 20, 25], "length": [2, 14, 25], "less": [9, 20, 25], "let": [4, 5, 9, 14, 20, 28, 29, 31], "letter": [2, 29], "level": [5, 28], "lexicograph": 25, "li": [20, 31], "lib": [5, 7, 9, 24, 31], "librari": [4, 31], "lie": 2, "life": [9, 12], "lightweight": 8, "like": [0, 4, 5, 7, 14, 27, 31], "linbox": [9, 31], "line": [9, 12, 20, 26, 31], "linear": 20, "link": 12, "link_to": 12, "list": [0, 2, 4, 5, 7, 8, 10, 12, 13, 16, 20, 25, 27, 28, 29, 31], "list_clon": [14, 15, 16], "list_clone_demo": [14, 15], "list_clone_tim": 16, "list_clone_timings_ci": 17, "listcmp": 25, "littl": 5, "live": 5, "load": [4, 7, 9, 26, 31], "localvar": 22, "locat": 9, "log": 26, "long": [4, 5, 25], "longer": 5, "look": [4, 5, 9, 12, 20, 31], "lookup": [4, 5, 9, 20], "lookup_glob": 9, "loop": 16, "loss": 20, "lost": 20, "lot": [5, 14, 26, 28, 31], "lower": 12, "lst": 14, "lt": 25, "lt_attr": 25, "luckili": 4, "m": [2, 4, 6, 11, 12, 20, 22, 31], "m_into_k": 20, "maarten": 5, "made": [5, 25, 31], "magic": [5, 12, 26], "mai": [4, 5, 7, 9, 13, 20, 26, 28, 31], "main": [12, 14], "make": [5, 9, 12, 14, 18, 20, 22, 25, 26, 27, 28, 30, 31], "make_el": 5, "manag": [0, 5, 14, 22, 28], "mandatori": 28, "mani": [2, 9, 14, 20, 22, 26, 28, 29, 31], "manipul": 7, "manual": [20, 31], "map": [13, 20, 22], "match": [7, 13], "matha": 12, "mathemat": [4, 5, 7, 14, 20, 23], "matric": 20, "matrix": [5, 20], "matrix_spac": 20, "matrixspac": 20, "maxim": 10, "maxima_method": 26, "maxima_wrapp": 26, "maximawrapp": 26, "meal": 12, "mean": [2, 4, 5, 20, 25, 26, 28, 31], "meaning": [14, 31], "meaningless": 4, "meant": [5, 25, 28, 31], "mechan": [4, 7, 9, 12, 14, 20, 28], "meet": 20, "memori": [4, 20, 26, 31], "menu": 12, "mess": 31, "messag": 5, "metaclass": [4, 12, 31], "metadata": 20, "method": [2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 18, 19, 20, 22, 25, 26, 28, 29, 31], "metric": [2, 20], "mid": [28, 29], "might": [4, 20, 22, 26, 31], "migrat": 31, "min": 6, "minim": [14, 28, 29], "minimum": 6, "minmonoid": 6, "minmonoidel": 6, "misc": [4, 5, 9, 18, 26], "mistak": 31, "mix": [5, 18, 20, 31], "mod": 5, "model": [4, 5, 14, 20, 21, 22, 25, 28], "modif": 14, "modifi": [5, 13, 14, 26, 31], "modn": 9, "modul": [0, 2, 4, 5, 7, 9, 10, 12, 13, 14, 15, 20, 22, 25, 29, 31], "modular": [5, 7], "modularsymbol": 7, "moduleel": [5, 10], "moduleelementwithmut": 5, "modulo": 5, "modulu": 22, "monodict": 20, "monoid": [2, 4, 5, 6, 7], "monoidel": 5, "monomi": 13, "monomial_coeffici": 20, "mor": 20, "more": [2, 7, 8, 9, 12, 20, 25, 27, 28, 29, 31], "moreov": [8, 31], "morphism": [2, 20, 22], "most": [2, 5, 7, 9, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 27, 28, 29, 31], "move": [2, 5], "mpz_cmp": 25, "mro": [4, 5], "much": [7, 8, 9, 28, 31], "mul": 20, "multi": [20, 26], "multipl": [4, 5, 6, 7, 13, 20, 31], "multipli": 7, "multiplicative_iter": 11, "multiplicative_ord": 5, "multiplicativegroupel": 5, "multivari": [2, 5, 20, 22], "must": [2, 5, 7, 9, 12, 14, 18, 20, 22, 26, 28, 29, 31], "mutabl": [0, 5, 14, 27, 31], "mutual": 25, "my": [5, 7], "mybrokenel": 5, "mycategori": 5, "myclass": [12, 31], "myclass2": 31, "myclass3": 31, "myclass4": 31, "myelement": [5, 20, 25], "myfactori": [9, 31], "mymorph": 20, "myoption": 12, "mypar": [5, 14, 20, 22], "mypermut": 4, "mypythonel": 5, "myrat": 5, "n": [2, 5, 7, 13, 14, 16, 20, 22, 27, 31], "n1": 27, "n2": 27, "n3": 27, "name": [2, 4, 5, 6, 7, 9, 12, 13, 19, 20, 22, 25, 26, 29, 31], "name_of_class_controlled_by_opt": 12, "namedtemporaryfil": 26, "names_std": 13, "namespac": [2, 9], "natur": [4, 20, 22], "necessari": [9, 12, 20, 22], "necessarili": 5, "need": [2, 5, 7, 9, 10, 12, 13, 14, 20, 22, 24, 25, 26, 28, 31], "neg": 13, "negat": [5, 25], "neither": 5, "never": [5, 14, 18, 27], "nevertheless": 27, "new": [4, 6, 9, 10, 14, 20, 21, 22, 27, 28, 31], "new_obj": 14, "new_polici": 28, "new_val": 18, "newli": 28, "newobj": 26, "news2": 28, "newxypair": 28, "next": [5, 7, 25, 31], "next_prime_pow": 31, "ngen": [2, 13, 22], "nice": [7, 12, 31], "nick": [7, 10], "nicola": [6, 31], "nilpot": 5, "nk": 20, "nn": [2, 12], "noetherian": 2, "non": [0, 4, 5, 7, 9, 20, 25, 26, 28, 31], "none": [2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 20, 22, 24, 26, 27, 28, 29, 31], "nonempti": 2, "nonetyp": 2, "nonexact": 19, "nonneg": [7, 19], "nontrivi": 20, "nonzero": [5, 7], "nor": [5, 9], "normal": [5, 14, 15, 20, 22, 31], "normalize_nam": 2, "normalizedclonablelist": [14, 15], "notat": [2, 4, 22], "note": [2, 4, 5, 6, 7, 9, 12, 20, 27, 28, 29, 31], "noth": [5, 13, 14, 28, 31], "notic": [5, 8, 9], "notimpl": [5, 25], "notimplementederror": [5, 14, 26], "now": [4, 5, 9, 10, 14, 20, 27, 28, 29, 31], "number": [2, 4, 5, 7, 9, 10, 13, 14, 20, 22, 26, 29, 31], "number_field": [5, 7, 10, 20], "numberfield": [5, 7, 20], "numer": [5, 27], "numerical_approx": 5, "numpi": 7, "o": [6, 19, 26, 31], "obj": [9, 14], "object": [3, 4, 5, 6, 7, 9, 12, 13, 14, 18, 24, 25, 27, 28, 30, 31], "objgen": 2, "obtain": [2, 5, 9, 12, 22, 31], "obviou": 31, "occas": [14, 28], "occur": 20, "occurr": [14, 27], "often": [9, 20, 28, 31], "old": [5, 9, 20, 25, 27, 31], "older": [9, 31], "omit": [5, 20], "onc": [2, 9, 12, 14, 20, 22, 31], "one": [4, 5, 9, 12, 13, 14, 20, 22, 24, 25, 26, 28, 29, 31], "onli": [4, 5, 9, 12, 13, 14, 20, 22, 25, 26, 27, 28, 31], "onto": 9, "op": [5, 20, 25], "op_eq": 25, "op_g": 25, "op_gt": 25, "op_l": 25, "op_lt": 25, "op_n": 25, "opcod": 26, "oper": [4, 5, 6, 14, 20, 25, 26, 31], "operand": 5, "opposit": 20, "opt": 28, "optim": [5, 20, 25], "optimis": 5, "option": [0, 2, 4, 5, 9, 13, 20, 22, 26, 28], "option1": 12, "option2": 12, "option_class": 12, "order": [4, 5, 7, 10, 12, 13, 14, 20, 22, 25, 28, 31], "org": 31, "origin": [9, 14, 31], "other": [4, 5, 6, 7, 9, 12, 13, 20, 25, 28, 31], "other_kei": 9, "otherclass": 31, "otherwis": [5, 7, 9, 13, 14, 18, 20, 25, 28, 31], "our": [4, 9, 31], "out": [5, 7, 20], "output": [2, 5, 7, 12, 13, 20, 22, 25, 26, 27], "outsid": [20, 25], "oven": 12, "over": [2, 5, 7, 9, 10, 20, 22, 26, 31], "overhaul": 12, "overhead": [5, 8], "overload": [9, 14, 20, 28, 31], "overrid": [5, 13, 20, 25, 26], "overridden": 31, "ownership": 28, "p": [5, 7, 12, 13, 14, 16, 20, 22, 25, 26, 28, 29], "p2": 28, "p23": 28, "p3": 28, "p_comp": 26, "p_i": [7, 29], "p_uncomp": 26, "padic": [20, 26], "page": 0, "pair": [5, 7, 8, 10, 13, 14, 28, 29], "pairs_i": [28, 29], "pairsx_": [28, 29], "pancratz": 8, "paradigm": 4, "paramet": [5, 9, 25, 28, 31], "parent": [2, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 25, 26, 27, 28, 29, 31], "parent_bas": 21, "parent_class": 10, "parent_gen": 22, "parent_old": 23, "parenthesi": 20, "parentmethod": [5, 20], "parentwithbas": [21, 22, 23], "parentwithgen": [22, 23], "parentwithsetfactori": [28, 29], "pari": [5, 7, 24], "pars": [12, 13], "parse_indices_nam": 13, "part": [5, 7], "partial": [4, 25], "particular": [4, 5, 9, 12, 14, 20, 25, 28, 29, 31], "partit": [5, 12], "partner": 13, "pass": [4, 5, 8, 9, 12, 13, 20, 25, 28, 29, 31], "pasta": 12, "path": [5, 9], "pathwai": [5, 20], "pattern": [4, 14, 31], "pbori": 2, "penn": 12, "per": [16, 28, 29], "perform": [0, 5, 9, 14, 20, 28], "permiss": 20, "permut": [4, 14, 20], "permutationcycletyp": 4, "persist": 26, "phi": 20, "pi": [5, 12, 20, 26], "pickl": [4, 5, 9, 31], "pickletool": 26, "piec": 14, "pitfal": 31, "pizza": 12, "place": [25, 26, 27], "plai": 31, "plain": [5, 7, 9, 26], "pleas": [5, 14, 18, 27], "point": [4, 14, 20, 28, 31], "pol": 28, "poli": 9, "polici": [28, 29], "pollut": 2, "polygen": [5, 7, 19, 20], "polynomi": [2, 5, 7, 10, 20, 22, 25, 26], "polynomialr": [2, 5, 7, 20, 22, 26], "poorli": 20, "pop": [14, 27], "poset": 4, "posetel": 4, "posit": [5, 7, 14, 31], "possibl": [4, 5, 7, 9, 12, 14, 20, 27, 28, 31], "possibli": [4, 25], "potenti": [4, 27], "pow": 5, "power": [4, 5, 19, 31], "powerseriesr": 19, "practic": [4, 25, 26], "pre": 6, "prec": [5, 19], "precis": [0, 5, 20, 28], "preexist": [4, 31], "prefer": [0, 9, 20], "prefix": [2, 12, 13], "prepend": [4, 13, 31], "prepend_cls_bas": 4, "preprocess": [9, 31], "preprocessed_argu": 31, "prerequisit": 28, "present": 13, "preserv": [27, 31], "pretti": 27, "prevent": 31, "primal": 5, "primarili": 31, "prime": [5, 7, 20, 31], "princip": [2, 9, 22], "principalidealdomainel": 5, "principl": 5, "print": [2, 5, 7, 12, 13, 14, 16, 18, 20, 22, 24, 25, 26, 27, 31], "print_opt": 13, "printer": 27, "prior": 20, "priori": [2, 5], "probabl": 27, "problem": [14, 31], "process": [13, 14], "prod": 7, "produc": 4, "product": [7, 13], "prompt": [2, 22], "proof": 0, "proper": [5, 14, 28], "properli": [14, 20, 28, 29], "properti": [5, 14, 27, 31], "proto": [9, 26], "protocol": [0, 4, 5, 9, 26, 31], "prototyp": 14, "prototype_pattern": 14, "provabl": 0, "provid": [4, 5, 6, 7, 9, 12, 13, 20, 28, 31], "public": [5, 26], "punctuat": 20, "pure": 0, "purpos": [4, 5, 9, 13, 14, 20], "push": 5, "put": [5, 9, 14, 29, 31], "py": 9, "py_eq": 25, "python": [0, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30], "pyx": [22, 31], "q": [5, 26], "qadic_flint_cr": 26, "qadiccappedrelativeel": 26, "qp": 20, "qq": [2, 5, 7, 9, 13, 19, 20, 22, 26, 27, 31], "quadraticfield": [5, 7], "quickli": [5, 20, 31], "quit": [7, 12, 26, 31], "quo_rem": 5, "quot": 13, "quotient": [5, 20, 22], "quotient_r": 2, "quotient_ring_el": 22, "r": [2, 5, 7, 10, 19, 20, 22], "r1": 5, "r2": 5, "radic": 7, "radical_valu": 7, "rais": [5, 7, 14, 20, 22, 28], "random": 16, "random_el": 20, "rang": [5, 12, 13, 14, 16, 20, 25, 27, 28, 29, 31], "rank": [2, 9, 22], "rather": [5, 6, 9, 31], "ration": [2, 5, 7, 13, 20, 22, 24, 26, 27], "rational": 31, "raw_test": 5, "rdf": [5, 7, 20], "re": [5, 9, 25, 27], "readabl": 5, "real": [5, 7, 9, 20, 26, 28], "real_interval_field": 20, "real_lazi": 5, "real_mpfr": [5, 20, 26, 31], "realist": [25, 28], "realli": 27, "realliter": 26, "realnumb": [5, 9, 26], "reason": [5, 6, 9, 20, 25, 26, 31], "recal": [4, 25], "receiv": 28, "recent": [2, 5, 7, 9, 12, 14, 15, 16, 18, 20, 22, 24, 26, 27, 28, 29, 31], "recommend": [4, 12, 20, 27, 31], "reconstitut": 26, "reconstruct": [4, 31], "record": 5, "record_except": 5, "recurs": [2, 5], "redefin": 5, "redo": 31, "reduc": [4, 5, 10], "reduce_data": 9, "reduct": [4, 5, 31], "refer": [5, 9, 14, 31], "referenc": 9, "refine_category_hash_check": 3, "regard": 9, "regardless": [9, 13], "regist": [9, 20], "register_act": 20, "register_coercion": 20, "register_convers": 20, "register_embed": 20, "register_factory_unpickl": 9, "register_unpickle_overrid": 9, "relat": [6, 12, 20, 22, 28], "relationship": 20, "relev": [4, 5, 12, 13], "reli": 27, "remaind": 5, "rememb": [5, 28], "remov": [9, 14, 20, 26, 27, 31], "renam": [5, 20, 26], "repl": [20, 26], "replac": [2, 12], "repr": [9, 27, 31], "repres": [2, 5, 19, 20, 28], "represent": [0, 4, 7, 12, 13, 20, 26], "request": [9, 27], "requir": [4, 5, 18, 19, 20, 22, 25, 31], "require_immut": 18, "require_mut": 18, "reselt": 25, "reset_nam": 26, "resiz": 14, "reslist": 25, "resolut": 5, "respect": 31, "respons": [5, 28], "rest": [5, 9, 25, 31], "restor": 14, "restrict": [27, 31], "result": [2, 4, 5, 7, 9, 12, 13, 14, 20, 22, 25, 26, 27, 31], "retri": 5, "retriev": 9, "return": [2, 4, 5, 6, 7, 9, 12, 13, 14, 18, 19, 20, 22, 25, 26, 27, 28, 29, 31], "reus": [4, 28, 31], "revers": [13, 25, 27], "revis": [14, 28], "revop": 25, "reward": 12, "rewrit": 31, "rich": [0, 5], "rich_to_bool": [5, 25], "rich_to_bool_sgn": 25, "richcmp": [5, 25], "richcmp_by_eq_and_lt": 25, "richcmp_item": 25, "richcmp_method": 25, "richcmp_not_equ": 25, "rif": 20, "right": [4, 5, 13, 20, 25], "ring": [0, 2, 5, 7, 8, 9, 10, 13, 19, 20, 22, 26, 27, 31], "ring_of_integ": 5, "ringel": [5, 20], "rlf": 5, "robert": [5, 9], "role": [14, 28], "root": 5, "roughli": [5, 14], "round": 31, "row": 20, "rr": [5, 20], "rt3": 5, "rueth": 9, "rule": [5, 25], "run": [12, 22], "run_cel": 26, "runtim": [9, 26], "rye": 12, "s23": 28, "s3": [20, 28], "s_2": 28, "s_a": [28, 29], "s_el": 20, "s_i": 29, "safe": [4, 5, 22], "safeti": 20, "sage": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31], "sage_getdoc": 18, "sage_object": 26, "sage_vers": 9, "sageinspect": 18, "sagemath": [5, 20], "sageobject": [2, 5, 7, 9, 12, 18, 20, 23, 26, 27, 28, 31], "sai": [4, 9, 25, 31], "said": 9, "sake": 29, "same": [4, 5, 7, 9, 12, 13, 20, 25, 26, 27, 31], "satisfi": [14, 28, 29], "save": [26, 31], "scalar": 13, "scalar_mult": 13, "scheme": 20, "schubertpolynomialr": 13, "scienc": [20, 23], "scope": 2, "scratch": 31, "scrimshaw": 6, "search": [0, 4], "sebastian": 8, "second": [5, 6, 9, 13, 27, 28, 31], "second_opt": 12, "section": [5, 20, 31], "see": [4, 5, 6, 7, 9, 12, 13, 14, 16, 20, 21, 22, 25, 26, 27, 28, 29, 31], "seem": 9, "seen": [9, 31], "select": 28, "self": [2, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 29, 31], "self_el": 20, "self_element_constructor_attribut": 28, "self_on_left": 20, "selfparentpolici": 28, "selfpolici": 28, "selfs2": 28, "semant": [5, 25, 31], "semigroup": 6, "semigroups_cython": 4, "send": [20, 22], "sens": [5, 25], "sensit": 12, "separ": [2, 12, 13, 31], "seq": 27, "sequenc": [0, 14, 18, 25], "sequence_gener": 27, "seri": 19, "serv": 9, "servic": 12, "session": [9, 31], "set": [0, 2, 4, 5, 7, 9, 13, 20, 22, 24, 25, 26, 27, 31], "set_default_prec": 19, "set_factori": [28, 29], "set_factories_exampl": [28, 29], "set_gener": 20, "set_i": 14, "set_immut": [5, 14, 18, 27], "set_x": 14, "setcmp": 25, "setfactori": [28, 29], "setfactorypolici": [28, 29], "setup": [4, 12], "setwis": 25, "sever": [4, 6, 12, 14, 28, 29, 31], "sf": 31, "shadow": 5, "share": [4, 5, 12, 31], "shell": 26, "short": [4, 12, 20, 31], "short_repr": 20, "shortcut": [20, 22], "shorthand": [2, 22], "should": [4, 5, 7, 9, 12, 13, 14, 18, 19, 20, 25, 26, 27, 28, 29, 31], "show": [5, 14, 25, 28, 29, 31], "sibl": 5, "sign": 7, "signific": 9, "significantli": 31, "similar": [5, 31], "similarli": [5, 31], "simon": [9, 18, 31], "simpl": [20, 25, 26, 28, 31], "simpli": [5, 9, 12, 20, 31], "simplifi": [7, 8], "simultan": 31, "sinc": [4, 5, 9, 14, 20, 25, 27, 31], "singl": [2, 5, 20, 26, 28, 31], "single_pair": 29, "singleton": 29, "singletonpair": 29, "singular": 5, "situat": 31, "six": 31, "size": [5, 9, 10, 13, 16, 20, 22, 27], "sl": [14, 20], "sl1": 14, "sl2": 14, "slot": 25, "slow": [8, 27], "slower": [5, 26], "small": [4, 5, 14, 15, 16, 31], "smallest": 14, "so": [2, 4, 5, 7, 9, 12, 13, 14, 18, 20, 25, 26, 27, 28, 31], "sobj": 26, "some": [2, 4, 5, 9, 10, 12, 13, 14, 20, 22, 25, 26, 27, 28, 29, 31], "some_fil": 12, "some_modul": 12, "someclass": 31, "someth": [2, 22, 25, 31], "somethingels": 31, "sometim": [9, 22, 26, 31], "soon": 28, "sophist": 9, "sort": [2, 7, 8, 13, 14, 15, 27], "sortedlist": [14, 15], "sorting_kei": 13, "sorting_revers": 13, "sou": 12, "soup": 12, "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "space": [2, 5, 7, 20], "spam": 9, "spars": [5, 26], "special": [2, 5, 9, 20, 22, 25, 27], "specif": [4, 9, 20, 26, 28, 29], "specifi": [5, 9, 12, 13, 14, 20, 22, 25, 27, 28], "sped": 27, "speed": [5, 14, 31], "spite": [9, 31], "split": 13, "split_index_keyword": 13, "sqrt": [5, 10, 20, 26], "sqrt2": 10, "sqrtx": 5, "squar": [5, 31], "sr": [5, 20, 26], "stabl": 4, "stage": 4, "stand": [2, 9], "standard": [4, 12, 13, 20, 25, 28, 31], "standardize_names_index_set": 13, "standardtableaux": 26, "start": [2, 5, 12, 14, 20, 31], "state": [12, 14, 31], "statement": 22, "static": [9, 31], "staticmethod": 31, "stein": [5, 7, 10, 22], "still": [9, 20, 25, 26, 27, 28, 31], "stop": [14, 26], "store": [4, 5, 9, 15, 20, 31], "stori": 31, "str": [4, 6, 20, 25, 26, 27], "strict": 20, "strictli": [5, 14, 15], "string": [2, 4, 6, 9, 12, 13, 20, 22, 26], "string_quot": 13, "strong": 31, "strongli": 31, "structur": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "stub": 28, "stuff": 12, "style": [9, 10, 20, 25, 31], "sub": [2, 5, 7, 20, 31], "subclass": [5, 6, 12, 14, 19, 25, 28, 31], "subgroup": 31, "subject": 28, "subscript": [2, 13], "subsequ": 9, "subset": [4, 9, 25, 28, 29], "subspac": 7, "substanti": 27, "substitut": [5, 7], "substr": [2, 4], "subsystem": 24, "subtl": 31, "subtleti": 31, "subtract": 5, "subtyp": 5, "succe": [5, 20], "succeed": 27, "suffici": [20, 28, 31], "suffix": 26, "suggest": [7, 9], "suitabl": 2, "sum": [0, 28], "super": [14, 20, 25, 28, 31], "super_categori": 5, "suppli": [5, 12], "support": [4, 5, 7, 9, 12, 20, 25, 26, 27, 28, 31], "suppos": [9, 14, 20, 22, 31], "sure": [26, 31], "switch": 26, "sx2": 28, "sy3": 28, "sym": 25, "symbol": [2, 5, 7, 10, 13, 20, 25, 26], "symmetr": 31, "symmetricfunct": 31, "symmetricgroup": [4, 5, 20, 31], "symmetricgroupact": 20, "synonym": 12, "syntax": [5, 12, 14, 31], "system": [5, 20, 24], "systemat": [28, 31], "t": [2, 4, 5, 9, 12, 13, 14, 20, 24, 26, 27, 28, 31], "tab": 26, "tabl": [26, 31], "tableau": 12, "tableaux": [12, 26], "take": [4, 5, 9, 12, 14, 28, 31], "taken": [4, 9, 27, 29, 31], "task": 31, "tcrystal": 31, "technic": [4, 5, 9, 28, 31], "tediou": 4, "tell": [28, 31], "tempfil": 26, "temporarili": [14, 22, 24], "tensor": 13, "tensor_symbol": 13, "term": 7, "test": [0, 2, 5, 6, 10, 15, 20, 25, 31], "test_add": 5, "test_factori": [9, 30], "testclass": 4, "testsuit": 12, "text": 20, "th": [2, 22], "than": [2, 5, 9, 13, 25, 31], "thank": 12, "thei": [5, 9, 12, 13, 20, 22, 26, 28, 31], "them": [5, 9, 12, 14, 20, 26, 28, 31], "themselv": [4, 5], "theoret": 31, "therefor": [4, 5, 6, 28], "thereof": [4, 20], "thi": [2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31], "thick": 12, "thieri": [6, 31], "thing": [12, 28, 29], "third": [2, 5, 9, 20, 25, 27], "third_opt": 12, "those": [4, 7, 14, 20, 28], "though": [9, 14, 20, 22, 27, 31], "three": [5, 7, 9, 28], "through": [5, 9, 12, 13, 14, 20, 28], "thrown": 5, "thu": [2, 7, 9, 20, 31], "ti": 7, "time": [0, 4, 5, 16, 25, 31], "timeit": 16, "tip": 12, "todo": 4, "togeth": [5, 12, 28, 29, 31], "too": 8, "tool": 4, "top": 5, "top_constraint": 28, "topmost": 28, "topmostparentpolici": 28, "tornaria": 5, "total": [25, 31], "touch": 5, "tp_richcompar": 25, "trace": 31, "traceback": [2, 5, 7, 9, 12, 14, 15, 16, 18, 20, 22, 24, 26, 27, 28, 29, 31], "transform": 31, "transit": [28, 31], "transpar": 9, "travi": 6, "treat": [12, 20], "tri": [9, 14, 31], "trick": 31, "trigger": [5, 31], "tripl": 13, "trivial": [6, 20, 26, 28], "tropic": 6, "true": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 18, 20, 22, 24, 25, 26, 27, 28, 29, 31], "truediv": 5, "try": [5, 9, 12, 28, 31], "tupl": [2, 4, 9, 13, 20, 22, 25, 26, 27, 28, 31], "tuplepolici": 28, "turn": [7, 31], "tutori": 5, "twice": 31, "two": [5, 7, 9, 13, 14, 25, 28], "twofold": 28, "twosid": 20, "type": [4, 5, 7, 9, 12, 20, 26, 27, 28, 31], "typeerror": [2, 5, 7, 9, 20, 22, 26, 27, 31], "typeset": 26, "typic": [2, 4, 5, 6, 8, 9, 12, 20, 25, 28, 29, 31], "u": [2, 4, 5, 7, 9, 26, 28, 29, 31], "ultra": 20, "unabl": [20, 27], "unambigu": 12, "undefin": 25, "under": [5, 9, 20, 22, 29, 31], "underli": [7, 20], "underscor": [5, 20, 31], "undon": 5, "unhash": [9, 26, 31], "uni": 18, "unicode_symbol": 13, "uniform": 5, "uniformli": 5, "union": [28, 29], "uniqu": [0, 2, 4, 5, 9, 12, 20, 22], "unique_parent_warn": 3, "unique_represent": [9, 31], "uniquefactori": [9, 30], "uniquefactorytest": [9, 30], "uniquerepresent": [4, 6, 10, 12, 15, 28, 29, 31], "unit": [5, 7, 8, 31], "univari": [2, 5, 7, 20, 22, 26], "univers": [7, 27], "unknown": 2, "unless": [4, 9, 20, 31], "unlik": [5, 26, 27], "unnecessari": 8, "unpickl": [4, 9, 20, 31], "unprocess": 31, "unreduc": 31, "unsaf": 8, "unspecifi": 4, "unsupport": 5, "up": [7, 8, 9, 12, 26, 27, 28, 31], "updat": 20, "upgrad": 31, "upon": [4, 5, 8, 20, 27, 31], "upstream": [4, 5, 6, 9, 10, 20, 31], "us": [2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 16, 18, 20, 22, 24, 25, 26, 27, 28, 29], "usabl": 26, "usag": [9, 14, 15, 28, 31], "use_sage_typ": 27, "user": [4, 8, 12, 13, 25, 26, 29, 31], "usual": [2, 5, 9, 12, 20, 25, 28, 31], "v": [2, 5, 9, 12, 14, 18, 20, 25, 27], "vagu": 28, "val": [12, 18], "valid": [2, 12, 20, 31], "valu": [2, 4, 5, 6, 7, 13, 14, 20, 24, 25, 27, 28, 29, 31], "valueerror": [2, 5, 7, 12, 14, 15, 16, 18, 20, 22, 27, 28, 29], "var": [2, 5, 26], "variabl": [2, 5, 9, 13, 22], "variable_nam": [2, 22], "variant": 31, "varieti": 13, "variou": [15, 16, 25, 28], "vector": [5, 20, 25, 27], "verbatim": 28, "verbos": 2, "veri": [2, 5, 9, 14, 20, 22, 27, 31], "verifi": [20, 22, 25, 28], "version": [5, 6, 7, 9, 10, 12, 30, 31], "versu": 5, "via": [5, 8, 9, 12, 20], "view": [5, 20], "visibl": 26, "void": 28, "volker": 10, "voluntarili": 6, "w": [2, 5, 22, 27, 31], "wa": [6, 9, 10, 20, 22, 24, 25, 28, 29, 31], "wai": [4, 5, 9, 12, 14, 20, 25, 28, 29], "waist": 12, "want": [4, 5, 9, 14, 20, 25, 28, 31], "warn": [5, 20, 31], "wast": 26, "wb": 25, "we": [4, 5, 6, 7, 9, 13, 14, 20, 22, 25, 27, 28, 29, 31], "weak": [9, 20, 31], "weakcachedfunct": 31, "weakli": 31, "weakref": 9, "weight": 7, "well": [5, 8, 31], "went": 5, "were": [7, 26, 28, 31], "what": [5, 12, 20, 27], "when": [5, 7, 9, 12, 13, 20, 22, 25, 27, 28, 29, 31], "whenev": [4, 5, 12, 31], "where": [2, 5, 7, 12, 13, 25, 26, 28, 29, 31], "wherev": 27, "whether": [0, 5, 7, 12, 14, 20, 22, 27, 31], "which": [2, 4, 5, 7, 8, 9, 12, 13, 14, 19, 20, 22, 25, 26, 27, 28, 29, 31], "while": [5, 12, 28, 31], "whistl": 12, "white": 12, "whole": 12, "whose": [2, 5, 9, 13, 18, 22, 25, 28, 31], "why": [4, 31], "width": 25, "william": [5, 7, 10, 22], "with_bel": 12, "with_whistl": 12, "withequalitybyid": [9, 31], "within": [4, 5, 31], "without": [5, 9, 12, 25, 27, 31], "withpicklingbyinitarg": 31, "withproof": 24, "won": [4, 9, 31], "word": [4, 12, 31], "work": [2, 4, 5, 9, 14, 20, 25, 31], "would": [2, 4, 5, 9, 13, 20, 24, 26, 28, 31], "wrap": [6, 20, 28], "wrapped_class": 6, "wrapper": [0, 5], "write": [4, 5, 7, 9, 22, 25, 28, 29, 31], "writer": 28, "written": [5, 20, 28, 29], "wrong": 28, "wrongusag": 31, "wrote": [7, 10, 22], "x": [2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 19, 20, 21, 22, 25, 26, 27, 28, 29, 31], "x0": [2, 22], "x00": 2, "x01": 2, "x1": [2, 5, 22], "x10": 2, "x11": 2, "x2": [2, 5, 22], "x3": 2, "x4": 2, "x5": 2, "x6": 2, "x7": 2, "x8": 2, "x80": 26, "x81": 26, "x9": 2, "x_": [2, 13], "xi": 13, "xx": 20, "xy": [5, 28], "xypair": [28, 29], "xypairsfactori": 29, "xyz": 2, "y": [2, 5, 6, 7, 13, 14, 20, 22, 25, 28, 29, 31], "ybar": 2, "yet": [9, 25, 31], "yield": [9, 31], "you": [5, 7, 14, 20, 22, 26, 27, 28, 31], "your": 5, "z": [2, 5, 7, 13, 20, 22, 25, 31], "z2": 5, "z_z": 2, "z_z0": 2, "z_z1": 2, "zbar": 2, "zero": [4, 5, 20, 24], "zerodivisionerror": 24, "zi": 5, "zmod": 5, "zp": 20, "zz": [2, 5, 7, 9, 10, 13, 19, 20, 22, 25, 27], "\u00b5": 16}, "titles": ["Parents and Elements", "Whether or not computations are provably correct by default", "Base class for objects of a category", "Debug options for the <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sage.structure</span></code> modules", "Dynamic classes", "Elements", "Element Wrapper", "Factorizations", "IntegerFactorization objects", "Factory for cached representations", "Formal sums", "Pure python code for abstract base class for objects with generators", "Global options", "Indexed Generators", "Elements, Array and Lists With Clone Protocol", "Elements, Array and Lists With Clone Protocol, demonstration classes", "Performance Test for Clone Protocol", "Cython Functions for Timing Clone Protocol", "Mutability Cython Implementation", "Precision management for non-exact objects", "Base class for parent objects", "Base class for old-style parent objects with a base ring", "Base class for old-style parent objects with generators", "Base class for old-style parent objects", "Global proof preferences", "Cython-like rich comparisons in Python", "Abstract base class for Sage objects", "Finite Homogeneous Sequences", "Set factories", "An example of set factory", "Test of the <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">factory</span></code> module", "Unique Representation"], "titleterms": {"A": 5, "The": 5, "With": [14, 15], "abstract": [5, 11, 26], "access": 12, "algorithm": 0, "an": 29, "ar": 1, "argument": 31, "arithmet": 5, "arrai": [14, 15], "base": [2, 11, 20, 21, 22, 23, 26], "cach": [9, 31], "cachedrepresent": 31, "categori": 2, "class": [2, 4, 5, 11, 12, 15, 20, 21, 22, 23, 26, 31], "clone": [14, 15, 16, 17], "code": 11, "compar": 31, "comparison": 25, "comput": 1, "construct": 12, "correct": 1, "cython": [17, 18, 25], "data": 0, "debug": 3, "default": 1, "defin": 5, "demonstr": 15, "deprec": 0, "detail": 5, "dispatch": 12, "doc": 12, "document": 12, "dynam": 4, "element": [0, 5, 6, 14, 15], "exact": 19, "exampl": [5, 29], "extens": 31, "factor": 7, "factori": [9, 28, 29, 30], "finit": 27, "formal": 10, "function": [12, 17], "gener": [11, 13, 22], "global": [12, 24], "heurist": 0, "hierarchi": 5, "homogen": 27, "how": 5, "i": 31, "impati": 5, "implement": [5, 18, 31], "index": 13, "indic": 0, "inherit": 31, "integerfactor": 8, "intern": 0, "like": 25, "list": [14, 15], "manag": 19, "mathemat": 0, "modul": [3, 30], "more": 5, "mutabl": 18, "new": 5, "non": 19, "normalis": 31, "object": [0, 2, 8, 11, 19, 20, 21, 22, 23, 26], "old": [0, 21, 22, 23], "option": [3, 12], "parent": [0, 20, 21, 22, 23], "perform": 16, "pickl": 12, "precis": 19, "prefer": 24, "probabilist": 0, "proof": 24, "protocol": [14, 15, 16, 17], "provabl": 1, "pure": 11, "python": [11, 25, 31], "quick": 5, "represent": [9, 31], "rich": 25, "ring": 21, "sage": [0, 3, 26], "sequenc": 27, "set": [12, 28, 29], "setter": 12, "simplic": 31, "structur": [0, 3], "style": [0, 21, 22, 23], "sum": 10, "summari": 5, "tabl": 0, "test": [12, 16, 30], "time": 17, "todo": [2, 20, 28, 31], "transpar": 31, "two": 31, "uniqu": 31, "uniquefactori": 31, "us": [0, 31], "util": 0, "valu": 12, "versu": 31, "wai": 31, "what": 31, "whether": 1, "wrapper": 6}})