Search.setIndex({"alltitles": {"A Sample Session using SymPy": [[11, null]], "Access to Maxima methods": [[28, null]], "Arithmetic": [[31, "arithmetic"]], "Assumptions": [[18, null], [31, "assumptions"]], "Benchmarks": [[19, null]], "Calculus Tests and Examples": [[12, null]], "Calculus functions": [[5, null]], "Callable Symbolic Expressions": [[20, null]], "Classes and Methods": [[33, "classes-and-methods"]], "Classes for symbolic functions": [[24, null]], "Complex Interpolation": [[8, null]], "Complexity Measures": [[21, null]], "Constructor for symbolic expressions": [[3, null]], "Conversion of symbolic expressions to other types": [[23, null]], "Discrete Fourier Transforms": [[13, null]], "Discrete Wavelet Transform": [[14, null]], "Factory for symbolic functions": [[25, null]], "Fast Fourier Transforms Using GSL": [[15, null]], "Functional notation support for common calculus methods": [[4, null]], "Further examples from Wester\u2019s paper": [[17, null]], "Indices and Tables": [[0, "indices-and-tables"]], "Internal functionality supporting calculus": [[0, "internal-functionality-supporting-calculus"]], "Miscellaneous": [[31, "miscellaneous"]], "More Examples": [[31, "more-examples"]], "Numerical Integration": [[6, null]], "Operators": [[29, null]], "Randomized tests of GiNaC / PyNaC": [[30, null]], "Real Interpolation using GSL": [[7, null]], "Riemann Mapping": [[10, null]], "Solving": [[31, "solving"]], "Solving ODE numerically by GSL": [[9, null]], "Solving ordinary differential equations": [[2, null]], "Subrings of the Symbolic Ring": [[33, null]], "Substitution": [[31, "substitution"]], "Symbolic Calculus": [[0, null]], "Symbolic Computation": [[1, null]], "Symbolic Equations and Inequalities": [[31, null]], "Symbolic Expressions": [[22, null]], "Symbolic Integration": [[27, null]], "Symbolic variables": [[16, null]], "TESTS::": [[26, null]], "The operator, left hand side, and right hand side": [[31, "the-operator-left-hand-side-and-right-hand-side"]], "The symbolic ring": [[32, null]], "Todo": [[13, "id1"], [13, "id2"]], "Units of measurement": [[34, null]], "Using calculus": [[0, "using-calculus"]]}, "docnames": ["index", "sage/calculus/calculus", "sage/calculus/desolvers", "sage/calculus/expr", "sage/calculus/functional", "sage/calculus/functions", "sage/calculus/integration", "sage/calculus/interpolation", "sage/calculus/interpolators", "sage/calculus/ode", "sage/calculus/riemann", "sage/calculus/test_sympy", "sage/calculus/tests", "sage/calculus/transforms/dft", "sage/calculus/transforms/dwt", "sage/calculus/transforms/fft", "sage/calculus/var", "sage/calculus/wester", "sage/symbolic/assumptions", "sage/symbolic/benchmark", "sage/symbolic/callable", "sage/symbolic/complexity_measures", "sage/symbolic/expression", "sage/symbolic/expression_conversions", "sage/symbolic/function", "sage/symbolic/function_factory", "sage/symbolic/integration/external", "sage/symbolic/integration/integral", "sage/symbolic/maxima_wrapper", "sage/symbolic/operators", "sage/symbolic/random_tests", "sage/symbolic/relation", "sage/symbolic/ring", "sage/symbolic/subring", "sage/symbolic/units"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2}, "filenames": ["index.rst", "sage/calculus/calculus.rst", "sage/calculus/desolvers.rst", "sage/calculus/expr.rst", "sage/calculus/functional.rst", "sage/calculus/functions.rst", "sage/calculus/integration.rst", "sage/calculus/interpolation.rst", "sage/calculus/interpolators.rst", "sage/calculus/ode.rst", "sage/calculus/riemann.rst", "sage/calculus/test_sympy.rst", "sage/calculus/tests.rst", "sage/calculus/transforms/dft.rst", "sage/calculus/transforms/dwt.rst", "sage/calculus/transforms/fft.rst", "sage/calculus/var.rst", "sage/calculus/wester.rst", "sage/symbolic/assumptions.rst", "sage/symbolic/benchmark.rst", "sage/symbolic/callable.rst", "sage/symbolic/complexity_measures.rst", "sage/symbolic/expression.rst", "sage/symbolic/expression_conversions.rst", "sage/symbolic/function.rst", "sage/symbolic/function_factory.rst", "sage/symbolic/integration/external.rst", "sage/symbolic/integration/integral.rst", "sage/symbolic/maxima_wrapper.rst", "sage/symbolic/operators.rst", "sage/symbolic/random_tests.rst", "sage/symbolic/relation.rst", "sage/symbolic/ring.rst", "sage/symbolic/subring.rst", "sage/symbolic/units.rst"], "indexentries": {"abs() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.abs", false]], "add() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.add", false]], "add_to_both_sides() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.add_to_both_sides", false]], "add_vararg() (in module sage.symbolic.operators)": [[29, "sage.symbolic.operators.add_vararg", false]], "analytic_boundary() (in module sage.calculus.riemann)": [[10, "sage.calculus.riemann.analytic_boundary", false]], "analytic_interior() (in module sage.calculus.riemann)": [[10, "sage.calculus.riemann.analytic_interior", false]], "append() (sage.calculus.interpolation.spline method)": [[7, "sage.calculus.interpolation.Spline.append", false]], "apply_to() (sage.symbolic.expression.substitutionmap method)": [[22, "sage.symbolic.expression.SubstitutionMap.apply_to", false]], "arccos() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.arccos", false]], "arccosh() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.arccosh", false]], "arcsin() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.arcsin", false]], "arcsinh() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.arcsinh", false]], "arctan() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.arctan", false]], "arctan2() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.arctan2", false]], "arctanh() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.arctanh", false]], "args() (sage.symbolic.callable.callablesymbolicexpressionring_class method)": [[20, "sage.symbolic.callable.CallableSymbolicExpressionRing_class.args", false]], "args() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.args", false]], "arguments() (sage.symbolic.callable.callablesymbolicexpressionfunctor method)": [[20, "sage.symbolic.callable.CallableSymbolicExpressionFunctor.arguments", false]], "arguments() (sage.symbolic.callable.callablesymbolicexpressionring_class method)": [[20, "sage.symbolic.callable.CallableSymbolicExpressionRing_class.arguments", false]], "arguments() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.arguments", false]], "arithmetic() (sage.symbolic.expression_conversions.converter method)": [[23, "sage.symbolic.expression_conversions.Converter.arithmetic", false]], "arithmetic() (sage.symbolic.expression_conversions.expressiontreewalker method)": [[23, "sage.symbolic.expression_conversions.ExpressionTreeWalker.arithmetic", false]], "arithmetic() (sage.symbolic.expression_conversions.fastcallableconverter method)": [[23, "sage.symbolic.expression_conversions.FastCallableConverter.arithmetic", false]], "arithmetic() (sage.symbolic.expression_conversions.interfaceinit method)": [[23, "sage.symbolic.expression_conversions.InterfaceInit.arithmetic", false]], "arithmetic() (sage.symbolic.expression_conversions.polynomialconverter method)": [[23, "sage.symbolic.expression_conversions.PolynomialConverter.arithmetic", false]], "arithmetic() (sage.symbolic.expression_conversions.ringconverter method)": [[23, "sage.symbolic.expression_conversions.RingConverter.arithmetic", false]], "assert_strict_weak_order() (in module sage.symbolic.random_tests)": [[30, "sage.symbolic.random_tests.assert_strict_weak_order", false]], "assume() (in module sage.symbolic.assumptions)": [[18, "sage.symbolic.assumptions.assume", false]], "assume() (sage.symbolic.assumptions.genericdeclaration method)": [[18, "sage.symbolic.assumptions.GenericDeclaration.assume", false]], "assume() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.assume", false]], "assuming (class in sage.symbolic.assumptions)": [[18, "sage.symbolic.assumptions.assuming", false]], "assumptions() (in module sage.symbolic.assumptions)": [[18, "sage.symbolic.assumptions.assumptions", false]], "at() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.at", false]], "backward_transform() (sage.calculus.transforms.dwt.discretewavelettransform method)": [[14, "sage.calculus.transforms.dwt.DiscreteWaveletTransform.backward_transform", false]], "backward_transform() (sage.calculus.transforms.fft.fastfouriertransform_complex method)": [[15, "sage.calculus.transforms.fft.FastFourierTransform_complex.backward_transform", false]], "base_ring() (sage.calculus.transforms.dft.indexedsequence method)": [[13, "sage.calculus.transforms.dft.IndexedSequence.base_ring", false]], "base_units() (in module sage.symbolic.units)": [[34, "sage.symbolic.units.base_units", false]], "binomial() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.binomial", false]], "builtinfunction (class in sage.symbolic.function)": [[24, "sage.symbolic.function.BuiltinFunction", false]], "call_registered_function() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.call_registered_function", false]], "callablesymbolicexpressionfunctor (class in sage.symbolic.callable)": [[20, "sage.symbolic.callable.CallableSymbolicExpressionFunctor", false]], "callablesymbolicexpressionring_class (class in sage.symbolic.callable)": [[20, "sage.symbolic.callable.CallableSymbolicExpressionRing_class", false]], "callablesymbolicexpressionringfactory (class in sage.symbolic.callable)": [[20, "sage.symbolic.callable.CallableSymbolicExpressionRingFactory", false]], "canonicalize_radical() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.canonicalize_radical", false]], "cauchy_kernel() (in module sage.calculus.riemann)": [[10, "sage.calculus.riemann.cauchy_kernel", false]], "ccspline (class in sage.calculus.interpolators)": [[8, "sage.calculus.interpolators.CCSpline", false]], "change_function() (sage.symbolic.operators.fderivativeoperator method)": [[29, "sage.symbolic.operators.FDerivativeOperator.change_function", false]], "characteristic() (sage.symbolic.ring.symbolicring method)": [[32, "sage.symbolic.ring.SymbolicRing.characteristic", false]], "choose_from_prob_list() (in module sage.symbolic.random_tests)": [[30, "sage.symbolic.random_tests.choose_from_prob_list", false]], "circdict (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.CircDict", false]], "circs (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.Circs", false]], "cleanup_var() (sage.symbolic.ring.symbolicring method)": [[32, "sage.symbolic.ring.SymbolicRing.cleanup_var", false]], "clear_vars() (in module sage.calculus.var)": [[16, "sage.calculus.var.clear_vars", false]], "coefficient() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.coefficient", false]], "coefficients() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.coefficients", false]], "coefficients() (sage.symbolic.expression.symbolicseries method)": [[22, "sage.symbolic.expression.SymbolicSeries.coefficients", false]], "coercion_reversed (sage.symbolic.subring.genericsymbolicsubringfunctor attribute)": [[33, "sage.symbolic.subring.GenericSymbolicSubringFunctor.coercion_reversed", false]], "collect() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.collect", false]], "collect_common_factors() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.collect_common_factors", false]], "combine() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.combine", false]], "compiled_integrand (class in sage.calculus.integration)": [[6, "sage.calculus.integration.compiled_integrand", false]], "complex_cubic_spline() (in module sage.calculus.interpolators)": [[8, "sage.calculus.interpolators.complex_cubic_spline", false]], "complex_to_rgb() (in module sage.calculus.riemann)": [[10, "sage.calculus.riemann.complex_to_rgb", false]], "complex_to_spiderweb() (in module sage.calculus.riemann)": [[10, "sage.calculus.riemann.complex_to_spiderweb", false]], "composition() (sage.symbolic.expression_conversions.converter method)": [[23, "sage.symbolic.expression_conversions.Converter.composition", false]], "composition() (sage.symbolic.expression_conversions.demoivre method)": [[23, "sage.symbolic.expression_conversions.DeMoivre.composition", false]], "composition() (sage.symbolic.expression_conversions.exponentialize method)": [[23, "sage.symbolic.expression_conversions.Exponentialize.composition", false]], "composition() (sage.symbolic.expression_conversions.expressiontreewalker method)": [[23, "sage.symbolic.expression_conversions.ExpressionTreeWalker.composition", false]], "composition() (sage.symbolic.expression_conversions.fastcallableconverter method)": [[23, "sage.symbolic.expression_conversions.FastCallableConverter.composition", false]], "composition() (sage.symbolic.expression_conversions.halfangle method)": [[23, "sage.symbolic.expression_conversions.HalfAngle.composition", false]], "composition() (sage.symbolic.expression_conversions.holdremover method)": [[23, "sage.symbolic.expression_conversions.HoldRemover.composition", false]], "composition() (sage.symbolic.expression_conversions.interfaceinit method)": [[23, "sage.symbolic.expression_conversions.InterfaceInit.composition", false]], "composition() (sage.symbolic.expression_conversions.polynomialconverter method)": [[23, "sage.symbolic.expression_conversions.PolynomialConverter.composition", false]], "composition() (sage.symbolic.expression_conversions.ringconverter method)": [[23, "sage.symbolic.expression_conversions.RingConverter.composition", false]], "composition() (sage.symbolic.expression_conversions.substitutefunction method)": [[23, "sage.symbolic.expression_conversions.SubstituteFunction.composition", false]], "compute_on_grid() (sage.calculus.riemann.riemann_map method)": [[10, "sage.calculus.riemann.Riemann_Map.compute_on_grid", false]], "conjugate() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.conjugate", false]], "construction() (sage.symbolic.callable.callablesymbolicexpressionring_class method)": [[20, "sage.symbolic.callable.CallableSymbolicExpressionRing_class.construction", false]], "construction() (sage.symbolic.subring.symbolicsubringacceptingvars method)": [[33, "sage.symbolic.subring.SymbolicSubringAcceptingVars.construction", false]], "construction() (sage.symbolic.subring.symbolicsubringrejectingvars method)": [[33, "sage.symbolic.subring.SymbolicSubringRejectingVars.construction", false]], "content() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.content", false]], "contradicts() (sage.symbolic.assumptions.genericdeclaration method)": [[18, "sage.symbolic.assumptions.GenericDeclaration.contradicts", false]], "contradicts() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.contradicts", false]], "convert() (in module sage.symbolic.units)": [[34, "sage.symbolic.units.convert", false]], "convert() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.convert", false]], "convert_temperature() (in module sage.symbolic.units)": [[34, "sage.symbolic.units.convert_temperature", false]], "converter (class in sage.symbolic.expression_conversions)": [[23, "sage.symbolic.expression_conversions.Converter", false]], "convolution() (sage.calculus.transforms.dft.indexedsequence method)": [[13, "sage.calculus.transforms.dft.IndexedSequence.convolution", false]], "convolution_periodic() (sage.calculus.transforms.dft.indexedsequence method)": [[13, "sage.calculus.transforms.dft.IndexedSequence.convolution_periodic", false]], "cos (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.cos", false]], "cos (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.cos", false]], "cos() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.cos", false]], "cosh (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.cosh", false]], "cosh (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.cosh", false]], "cosh() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.cosh", false]], "cot (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.cot", false]], "cot (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.cot", false]], "coth (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.coth", false]], "coth (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.coth", false]], "create_key() (sage.symbolic.callable.callablesymbolicexpressionringfactory method)": [[20, "sage.symbolic.callable.CallableSymbolicExpressionRingFactory.create_key", false]], "create_key_and_extra_args() (sage.symbolic.subring.symbolicsubringfactory method)": [[33, "sage.symbolic.subring.SymbolicSubringFactory.create_key_and_extra_args", false]], "create_object() (sage.symbolic.callable.callablesymbolicexpressionringfactory method)": [[20, "sage.symbolic.callable.CallableSymbolicExpressionRingFactory.create_object", false]], "create_object() (sage.symbolic.subring.symbolicsubringfactory method)": [[33, "sage.symbolic.subring.SymbolicSubringFactory.create_object", false]], "csc (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.csc", false]], "csc (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.csc", false]], "csch (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.csch", false]], "csch (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.csch", false]], "csgn() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.csgn", false]], "dct() (sage.calculus.transforms.dft.indexedsequence method)": [[13, "sage.calculus.transforms.dft.IndexedSequence.dct", false]], "decl_assume() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.decl_assume", false]], "decl_forget() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.decl_forget", false]], "default_variable() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.default_variable", false]], "default_variable() (sage.symbolic.expression.symbolicseries method)": [[22, "sage.symbolic.expression.SymbolicSeries.default_variable", false]], "default_variable() (sage.symbolic.function.function method)": [[24, "sage.symbolic.function.Function.default_variable", false]], "definite_integral() (sage.calculus.interpolation.spline method)": [[7, "sage.calculus.interpolation.Spline.definite_integral", false]], "definiteintegral (class in sage.symbolic.integration.integral)": [[27, "sage.symbolic.integration.integral.DefiniteIntegral", false]], "degree() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.degree", false]], "demoivre (class in sage.symbolic.expression_conversions)": [[23, "sage.symbolic.expression_conversions.DeMoivre", false]], "demoivre() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.demoivre", false]], "denominator() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.denominator", false]], "derivative() (in module sage.calculus.functional)": [[4, "sage.calculus.functional.derivative", false]], "derivative() (sage.calculus.interpolation.spline method)": [[7, "sage.calculus.interpolation.Spline.derivative", false]], "derivative() (sage.calculus.interpolators.ccspline method)": [[8, "sage.calculus.interpolators.CCSpline.derivative", false]], "derivative() (sage.calculus.interpolators.pspline method)": [[8, "sage.calculus.interpolators.PSpline.derivative", false]], "derivative() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.derivative", false]], "derivative() (sage.symbolic.expression_conversions.converter method)": [[23, "sage.symbolic.expression_conversions.Converter.derivative", false]], "derivative() (sage.symbolic.expression_conversions.expressiontreewalker method)": [[23, "sage.symbolic.expression_conversions.ExpressionTreeWalker.derivative", false]], "derivative() (sage.symbolic.expression_conversions.interfaceinit method)": [[23, "sage.symbolic.expression_conversions.InterfaceInit.derivative", false]], "derivative() (sage.symbolic.expression_conversions.substitutefunction method)": [[23, "sage.symbolic.expression_conversions.SubstituteFunction.derivative", false]], "derivativeoperator (class in sage.symbolic.operators)": [[29, "sage.symbolic.operators.DerivativeOperator", false]], "derivativeoperator.derivativeoperatorwithparameters (class in sage.symbolic.operators)": [[29, "sage.symbolic.operators.DerivativeOperator.DerivativeOperatorWithParameters", false]], "desolve() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.desolve", false]], "desolve_laplace() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.desolve_laplace", false]], "desolve_mintides() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.desolve_mintides", false]], "desolve_odeint() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.desolve_odeint", false]], "desolve_rk4() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.desolve_rk4", false]], "desolve_rk4_determine_bounds() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.desolve_rk4_determine_bounds", false]], "desolve_system() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.desolve_system", false]], "desolve_system_rk4() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.desolve_system_rk4", false]], "desolve_tides_mpfr() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.desolve_tides_mpfr", false]], "dft() (sage.calculus.transforms.dft.indexedsequence method)": [[13, "sage.calculus.transforms.dft.IndexedSequence.dft", false]], "dict() (sage.calculus.transforms.dft.indexedsequence method)": [[13, "sage.calculus.transforms.dft.IndexedSequence.dict", false]], "diff() (in module sage.calculus.functional)": [[4, "sage.calculus.functional.diff", false]], "diff() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.diff", false]], "differentiate() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.differentiate", false]], "discretewavelettransform (class in sage.calculus.transforms.dwt)": [[14, "sage.calculus.transforms.dwt.DiscreteWaveletTransform", false]], "distribute() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.distribute", false]], "divide_both_sides() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.divide_both_sides", false]], "doublefactorial() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.doublefactorial", false]], "dst() (sage.calculus.transforms.dft.indexedsequence method)": [[13, "sage.calculus.transforms.dft.IndexedSequence.dst", false]], "dummy_diff() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.dummy_diff", false]], "dummy_integrate() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.dummy_integrate", false]], "dummy_inverse_laplace() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.dummy_inverse_laplace", false]], "dummy_laplace() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.dummy_laplace", false]], "dummy_pochhammer() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.dummy_pochhammer", false]], "dwt() (in module sage.calculus.transforms.dwt)": [[14, "sage.calculus.transforms.dwt.DWT", false]], "dwt() (sage.calculus.transforms.dft.indexedsequence method)": [[13, "sage.calculus.transforms.dft.IndexedSequence.dwt", false]], "e (class in sage.symbolic.expression)": [[22, "sage.symbolic.expression.E", false]], "e (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.e", false]], "eulers_method() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.eulers_method", false]], "eulers_method_2x2() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.eulers_method_2x2", false]], "eulers_method_2x2_plot() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.eulers_method_2x2_plot", false]], "evalunitdict() (in module sage.symbolic.units)": [[34, "sage.symbolic.units.evalunitdict", false]], "exp() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.exp", false]], "expand() (in module sage.calculus.functional)": [[4, "sage.calculus.functional.expand", false]], "expand() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.expand", false]], "expand_log() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.expand_log", false]], "expand_rational() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.expand_rational", false]], "expand_sum() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.expand_sum", false]], "expand_trig() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.expand_trig", false]], "exponentialize (class in sage.symbolic.expression_conversions)": [[23, "sage.symbolic.expression_conversions.Exponentialize", false]], "exponentialize() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.exponentialize", false]], "expression (class in sage.symbolic.expression)": [[22, "sage.symbolic.expression.Expression", false]], "expression() (sage.symbolic.expression.pynacconstant method)": [[22, "sage.symbolic.expression.PynacConstant.expression", false]], "expressioniterator (class in sage.symbolic.expression)": [[22, "sage.symbolic.expression.ExpressionIterator", false]], "expressiontreewalker (class in sage.symbolic.expression_conversions)": [[23, "sage.symbolic.expression_conversions.ExpressionTreeWalker", false]], "factor() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.factor", false]], "factor_list() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.factor_list", false]], "factorial() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.factorial", false]], "factorial_simplify() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.factorial_simplify", false]], "fakeexpression (class in sage.symbolic.expression_conversions)": [[23, "sage.symbolic.expression_conversions.FakeExpression", false]], "fast_callable() (in module sage.symbolic.expression_conversions)": [[23, "sage.symbolic.expression_conversions.fast_callable", false]], "fastcallableconverter (class in sage.symbolic.expression_conversions)": [[23, "sage.symbolic.expression_conversions.FastCallableConverter", false]], "fastfouriertransform() (in module sage.calculus.transforms.fft)": [[15, "sage.calculus.transforms.fft.FastFourierTransform", false]], "fastfouriertransform_base (class in sage.calculus.transforms.fft)": [[15, "sage.calculus.transforms.fft.FastFourierTransform_base", false]], "fastfouriertransform_complex (class in sage.calculus.transforms.fft)": [[15, "sage.calculus.transforms.fft.FastFourierTransform_complex", false]], "fderivativeoperator (class in sage.symbolic.operators)": [[29, "sage.symbolic.operators.FDerivativeOperator", false]], "fft() (in module sage.calculus.transforms.fft)": [[15, "sage.calculus.transforms.fft.FFT", false]], "fft() (sage.calculus.transforms.dft.indexedsequence method)": [[13, "sage.calculus.transforms.dft.IndexedSequence.fft", false]], "find() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.find", false]], "find_local_maximum() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.find_local_maximum", false]], "find_local_minimum() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.find_local_minimum", false]], "find_registered_function() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.find_registered_function", false]], "find_root() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.find_root", false]], "forget() (in module sage.symbolic.assumptions)": [[18, "sage.symbolic.assumptions.forget", false]], "forget() (sage.symbolic.assumptions.genericdeclaration method)": [[18, "sage.symbolic.assumptions.GenericDeclaration.forget", false]], "forget() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.forget", false]], "forward_transform() (sage.calculus.transforms.dwt.discretewavelettransform method)": [[14, "sage.calculus.transforms.dwt.DiscreteWaveletTransform.forward_transform", false]], "forward_transform() (sage.calculus.transforms.fft.fastfouriertransform_complex method)": [[15, "sage.calculus.transforms.fft.FastFourierTransform_complex.forward_transform", false]], "fouriertransform_complex (class in sage.calculus.transforms.fft)": [[15, "sage.calculus.transforms.fft.FourierTransform_complex", false]], "fouriertransform_real (class in sage.calculus.transforms.fft)": [[15, "sage.calculus.transforms.fft.FourierTransform_real", false]], "fraction() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.fraction", false]], "free_variables() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.free_variables", false]], "fricas_desolve() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.fricas_desolve", false]], "fricas_desolve_system() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.fricas_desolve_system", false]], "fricas_integrator() (in module sage.symbolic.integration.external)": [[26, "sage.symbolic.integration.external.fricas_integrator", false]], "full_simplify() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.full_simplify", false]], "function (class in sage.symbolic.function)": [[24, "sage.symbolic.function.Function", false]], "function() (in module sage.calculus.var)": [[16, "sage.calculus.var.function", false]], "function() (in module sage.symbolic.function_factory)": [[25, "sage.symbolic.function_factory.function", false]], "function() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.function", false]], "function() (sage.symbolic.expression_conversions.exponentialize method)": [[23, "sage.symbolic.expression_conversions.Exponentialize.function", false]], "function() (sage.symbolic.expression_conversions.halfangle method)": [[23, "sage.symbolic.expression_conversions.HalfAngle.function", false]], "function() (sage.symbolic.operators.fderivativeoperator method)": [[29, "sage.symbolic.operators.FDerivativeOperator.function", false]], "function_factory() (in module sage.symbolic.function_factory)": [[25, "sage.symbolic.function_factory.function_factory", false]], "gamma() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.gamma", false]], "gamma_normalize() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.gamma_normalize", false]], "gcd() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.gcd", false]], "genericdeclaration (class in sage.symbolic.assumptions)": [[18, "sage.symbolic.assumptions.GenericDeclaration", false]], "genericsymbolicsubring (class in sage.symbolic.subring)": [[33, "sage.symbolic.subring.GenericSymbolicSubring", false]], "genericsymbolicsubringfunctor (class in sage.symbolic.subring)": [[33, "sage.symbolic.subring.GenericSymbolicSubringFunctor", false]], "get_derivatives() (in module sage.calculus.riemann)": [[10, "sage.calculus.riemann.get_derivatives", false]], "get_fake_div() (sage.symbolic.expression_conversions.converter method)": [[23, "sage.symbolic.expression_conversions.Converter.get_fake_div", false]], "get_fn_serial() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.get_fn_serial", false]], "get_ginac_serial() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.get_ginac_serial", false]], "get_sfunction_from_hash() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.get_sfunction_from_hash", false]], "get_sfunction_from_serial() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.get_sfunction_from_serial", false]], "get_szego() (sage.calculus.riemann.riemann_map method)": [[10, "sage.calculus.riemann.Riemann_Map.get_szego", false]], "get_theta_points() (sage.calculus.riemann.riemann_map method)": [[10, "sage.calculus.riemann.Riemann_Map.get_theta_points", false]], "ginacfunction (class in sage.symbolic.function)": [[24, "sage.symbolic.function.GinacFunction", false]], "gosper_sum() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.gosper_sum", false]], "gosper_term() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.gosper_term", false]], "gradient() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.gradient", false]], "half (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.half", false]], "half (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.half", false]], "half_angle() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.half_angle", false]], "halfangle (class in sage.symbolic.expression_conversions)": [[23, "sage.symbolic.expression_conversions.HalfAngle", false]], "halfx (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.halfx", false]], "halves (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.Halves", false]], "halvesdict (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.HalvesDict", false]], "has() (sage.symbolic.assumptions.genericdeclaration method)": [[18, "sage.symbolic.assumptions.GenericDeclaration.has", false]], "has() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.has", false]], "has_valid_variable() (sage.symbolic.subring.genericsymbolicsubring method)": [[33, "sage.symbolic.subring.GenericSymbolicSubring.has_valid_variable", false]], "has_valid_variable() (sage.symbolic.subring.symbolicconstantssubring method)": [[33, "sage.symbolic.subring.SymbolicConstantsSubring.has_valid_variable", false]], "has_valid_variable() (sage.symbolic.subring.symbolicsubringacceptingvars method)": [[33, "sage.symbolic.subring.SymbolicSubringAcceptingVars.has_valid_variable", false]], "has_valid_variable() (sage.symbolic.subring.symbolicsubringrejectingvars method)": [[33, "sage.symbolic.subring.SymbolicSubringRejectingVars.has_valid_variable", false]], "has_wild() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.has_wild", false]], "hessian() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.hessian", false]], "hold_class (class in sage.symbolic.expression)": [[22, "sage.symbolic.expression.hold_class", false]], "holdremover (class in sage.symbolic.expression_conversions)": [[23, "sage.symbolic.expression_conversions.HoldRemover", false]], "horner() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.horner", false]], "hypergeometric_simplify() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.hypergeometric_simplify", false]], "i (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.I", false]], "i() (sage.symbolic.ring.symbolicring method)": [[32, "sage.symbolic.ring.SymbolicRing.I", false]], "idft() (sage.calculus.transforms.dft.indexedsequence method)": [[13, "sage.calculus.transforms.dft.IndexedSequence.idft", false]], "idwt() (sage.calculus.transforms.dft.indexedsequence method)": [[13, "sage.calculus.transforms.dft.IndexedSequence.idwt", false]], "ifft() (sage.calculus.transforms.dft.indexedsequence method)": [[13, "sage.calculus.transforms.dft.IndexedSequence.ifft", false]], "imag() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.imag", false]], "imag_part() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.imag_part", false]], "implicit_derivative() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.implicit_derivative", false]], "indefiniteintegral (class in sage.symbolic.integration.integral)": [[27, "sage.symbolic.integration.integral.IndefiniteIntegral", false]], "index_object() (sage.calculus.transforms.dft.indexedsequence method)": [[13, "sage.calculus.transforms.dft.IndexedSequence.index_object", false]], "indexedsequence (class in sage.calculus.transforms.dft)": [[13, "sage.calculus.transforms.dft.IndexedSequence", false]], "init_function_table() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.init_function_table", false]], "init_pynac_i() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.init_pynac_I", false]], "integer (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.Integer", false]], "integer (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.Integer", false]], "integral() (in module sage.calculus.functional)": [[4, "sage.calculus.functional.integral", false]], "integral() (in module sage.symbolic.integration.integral)": [[27, "sage.symbolic.integration.integral.integral", false]], "integral() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.integral", false]], "integrate() (in module sage.calculus.functional)": [[4, "sage.calculus.functional.integrate", false]], "integrate() (in module sage.symbolic.integration.integral)": [[27, "sage.symbolic.integration.integral.integrate", false]], "integrate() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.integrate", false]], "interfaceinit (class in sage.symbolic.expression_conversions)": [[23, "sage.symbolic.expression_conversions.InterfaceInit", false]], "interpolate_solution() (sage.calculus.ode.ode_solver method)": [[9, "sage.calculus.ode.ode_solver.interpolate_solution", false]], "inverse_laplace() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.inverse_laplace", false]], "inverse_laplace() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.inverse_laplace", false]], "inverse_riemann_map() (sage.calculus.riemann.riemann_map method)": [[10, "sage.calculus.riemann.Riemann_Map.inverse_riemann_map", false]], "inverse_transform() (sage.calculus.transforms.fft.fastfouriertransform_complex method)": [[15, "sage.calculus.transforms.fft.FastFourierTransform_complex.inverse_transform", false]], "is2pow() (in module sage.calculus.transforms.dwt)": [[14, "sage.calculus.transforms.dwt.is2pow", false]], "is_algebraic() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_algebraic", false]], "is_callable() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_callable", false]], "is_constant() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_constant", false]], "is_exact() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_exact", false]], "is_exact() (sage.symbolic.ring.symbolicring method)": [[32, "sage.symbolic.ring.SymbolicRing.is_exact", false]], "is_field() (sage.symbolic.ring.symbolicring method)": [[32, "sage.symbolic.ring.SymbolicRing.is_field", false]], "is_finite() (sage.symbolic.ring.symbolicring method)": [[32, "sage.symbolic.ring.SymbolicRing.is_finite", false]], "is_infinity() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_infinity", false]], "is_integer() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_integer", false]], "is_negative() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_negative", false]], "is_negative_infinity() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_negative_infinity", false]], "is_numeric() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_numeric", false]], "is_polynomial() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_polynomial", false]], "is_positive() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_positive", false]], "is_positive_infinity() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_positive_infinity", false]], "is_rational_expression() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_rational_expression", false]], "is_real() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_real", false]], "is_relational() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_relational", false]], "is_square() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_square", false]], "is_symbol() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_symbol", false]], "is_symbolicequation() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.is_SymbolicEquation", false]], "is_terminating_series() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_terminating_series", false]], "is_terminating_series() (sage.symbolic.expression.symbolicseries method)": [[22, "sage.symbolic.expression.SymbolicSeries.is_terminating_series", false]], "is_trivial_zero() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_trivial_zero", false]], "is_trivially_equal() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_trivially_equal", false]], "is_unit() (in module sage.symbolic.units)": [[34, "sage.symbolic.units.is_unit", false]], "is_unit() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.is_unit", false]], "isidentifier() (in module sage.symbolic.ring)": [[32, "sage.symbolic.ring.isidentifier", false]], "iterator() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.iterator", false]], "jacobian() (in module sage.calculus.functions)": [[5, "sage.calculus.functions.jacobian", false]], "laplace() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.laplace", false]], "laplace() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.laplace", false]], "laurent_polynomial() (in module sage.symbolic.expression_conversions)": [[23, "sage.symbolic.expression_conversions.laurent_polynomial", false]], "laurent_polynomial() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.laurent_polynomial", false]], "laurentpolynomialconverter (class in sage.symbolic.expression_conversions)": [[23, "sage.symbolic.expression_conversions.LaurentPolynomialConverter", false]], "lcm() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.lcm", false]], "leading_coeff() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.leading_coeff", false]], "leading_coefficient() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.leading_coefficient", false]], "left() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.left", false]], "left_hand_side() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.left_hand_side", false]], "lhs() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.lhs", false]], "libgiac_integrator() (in module sage.symbolic.integration.external)": [[26, "sage.symbolic.integration.external.libgiac_integrator", false]], "lim() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.lim", false]], "lim() (in module sage.calculus.functional)": [[4, "sage.calculus.functional.lim", false]], "limit() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.limit", false]], "limit() (in module sage.calculus.functional)": [[4, "sage.calculus.functional.limit", false]], "limit() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.limit", false]], "list() (sage.calculus.interpolation.spline method)": [[7, "sage.calculus.interpolation.Spline.list", false]], "list() (sage.calculus.transforms.dft.indexedsequence method)": [[13, "sage.calculus.transforms.dft.IndexedSequence.list", false]], "list() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.list", false]], "log() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.log", false]], "log_expand() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.log_expand", false]], "log_gamma() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.log_gamma", false]], "log_simplify() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.log_simplify", false]], "low_degree() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.low_degree", false]], "make_map() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.make_map", false]], "mapped_opts() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.mapped_opts", false]], "match() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.match", false]], "math_sorted() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.math_sorted", false]], "maxima_integrator() (in module sage.symbolic.integration.external)": [[26, "sage.symbolic.integration.external.maxima_integrator", false]], "maxima_methods() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.maxima_methods", false]], "maxima_options() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.maxima_options", false]], "maximafunctionelementwrapper (class in sage.symbolic.maxima_wrapper)": [[28, "sage.symbolic.maxima_wrapper.MaximaFunctionElementWrapper", false]], "maximawrapper (class in sage.symbolic.maxima_wrapper)": [[28, "sage.symbolic.maxima_wrapper.MaximaWrapper", false]], "merge() (sage.symbolic.callable.callablesymbolicexpressionfunctor method)": [[20, "sage.symbolic.callable.CallableSymbolicExpressionFunctor.merge", false]], "merge() (sage.symbolic.subring.genericsymbolicsubringfunctor method)": [[33, "sage.symbolic.subring.GenericSymbolicSubringFunctor.merge", false]], "merge() (sage.symbolic.subring.symbolicsubringacceptingvarsfunctor method)": [[33, "sage.symbolic.subring.SymbolicSubringAcceptingVarsFunctor.merge", false]], "merge() (sage.symbolic.subring.symbolicsubringrejectingvarsfunctor method)": [[33, "sage.symbolic.subring.SymbolicSubringRejectingVarsFunctor.merge", false]], "minpoly() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.minpoly", false]], "minpoly() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.minpoly", false]], "mixed_order() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.mixed_order", false]], "mixed_sorted() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.mixed_sorted", false]], "mma_free_integrator() (in module sage.symbolic.integration.external)": [[26, "sage.symbolic.integration.external.mma_free_integrator", false]], "mma_free_limit() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.mma_free_limit", false]], "module": [[1, "module-sage.calculus.calculus", false], [2, "module-sage.calculus.desolvers", false], [3, "module-sage.calculus.expr", false], [4, "module-sage.calculus.functional", false], [5, "module-sage.calculus.functions", false], [6, "module-sage.calculus.integration", false], [7, "module-sage.calculus.interpolation", false], [8, "module-sage.calculus.interpolators", false], [9, "module-sage.calculus.ode", false], [10, "module-sage.calculus.riemann", false], [11, "module-sage.calculus.test_sympy", false], [12, "module-sage.calculus.tests", false], [13, "module-sage.calculus.transforms.dft", false], [14, "module-sage.calculus.transforms.dwt", false], [15, "module-sage.calculus.transforms.fft", false], [16, "module-sage.calculus.var", false], [17, "module-sage.calculus.wester", false], [18, "module-sage.symbolic.assumptions", false], [19, "module-sage.symbolic.benchmark", false], [20, "module-sage.symbolic.callable", false], [21, "module-sage.symbolic.complexity_measures", false], [22, "module-sage.symbolic.expression", false], [23, "module-sage.symbolic.expression_conversions", false], [24, "module-sage.symbolic.function", false], [25, "module-sage.symbolic.function_factory", false], [26, "module-sage.symbolic.integration.external", false], [27, "module-sage.symbolic.integration.integral", false], [28, "module-sage.symbolic.maxima_wrapper", false], [29, "module-sage.symbolic.operators", false], [30, "module-sage.symbolic.random_tests", false], [31, "module-sage.symbolic.relation", false], [32, "module-sage.symbolic.ring", false], [33, "module-sage.symbolic.subring", false], [34, "module-sage.symbolic.units", false]], "monte_carlo_integral() (in module sage.calculus.integration)": [[6, "sage.calculus.integration.monte_carlo_integral", false]], "mul() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.mul", false]], "mul_vararg() (in module sage.symbolic.operators)": [[29, "sage.symbolic.operators.mul_vararg", false]], "multiply_both_sides() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.multiply_both_sides", false]], "name() (sage.symbolic.expression.pynacconstant method)": [[22, "sage.symbolic.expression.PynacConstant.name", false]], "name() (sage.symbolic.function.function method)": [[24, "sage.symbolic.function.Function.name", false]], "negation() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.negation", false]], "new_expression() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.new_Expression", false]], "new_expression_from_pyobject() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.new_Expression_from_pyobject", false]], "new_expression_symbol() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.new_Expression_symbol", false]], "new_expression_wild() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.new_Expression_wild", false]], "nintegral() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.nintegral", false]], "nintegral() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.nintegral", false]], "nintegrate() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.nintegrate", false]], "nintegrate() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.nintegrate", false]], "nops() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.nops", false]], "norm() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.norm", false]], "normalize() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.normalize", false]], "normalize_index_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.normalize_index_for_doctests", false]], "normalize_prob_list() (in module sage.symbolic.random_tests)": [[30, "sage.symbolic.random_tests.normalize_prob_list", false]], "number_of_arguments() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.number_of_arguments", false]], "number_of_arguments() (sage.symbolic.function.function method)": [[24, "sage.symbolic.function.Function.number_of_arguments", false]], "number_of_operands() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.number_of_operands", false]], "numerator() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.numerator", false]], "numerator_denominator() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.numerator_denominator", false]], "numerical_approx() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.numerical_approx", false]], "numerical_integral() (in module sage.calculus.integration)": [[6, "sage.calculus.integration.numerical_integral", false]], "numpytosrmorphism (class in sage.symbolic.ring)": [[32, "sage.symbolic.ring.NumpyToSRMorphism", false]], "ode_solve() (sage.calculus.ode.ode_solver method)": [[9, "sage.calculus.ode.ode_solver.ode_solve", false]], "ode_solver (class in sage.calculus.ode)": [[9, "sage.calculus.ode.ode_solver", false]], "ode_system (class in sage.calculus.ode)": [[9, "sage.calculus.ode.ode_system", false]], "one (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.one", false]], "op (sage.symbolic.expression.expression attribute)": [[22, "sage.symbolic.expression.Expression.op", false]], "operands() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.operands", false]], "operands() (sage.symbolic.expression_conversions.fakeexpression method)": [[23, "sage.symbolic.expression_conversions.FakeExpression.operands", false]], "operandswrapper (class in sage.symbolic.expression)": [[22, "sage.symbolic.expression.OperandsWrapper", false]], "operator() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.operator", false]], "operator() (sage.symbolic.expression_conversions.fakeexpression method)": [[23, "sage.symbolic.expression_conversions.FakeExpression.operator", false]], "order() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.Order", false]], "parameter_set() (sage.symbolic.operators.fderivativeoperator method)": [[29, "sage.symbolic.operators.FDerivativeOperator.parameter_set", false]], "paramset_from_expression() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.paramset_from_Expression", false]], "partial_fraction() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.partial_fraction", false]], "partial_fraction_decomposition() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.partial_fraction_decomposition", false]], "pi() (sage.symbolic.ring.symbolicring method)": [[32, "sage.symbolic.ring.SymbolicRing.pi", false]], "pickle_wrapper() (in module sage.symbolic.function)": [[24, "sage.symbolic.function.pickle_wrapper", false]], "plot() (sage.calculus.transforms.dft.indexedsequence method)": [[13, "sage.calculus.transforms.dft.IndexedSequence.plot", false]], "plot() (sage.calculus.transforms.dwt.discretewavelettransform method)": [[14, "sage.calculus.transforms.dwt.DiscreteWaveletTransform.plot", false]], "plot() (sage.calculus.transforms.fft.fastfouriertransform_complex method)": [[15, "sage.calculus.transforms.fft.FastFourierTransform_complex.plot", false]], "plot() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.plot", false]], "plot_boundaries() (sage.calculus.riemann.riemann_map method)": [[10, "sage.calculus.riemann.Riemann_Map.plot_boundaries", false]], "plot_colored() (sage.calculus.riemann.riemann_map method)": [[10, "sage.calculus.riemann.Riemann_Map.plot_colored", false]], "plot_histogram() (sage.calculus.transforms.dft.indexedsequence method)": [[13, "sage.calculus.transforms.dft.IndexedSequence.plot_histogram", false]], "plot_solution() (sage.calculus.ode.ode_solver method)": [[9, "sage.calculus.ode.ode_solver.plot_solution", false]], "plot_spiderweb() (sage.calculus.riemann.riemann_map method)": [[10, "sage.calculus.riemann.Riemann_Map.plot_spiderweb", false]], "poly() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.poly", false]], "polygon_spline() (in module sage.calculus.interpolators)": [[8, "sage.calculus.interpolators.polygon_spline", false]], "polynomial() (in module sage.symbolic.expression_conversions)": [[23, "sage.symbolic.expression_conversions.polynomial", false]], "polynomial() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.polynomial", false]], "polynomialconverter (class in sage.symbolic.expression_conversions)": [[23, "sage.symbolic.expression_conversions.PolynomialConverter", false]], "power() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.power", false]], "power_series() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.power_series", false]], "power_series() (sage.symbolic.expression.symbolicseries method)": [[22, "sage.symbolic.expression.SymbolicSeries.power_series", false]], "preprocess_assumptions() (in module sage.symbolic.assumptions)": [[18, "sage.symbolic.assumptions.preprocess_assumptions", false]], "primitive_part() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.primitive_part", false]], "print_order() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.print_order", false]], "print_sorted() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.print_sorted", false]], "prod() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.prod", false]], "pspline (class in sage.calculus.interpolators)": [[8, "sage.calculus.interpolators.PSpline", false]], "py_atan2_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_atan2_for_doctests", false]], "py_denom_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_denom_for_doctests", false]], "py_eval_infinity_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_eval_infinity_for_doctests", false]], "py_eval_neg_infinity_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_eval_neg_infinity_for_doctests", false]], "py_eval_unsigned_infinity_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_eval_unsigned_infinity_for_doctests", false]], "py_exp_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_exp_for_doctests", false]], "py_factorial_py() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_factorial_py", false]], "py_float_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_float_for_doctests", false]], "py_imag_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_imag_for_doctests", false]], "py_is_cinteger_for_doctest() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_is_cinteger_for_doctest", false]], "py_is_crational_for_doctest() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_is_crational_for_doctest", false]], "py_is_integer_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_is_integer_for_doctests", false]], "py_latex_fderivative_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_latex_fderivative_for_doctests", false]], "py_latex_function_pystring() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_latex_function_pystring", false]], "py_latex_variable_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_latex_variable_for_doctests", false]], "py_lgamma_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_lgamma_for_doctests", false]], "py_li2_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_li2_for_doctests", false]], "py_li_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_li_for_doctests", false]], "py_log_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_log_for_doctests", false]], "py_mod_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_mod_for_doctests", false]], "py_numer_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_numer_for_doctests", false]], "py_print_fderivative_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_print_fderivative_for_doctests", false]], "py_print_function_pystring() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_print_function_pystring", false]], "py_psi2_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_psi2_for_doctests", false]], "py_psi_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_psi_for_doctests", false]], "py_real_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_real_for_doctests", false]], "py_stieltjes_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_stieltjes_for_doctests", false]], "py_tgamma_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_tgamma_for_doctests", false]], "py_zeta_for_doctests() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.py_zeta_for_doctests", false]], "pyfunctionwrapper (class in sage.calculus.integration)": [[6, "sage.calculus.integration.PyFunctionWrapper", false]], "pyfunctionwrapper (class in sage.calculus.ode)": [[9, "sage.calculus.ode.PyFunctionWrapper", false]], "pynacconstant (class in sage.symbolic.expression)": [[22, "sage.symbolic.expression.PynacConstant", false]], "pyobject() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.pyobject", false]], "pyobject() (sage.symbolic.expression_conversions.converter method)": [[23, "sage.symbolic.expression_conversions.Converter.pyobject", false]], "pyobject() (sage.symbolic.expression_conversions.expressiontreewalker method)": [[23, "sage.symbolic.expression_conversions.ExpressionTreeWalker.pyobject", false]], "pyobject() (sage.symbolic.expression_conversions.fakeexpression method)": [[23, "sage.symbolic.expression_conversions.FakeExpression.pyobject", false]], "pyobject() (sage.symbolic.expression_conversions.fastcallableconverter method)": [[23, "sage.symbolic.expression_conversions.FastCallableConverter.pyobject", false]], "pyobject() (sage.symbolic.expression_conversions.interfaceinit method)": [[23, "sage.symbolic.expression_conversions.InterfaceInit.pyobject", false]], "pyobject() (sage.symbolic.expression_conversions.polynomialconverter method)": [[23, "sage.symbolic.expression_conversions.PolynomialConverter.pyobject", false]], "pyobject() (sage.symbolic.expression_conversions.ringconverter method)": [[23, "sage.symbolic.expression_conversions.RingConverter.pyobject", false]], "random_expr() (in module sage.symbolic.random_tests)": [[30, "sage.symbolic.random_tests.random_expr", false]], "random_expr_helper() (in module sage.symbolic.random_tests)": [[30, "sage.symbolic.random_tests.random_expr_helper", false]], "random_integer_vector() (in module sage.symbolic.random_tests)": [[30, "sage.symbolic.random_tests.random_integer_vector", false]], "rank (sage.symbolic.subring.genericsymbolicsubringfunctor attribute)": [[33, "sage.symbolic.subring.GenericSymbolicSubringFunctor.rank", false]], "rational_expand() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.rational_expand", false]], "rational_simplify() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.rational_simplify", false]], "real() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.real", false]], "real_part() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.real_part", false]], "rectform() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.rectform", false]], "reduce_trig() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.reduce_trig", false]], "register_or_update_function() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.register_or_update_function", false]], "relation() (sage.symbolic.expression_conversions.converter method)": [[23, "sage.symbolic.expression_conversions.Converter.relation", false]], "relation() (sage.symbolic.expression_conversions.expressiontreewalker method)": [[23, "sage.symbolic.expression_conversions.ExpressionTreeWalker.relation", false]], "relation() (sage.symbolic.expression_conversions.fastcallableconverter method)": [[23, "sage.symbolic.expression_conversions.FastCallableConverter.relation", false]], "relation() (sage.symbolic.expression_conversions.interfaceinit method)": [[23, "sage.symbolic.expression_conversions.InterfaceInit.relation", false]], "relation() (sage.symbolic.expression_conversions.polynomialconverter method)": [[23, "sage.symbolic.expression_conversions.PolynomialConverter.relation", false]], "residue() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.residue", false]], "restore_op_wrapper() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.restore_op_wrapper", false]], "resultant() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.resultant", false]], "rhs() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.rhs", false]], "riemann_map (class in sage.calculus.riemann)": [[10, "sage.calculus.riemann.Riemann_Map", false]], "riemann_map() (sage.calculus.riemann.riemann_map method)": [[10, "sage.calculus.riemann.Riemann_Map.riemann_map", false]], "right() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.right", false]], "right_hand_side() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.right_hand_side", false]], "ringconverter (class in sage.symbolic.expression_conversions)": [[23, "sage.symbolic.expression_conversions.RingConverter", false]], "roots() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.roots", false]], "round() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.round", false]], "sage() (sage.symbolic.maxima_wrapper.maximawrapper method)": [[28, "sage.symbolic.maxima_wrapper.MaximaWrapper.sage", false]], "sage.calculus.calculus": [[1, "module-sage.calculus.calculus", false]], "sage.calculus.desolvers": [[2, "module-sage.calculus.desolvers", false]], "sage.calculus.expr": [[3, "module-sage.calculus.expr", false]], "sage.calculus.functional": [[4, "module-sage.calculus.functional", false]], "sage.calculus.functions": [[5, "module-sage.calculus.functions", false]], "sage.calculus.integration": [[6, "module-sage.calculus.integration", false]], "sage.calculus.interpolation": [[7, "module-sage.calculus.interpolation", false]], "sage.calculus.interpolators": [[8, "module-sage.calculus.interpolators", false]], "sage.calculus.ode": [[9, "module-sage.calculus.ode", false]], "sage.calculus.riemann": [[10, "module-sage.calculus.riemann", false]], "sage.calculus.test_sympy": [[11, "module-sage.calculus.test_sympy", false]], "sage.calculus.tests": [[12, "module-sage.calculus.tests", false]], "sage.calculus.transforms.dft": [[13, "module-sage.calculus.transforms.dft", false]], "sage.calculus.transforms.dwt": [[14, "module-sage.calculus.transforms.dwt", false]], "sage.calculus.transforms.fft": [[15, "module-sage.calculus.transforms.fft", false]], "sage.calculus.var": [[16, "module-sage.calculus.var", false]], "sage.calculus.wester": [[17, "module-sage.calculus.wester", false]], "sage.symbolic.assumptions": [[18, "module-sage.symbolic.assumptions", false]], "sage.symbolic.benchmark": [[19, "module-sage.symbolic.benchmark", false]], "sage.symbolic.callable": [[20, "module-sage.symbolic.callable", false]], "sage.symbolic.complexity_measures": [[21, "module-sage.symbolic.complexity_measures", false]], "sage.symbolic.expression": [[22, "module-sage.symbolic.expression", false]], "sage.symbolic.expression_conversions": [[23, "module-sage.symbolic.expression_conversions", false]], "sage.symbolic.function": [[24, "module-sage.symbolic.function", false]], "sage.symbolic.function_factory": [[25, "module-sage.symbolic.function_factory", false]], "sage.symbolic.integration.external": [[26, "module-sage.symbolic.integration.external", false]], "sage.symbolic.integration.integral": [[27, "module-sage.symbolic.integration.integral", false]], "sage.symbolic.maxima_wrapper": [[28, "module-sage.symbolic.maxima_wrapper", false]], "sage.symbolic.operators": [[29, "module-sage.symbolic.operators", false]], "sage.symbolic.random_tests": [[30, "module-sage.symbolic.random_tests", false]], "sage.symbolic.relation": [[31, "module-sage.symbolic.relation", false]], "sage.symbolic.ring": [[32, "module-sage.symbolic.ring", false]], "sage.symbolic.subring": [[33, "module-sage.symbolic.subring", false]], "sage.symbolic.units": [[34, "module-sage.symbolic.units", false]], "sec (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.sec", false]], "sec (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.sec", false]], "sech (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.sech", false]], "sech (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.sech", false]], "serial() (sage.symbolic.expression.pynacconstant method)": [[22, "sage.symbolic.expression.PynacConstant.serial", false]], "series() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.series", false]], "show() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.show", false]], "simplify() (in module sage.calculus.functional)": [[4, "sage.calculus.functional.simplify", false]], "simplify() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.simplify", false]], "simplify_factorial() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.simplify_factorial", false]], "simplify_full() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.simplify_full", false]], "simplify_hypergeometric() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.simplify_hypergeometric", false]], "simplify_log() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.simplify_log", false]], "simplify_rational() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.simplify_rational", false]], "simplify_real() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.simplify_real", false]], "simplify_rectform() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.simplify_rectform", false]], "simplify_trig() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.simplify_trig", false]], "sin (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.sin", false]], "sin (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.sin", false]], "sin() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.sin", false]], "sinh (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.sinh", false]], "sinh (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.sinh", false]], "sinh() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.sinh", false]], "solve() (in module sage.symbolic.relation)": [[31, "sage.symbolic.relation.solve", false]], "solve() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.solve", false]], "solve_diophantine() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.solve_diophantine", false]], "solve_diophantine() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.solve_diophantine", false]], "solve_ineq() (in module sage.symbolic.relation)": [[31, "sage.symbolic.relation.solve_ineq", false]], "solve_ineq_fourier() (in module sage.symbolic.relation)": [[31, "sage.symbolic.relation.solve_ineq_fourier", false]], "solve_ineq_univar() (in module sage.symbolic.relation)": [[31, "sage.symbolic.relation.solve_ineq_univar", false]], "solve_mod() (in module sage.symbolic.relation)": [[31, "sage.symbolic.relation.solve_mod", false]], "spline (class in sage.calculus.interpolation)": [[7, "sage.calculus.interpolation.Spline", false]], "spline (in module sage.calculus.interpolation)": [[7, "sage.calculus.interpolation.spline", false]], "sqrt() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.sqrt", false]], "sr (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.SR", false]], "sr (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.SR", false]], "start() (sage.symbolic.expression.hold_class method)": [[22, "sage.symbolic.expression.hold_class.start", false]], "step() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.step", false]], "stop() (sage.symbolic.expression.hold_class method)": [[22, "sage.symbolic.expression.hold_class.stop", false]], "str_to_unit() (in module sage.symbolic.units)": [[34, "sage.symbolic.units.str_to_unit", false]], "string_length() (in module sage.symbolic.complexity_measures)": [[21, "sage.symbolic.complexity_measures.string_length", false]], "string_to_list_of_solutions() (in module sage.symbolic.relation)": [[31, "sage.symbolic.relation.string_to_list_of_solutions", false]], "subring() (sage.symbolic.ring.symbolicring method)": [[32, "sage.symbolic.ring.SymbolicRing.subring", false]], "subs() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.subs", false]], "substitute_function() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.substitute_function", false]], "substitutefunction (class in sage.symbolic.expression_conversions)": [[23, "sage.symbolic.expression_conversions.SubstituteFunction", false]], "substitution_delayed() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.substitution_delayed", false]], "substitutionmap (class in sage.symbolic.expression)": [[22, "sage.symbolic.expression.SubstitutionMap", false]], "subtract_from_both_sides() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.subtract_from_both_sides", false]], "sum() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.sum", false]], "symbol() (sage.symbolic.expression_conversions.converter method)": [[23, "sage.symbolic.expression_conversions.Converter.symbol", false]], "symbol() (sage.symbolic.expression_conversions.expressiontreewalker method)": [[23, "sage.symbolic.expression_conversions.ExpressionTreeWalker.symbol", false]], "symbol() (sage.symbolic.expression_conversions.fastcallableconverter method)": [[23, "sage.symbolic.expression_conversions.FastCallableConverter.symbol", false]], "symbol() (sage.symbolic.expression_conversions.interfaceinit method)": [[23, "sage.symbolic.expression_conversions.InterfaceInit.symbol", false]], "symbol() (sage.symbolic.expression_conversions.polynomialconverter method)": [[23, "sage.symbolic.expression_conversions.PolynomialConverter.symbol", false]], "symbol() (sage.symbolic.expression_conversions.ringconverter method)": [[23, "sage.symbolic.expression_conversions.RingConverter.symbol", false]], "symbol() (sage.symbolic.ring.symbolicring method)": [[32, "sage.symbolic.ring.SymbolicRing.symbol", false]], "symbolic_expression() (in module sage.calculus.expr)": [[3, "sage.calculus.expr.symbolic_expression", false]], "symbolic_expression_from_maxima_string() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.symbolic_expression_from_maxima_string", false]], "symbolic_expression_from_string() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.symbolic_expression_from_string", false]], "symbolic_product() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.symbolic_product", false]], "symbolic_sum() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.symbolic_sum", false]], "symbolicconstantssubring (class in sage.symbolic.subring)": [[33, "sage.symbolic.subring.SymbolicConstantsSubring", false]], "symbolicfunction (class in sage.symbolic.function)": [[24, "sage.symbolic.function.SymbolicFunction", false]], "symbolicring (class in sage.symbolic.ring)": [[32, "sage.symbolic.ring.SymbolicRing", false]], "symbolicseries (class in sage.symbolic.expression)": [[22, "sage.symbolic.expression.SymbolicSeries", false]], "symbolicsubringacceptingvars (class in sage.symbolic.subring)": [[33, "sage.symbolic.subring.SymbolicSubringAcceptingVars", false]], "symbolicsubringacceptingvarsfunctor (class in sage.symbolic.subring)": [[33, "sage.symbolic.subring.SymbolicSubringAcceptingVarsFunctor", false]], "symbolicsubringfactory (class in sage.symbolic.subring)": [[33, "sage.symbolic.subring.SymbolicSubringFactory", false]], "symbolicsubringrejectingvars (class in sage.symbolic.subring)": [[33, "sage.symbolic.subring.SymbolicSubringRejectingVars", false]], "symbolicsubringrejectingvarsfunctor (class in sage.symbolic.subring)": [[33, "sage.symbolic.subring.SymbolicSubringRejectingVarsFunctor", false]], "symbols (sage.symbolic.ring.symbolicring attribute)": [[32, "sage.symbolic.ring.SymbolicRing.symbols", false]], "sympy_integrator() (in module sage.symbolic.integration.external)": [[26, "sage.symbolic.integration.external.sympy_integrator", false]], "tan (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.tan", false]], "tan (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.tan", false]], "tan() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.tan", false]], "tanh (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.tanh", false]], "tanh (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.tanh", false]], "tanh() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.tanh", false]], "taylor() (in module sage.calculus.functional)": [[4, "sage.calculus.functional.taylor", false]], "taylor() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.taylor", false]], "temp_var() (sage.symbolic.ring.symbolicring method)": [[32, "sage.symbolic.ring.SymbolicRing.temp_var", false]], "temporaryvariables (class in sage.symbolic.ring)": [[32, "sage.symbolic.ring.TemporaryVariables", false]], "test_binomial() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.test_binomial", false]], "test_relation() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.test_relation", false]], "test_relation_maxima() (in module sage.symbolic.relation)": [[31, "sage.symbolic.relation.test_relation_maxima", false]], "test_symbolic_expression_order() (in module sage.symbolic.random_tests)": [[30, "sage.symbolic.random_tests.test_symbolic_expression_order", false]], "the_symbolicring() (in module sage.symbolic.ring)": [[32, "sage.symbolic.ring.the_SymbolicRing", false]], "to_gamma() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.to_gamma", false]], "tolerant_is_symbol() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.tolerant_is_symbol", false]], "trailing_coeff() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.trailing_coeff", false]], "trailing_coefficient() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.trailing_coefficient", false]], "trig_expand() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.trig_expand", false]], "trig_reduce() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.trig_reduce", false]], "trig_simplify() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.trig_simplify", false]], "truncate() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.truncate", false]], "truncate() (sage.symbolic.expression.symbolicseries method)": [[22, "sage.symbolic.expression.SymbolicSeries.truncate", false]], "tuple() (sage.symbolic.expression_conversions.expressiontreewalker method)": [[23, "sage.symbolic.expression_conversions.ExpressionTreeWalker.tuple", false]], "tuple() (sage.symbolic.expression_conversions.fastcallableconverter method)": [[23, "sage.symbolic.expression_conversions.FastCallableConverter.tuple", false]], "tuple() (sage.symbolic.expression_conversions.interfaceinit method)": [[23, "sage.symbolic.expression_conversions.InterfaceInit.tuple", false]], "two (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.two", false]], "two (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.two", false]], "underscoresagemorphism (class in sage.symbolic.ring)": [[32, "sage.symbolic.ring.UnderscoreSageMorphism", false]], "unhold() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.unhold", false]], "unify_arguments() (sage.symbolic.callable.callablesymbolicexpressionfunctor method)": [[20, "sage.symbolic.callable.CallableSymbolicExpressionFunctor.unify_arguments", false]], "unit() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.unit", false]], "unit_content_primitive() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.unit_content_primitive", false]], "unit_derivations_expr() (in module sage.symbolic.units)": [[34, "sage.symbolic.units.unit_derivations_expr", false]], "unitdocs() (in module sage.symbolic.units)": [[34, "sage.symbolic.units.unitdocs", false]], "unitexpression (class in sage.symbolic.units)": [[34, "sage.symbolic.units.UnitExpression", false]], "units (class in sage.symbolic.units)": [[34, "sage.symbolic.units.Units", false]], "unpack_operands() (in module sage.symbolic.expression)": [[22, "sage.symbolic.expression.unpack_operands", false]], "unpickle_function() (in module sage.symbolic.function_factory)": [[25, "sage.symbolic.function_factory.unpickle_function", false]], "unpickle_wrapper() (in module sage.symbolic.function)": [[24, "sage.symbolic.function.unpickle_wrapper", false]], "value() (sage.calculus.interpolators.ccspline method)": [[8, "sage.calculus.interpolators.CCSpline.value", false]], "value() (sage.calculus.interpolators.pspline method)": [[8, "sage.calculus.interpolators.PSpline.value", false]], "var() (in module sage.calculus.var)": [[16, "sage.calculus.var.var", false]], "var() (in module sage.symbolic.ring)": [[32, "sage.symbolic.ring.var", false]], "var() (sage.symbolic.ring.symbolicring method)": [[32, "sage.symbolic.ring.SymbolicRing.var", false]], "variables() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.variables", false]], "variables() (sage.symbolic.function.function method)": [[24, "sage.symbolic.function.Function.variables", false]], "vars_in_str() (in module sage.symbolic.units)": [[34, "sage.symbolic.units.vars_in_str", false]], "wavelettransform() (in module sage.calculus.transforms.dwt)": [[14, "sage.calculus.transforms.dwt.WaveletTransform", false]], "wild() (sage.symbolic.ring.symbolicring method)": [[32, "sage.symbolic.ring.SymbolicRing.wild", false]], "wronskian() (in module sage.calculus.functions)": [[5, "sage.calculus.functions.wronskian", false]], "wz_certificate() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.WZ_certificate", false]], "x (sage.symbolic.expression_conversions.exponentialize attribute)": [[23, "sage.symbolic.expression_conversions.Exponentialize.x", false]], "x (sage.symbolic.expression_conversions.halfangle attribute)": [[23, "sage.symbolic.expression_conversions.HalfAngle.x", false]], "zeta() (sage.symbolic.expression.expression method)": [[22, "sage.symbolic.expression.Expression.zeta", false]]}, "objects": {"sage.calculus": [[1, 0, 0, "-", "calculus"], [2, 0, 0, "-", "desolvers"], [3, 0, 0, "-", "expr"], [4, 0, 0, "-", "functional"], [5, 0, 0, "-", "functions"], [6, 0, 0, "-", "integration"], [7, 0, 0, "-", "interpolation"], [8, 0, 0, "-", "interpolators"], [9, 0, 0, "-", "ode"], [10, 0, 0, "-", "riemann"], [11, 0, 0, "-", "test_sympy"], [12, 0, 0, "-", "tests"], [16, 0, 0, "-", "var"], [17, 0, 0, "-", "wester"]], "sage.calculus.calculus": [[1, 1, 1, "", "at"], [1, 1, 1, "", "dummy_diff"], [1, 1, 1, "", "dummy_integrate"], [1, 1, 1, "", "dummy_inverse_laplace"], [1, 1, 1, "", "dummy_laplace"], [1, 1, 1, "", "dummy_pochhammer"], [1, 1, 1, "", "inverse_laplace"], [1, 1, 1, "", "laplace"], [1, 1, 1, "", "lim"], [1, 1, 1, "", "limit"], [1, 1, 1, "", "mapped_opts"], [1, 1, 1, "", "maxima_options"], [1, 1, 1, "", "minpoly"], [1, 1, 1, "", "mma_free_limit"], [1, 1, 1, "", "nintegral"], [1, 1, 1, "", "nintegrate"], [1, 1, 1, "", "symbolic_expression_from_maxima_string"], [1, 1, 1, "", "symbolic_expression_from_string"], [1, 1, 1, "", "symbolic_product"], [1, 1, 1, "", "symbolic_sum"]], "sage.calculus.desolvers": [[2, 1, 1, "", "desolve"], [2, 1, 1, "", "desolve_laplace"], [2, 1, 1, "", "desolve_mintides"], [2, 1, 1, "", "desolve_odeint"], [2, 1, 1, "", "desolve_rk4"], [2, 1, 1, "", "desolve_rk4_determine_bounds"], [2, 1, 1, "", "desolve_system"], [2, 1, 1, "", "desolve_system_rk4"], [2, 1, 1, "", "desolve_tides_mpfr"], [2, 1, 1, "", "eulers_method"], [2, 1, 1, "", "eulers_method_2x2"], [2, 1, 1, "", "eulers_method_2x2_plot"], [2, 1, 1, "", "fricas_desolve"], [2, 1, 1, "", "fricas_desolve_system"]], "sage.calculus.expr": [[3, 1, 1, "", "symbolic_expression"]], "sage.calculus.functional": [[4, 1, 1, "", "derivative"], [4, 1, 1, "", "diff"], [4, 1, 1, "", "expand"], [4, 1, 1, "", "integral"], [4, 1, 1, "", "integrate"], [4, 1, 1, "", "lim"], [4, 1, 1, "", "limit"], [4, 1, 1, "", "simplify"], [4, 1, 1, "", "taylor"]], "sage.calculus.functions": [[5, 1, 1, "", "jacobian"], [5, 1, 1, "", "wronskian"]], "sage.calculus.integration": [[6, 2, 1, "", "PyFunctionWrapper"], [6, 2, 1, "", "compiled_integrand"], [6, 1, 1, "", "monte_carlo_integral"], [6, 1, 1, "", "numerical_integral"]], "sage.calculus.interpolation": [[7, 2, 1, "", "Spline"], [7, 4, 1, "", "spline"]], "sage.calculus.interpolation.Spline": [[7, 3, 1, "", "append"], [7, 3, 1, "", "definite_integral"], [7, 3, 1, "", "derivative"], [7, 3, 1, "", "list"]], "sage.calculus.interpolators": [[8, 2, 1, "", "CCSpline"], [8, 2, 1, "", "PSpline"], [8, 1, 1, "", "complex_cubic_spline"], [8, 1, 1, "", "polygon_spline"]], "sage.calculus.interpolators.CCSpline": [[8, 3, 1, "", "derivative"], [8, 3, 1, "", "value"]], "sage.calculus.interpolators.PSpline": [[8, 3, 1, "", "derivative"], [8, 3, 1, "", "value"]], "sage.calculus.ode": [[9, 2, 1, "", "PyFunctionWrapper"], [9, 2, 1, "", "ode_solver"], [9, 2, 1, "", "ode_system"]], "sage.calculus.ode.ode_solver": [[9, 3, 1, "", "interpolate_solution"], [9, 3, 1, "", "ode_solve"], [9, 3, 1, "", "plot_solution"]], "sage.calculus.riemann": [[10, 2, 1, "", "Riemann_Map"], [10, 1, 1, "", "analytic_boundary"], [10, 1, 1, "", "analytic_interior"], [10, 1, 1, "", "cauchy_kernel"], [10, 1, 1, "", "complex_to_rgb"], [10, 1, 1, "", "complex_to_spiderweb"], [10, 1, 1, "", "get_derivatives"]], "sage.calculus.riemann.Riemann_Map": [[10, 3, 1, "", "compute_on_grid"], [10, 3, 1, "", "get_szego"], [10, 3, 1, "", "get_theta_points"], [10, 3, 1, "", "inverse_riemann_map"], [10, 3, 1, "", "plot_boundaries"], [10, 3, 1, "", "plot_colored"], [10, 3, 1, "", "plot_spiderweb"], [10, 3, 1, "", "riemann_map"]], "sage.calculus.transforms": [[13, 0, 0, "-", "dft"], [14, 0, 0, "-", "dwt"], [15, 0, 0, "-", "fft"]], "sage.calculus.transforms.dft": [[13, 2, 1, "", "IndexedSequence"]], "sage.calculus.transforms.dft.IndexedSequence": [[13, 3, 1, "", "base_ring"], [13, 3, 1, "", "convolution"], [13, 3, 1, "", "convolution_periodic"], [13, 3, 1, "", "dct"], [13, 3, 1, "", "dft"], [13, 3, 1, "", "dict"], [13, 3, 1, "", "dst"], [13, 3, 1, "", "dwt"], [13, 3, 1, "", "fft"], [13, 3, 1, "", "idft"], [13, 3, 1, "", "idwt"], [13, 3, 1, "", "ifft"], [13, 3, 1, "", "index_object"], [13, 3, 1, "", "list"], [13, 3, 1, "", "plot"], [13, 3, 1, "", "plot_histogram"]], "sage.calculus.transforms.dwt": [[14, 1, 1, "", "DWT"], [14, 2, 1, "", "DiscreteWaveletTransform"], [14, 1, 1, "", "WaveletTransform"], [14, 1, 1, "", "is2pow"]], "sage.calculus.transforms.dwt.DiscreteWaveletTransform": [[14, 3, 1, "", "backward_transform"], [14, 3, 1, "", "forward_transform"], [14, 3, 1, "", "plot"]], "sage.calculus.transforms.fft": [[15, 1, 1, "", "FFT"], [15, 1, 1, "", "FastFourierTransform"], [15, 2, 1, "", "FastFourierTransform_base"], [15, 2, 1, "", "FastFourierTransform_complex"], [15, 2, 1, "", "FourierTransform_complex"], [15, 2, 1, "", "FourierTransform_real"]], "sage.calculus.transforms.fft.FastFourierTransform_complex": [[15, 3, 1, "", "backward_transform"], [15, 3, 1, "", "forward_transform"], [15, 3, 1, "", "inverse_transform"], [15, 3, 1, "", "plot"]], "sage.calculus.var": [[16, 1, 1, "", "clear_vars"], [16, 1, 1, "", "function"], [16, 1, 1, "", "var"]], "sage.symbolic": [[18, 0, 0, "-", "assumptions"], [19, 0, 0, "-", "benchmark"], [20, 0, 0, "-", "callable"], [21, 0, 0, "-", "complexity_measures"], [22, 0, 0, "-", "expression"], [23, 0, 0, "-", "expression_conversions"], [24, 0, 0, "-", "function"], [25, 0, 0, "-", "function_factory"], [28, 0, 0, "-", "maxima_wrapper"], [29, 0, 0, "-", "operators"], [30, 0, 0, "-", "random_tests"], [31, 0, 0, "-", "relation"], [32, 0, 0, "-", "ring"], [33, 0, 0, "-", "subring"], [34, 0, 0, "-", "units"]], "sage.symbolic.assumptions": [[18, 2, 1, "", "GenericDeclaration"], [18, 1, 1, "", "assume"], [18, 2, 1, "", "assuming"], [18, 1, 1, "", "assumptions"], [18, 1, 1, "", "forget"], [18, 1, 1, "", "preprocess_assumptions"]], "sage.symbolic.assumptions.GenericDeclaration": [[18, 3, 1, "", "assume"], [18, 3, 1, "", "contradicts"], [18, 3, 1, "", "forget"], [18, 3, 1, "", "has"]], "sage.symbolic.callable": [[20, 2, 1, "", "CallableSymbolicExpressionFunctor"], [20, 2, 1, "", "CallableSymbolicExpressionRingFactory"], [20, 2, 1, "", "CallableSymbolicExpressionRing_class"]], "sage.symbolic.callable.CallableSymbolicExpressionFunctor": [[20, 3, 1, "", "arguments"], [20, 3, 1, "", "merge"], [20, 3, 1, "", "unify_arguments"]], "sage.symbolic.callable.CallableSymbolicExpressionRingFactory": [[20, 3, 1, "", "create_key"], [20, 3, 1, "", "create_object"]], "sage.symbolic.callable.CallableSymbolicExpressionRing_class": [[20, 3, 1, "", "args"], [20, 3, 1, "", "arguments"], [20, 3, 1, "", "construction"]], "sage.symbolic.complexity_measures": [[21, 1, 1, "", "string_length"]], "sage.symbolic.expression": [[22, 2, 1, "", "E"], [22, 2, 1, "", "Expression"], [22, 2, 1, "", "ExpressionIterator"], [22, 2, 1, "", "OperandsWrapper"], [22, 2, 1, "", "PynacConstant"], [22, 2, 1, "", "SubstitutionMap"], [22, 2, 1, "", "SymbolicSeries"], [22, 1, 1, "", "call_registered_function"], [22, 1, 1, "", "doublefactorial"], [22, 1, 1, "", "find_registered_function"], [22, 1, 1, "", "get_fn_serial"], [22, 1, 1, "", "get_ginac_serial"], [22, 1, 1, "", "get_sfunction_from_hash"], [22, 1, 1, "", "get_sfunction_from_serial"], [22, 2, 1, "", "hold_class"], [22, 1, 1, "", "init_function_table"], [22, 1, 1, "", "init_pynac_I"], [22, 1, 1, "", "is_SymbolicEquation"], [22, 1, 1, "", "make_map"], [22, 1, 1, "", "math_sorted"], [22, 1, 1, "", "mixed_order"], [22, 1, 1, "", "mixed_sorted"], [22, 1, 1, "", "new_Expression"], [22, 1, 1, "", "new_Expression_from_pyobject"], [22, 1, 1, "", "new_Expression_symbol"], [22, 1, 1, "", "new_Expression_wild"], [22, 1, 1, "", "normalize_index_for_doctests"], [22, 1, 1, "", "paramset_from_Expression"], [22, 1, 1, "", "print_order"], [22, 1, 1, "", "print_sorted"], [22, 1, 1, "", "py_atan2_for_doctests"], [22, 1, 1, "", "py_denom_for_doctests"], [22, 1, 1, "", "py_eval_infinity_for_doctests"], [22, 1, 1, "", "py_eval_neg_infinity_for_doctests"], [22, 1, 1, "", "py_eval_unsigned_infinity_for_doctests"], [22, 1, 1, "", "py_exp_for_doctests"], [22, 1, 1, "", "py_factorial_py"], [22, 1, 1, "", "py_float_for_doctests"], [22, 1, 1, "", "py_imag_for_doctests"], [22, 1, 1, "", "py_is_cinteger_for_doctest"], [22, 1, 1, "", "py_is_crational_for_doctest"], [22, 1, 1, "", "py_is_integer_for_doctests"], [22, 1, 1, "", "py_latex_fderivative_for_doctests"], [22, 1, 1, "", "py_latex_function_pystring"], [22, 1, 1, "", "py_latex_variable_for_doctests"], [22, 1, 1, "", "py_lgamma_for_doctests"], [22, 1, 1, "", "py_li2_for_doctests"], [22, 1, 1, "", "py_li_for_doctests"], [22, 1, 1, "", "py_log_for_doctests"], [22, 1, 1, "", "py_mod_for_doctests"], [22, 1, 1, "", "py_numer_for_doctests"], [22, 1, 1, "", "py_print_fderivative_for_doctests"], [22, 1, 1, "", "py_print_function_pystring"], [22, 1, 1, "", "py_psi2_for_doctests"], [22, 1, 1, "", "py_psi_for_doctests"], [22, 1, 1, "", "py_real_for_doctests"], [22, 1, 1, "", "py_stieltjes_for_doctests"], [22, 1, 1, "", "py_tgamma_for_doctests"], [22, 1, 1, "", "py_zeta_for_doctests"], [22, 1, 1, "", "register_or_update_function"], [22, 1, 1, "", "restore_op_wrapper"], [22, 1, 1, "", "solve_diophantine"], [22, 1, 1, "", "test_binomial"], [22, 1, 1, "", "tolerant_is_symbol"], [22, 1, 1, "", "unpack_operands"]], "sage.symbolic.expression.Expression": [[22, 3, 1, "", "Order"], [22, 3, 1, "", "WZ_certificate"], [22, 3, 1, "", "abs"], [22, 3, 1, "", "add"], [22, 3, 1, "", "add_to_both_sides"], [22, 3, 1, "", "arccos"], [22, 3, 1, "", "arccosh"], [22, 3, 1, "", "arcsin"], [22, 3, 1, "", "arcsinh"], [22, 3, 1, "", "arctan"], [22, 3, 1, "", "arctan2"], [22, 3, 1, "", "arctanh"], [22, 3, 1, "", "args"], [22, 3, 1, "", "arguments"], [22, 3, 1, "", "assume"], [22, 3, 1, "", "binomial"], [22, 3, 1, "", "canonicalize_radical"], [22, 3, 1, "", "coefficient"], [22, 3, 1, "", "coefficients"], [22, 3, 1, "", "collect"], [22, 3, 1, "", "collect_common_factors"], [22, 3, 1, "", "combine"], [22, 3, 1, "", "conjugate"], [22, 3, 1, "", "content"], [22, 3, 1, "", "contradicts"], [22, 3, 1, "", "convert"], [22, 3, 1, "", "cos"], [22, 3, 1, "", "cosh"], [22, 3, 1, "", "csgn"], [22, 3, 1, "", "decl_assume"], [22, 3, 1, "", "decl_forget"], [22, 3, 1, "", "default_variable"], [22, 3, 1, "", "degree"], [22, 3, 1, "", "demoivre"], [22, 3, 1, "", "denominator"], [22, 3, 1, "", "derivative"], [22, 3, 1, "", "diff"], [22, 3, 1, "", "differentiate"], [22, 3, 1, "", "distribute"], [22, 3, 1, "", "divide_both_sides"], [22, 3, 1, "", "exp"], [22, 3, 1, "", "expand"], [22, 3, 1, "", "expand_log"], [22, 3, 1, "", "expand_rational"], [22, 3, 1, "", "expand_sum"], [22, 3, 1, "", "expand_trig"], [22, 3, 1, "", "exponentialize"], [22, 3, 1, "", "factor"], [22, 3, 1, "", "factor_list"], [22, 3, 1, "", "factorial"], [22, 3, 1, "", "factorial_simplify"], [22, 3, 1, "", "find"], [22, 3, 1, "", "find_local_maximum"], [22, 3, 1, "", "find_local_minimum"], [22, 3, 1, "", "find_root"], [22, 3, 1, "", "forget"], [22, 3, 1, "", "fraction"], [22, 3, 1, "", "free_variables"], [22, 3, 1, "", "full_simplify"], [22, 3, 1, "", "function"], [22, 3, 1, "", "gamma"], [22, 3, 1, "", "gamma_normalize"], [22, 3, 1, "", "gcd"], [22, 3, 1, "", "gosper_sum"], [22, 3, 1, "", "gosper_term"], [22, 3, 1, "", "gradient"], [22, 3, 1, "", "half_angle"], [22, 3, 1, "", "has"], [22, 3, 1, "", "has_wild"], [22, 3, 1, "", "hessian"], [22, 3, 1, "", "horner"], [22, 3, 1, "", "hypergeometric_simplify"], [22, 3, 1, "", "imag"], [22, 3, 1, "", "imag_part"], [22, 3, 1, "", "implicit_derivative"], [22, 3, 1, "", "integral"], [22, 3, 1, "", "integrate"], [22, 3, 1, "", "inverse_laplace"], [22, 3, 1, "", "is_algebraic"], [22, 3, 1, "", "is_callable"], [22, 3, 1, "", "is_constant"], [22, 3, 1, "", "is_exact"], [22, 3, 1, "", "is_infinity"], [22, 3, 1, "", "is_integer"], [22, 3, 1, "", "is_negative"], [22, 3, 1, "", "is_negative_infinity"], [22, 3, 1, "", "is_numeric"], [22, 3, 1, "", "is_polynomial"], [22, 3, 1, "", "is_positive"], [22, 3, 1, "", "is_positive_infinity"], [22, 3, 1, "", "is_rational_expression"], [22, 3, 1, "", "is_real"], [22, 3, 1, "", "is_relational"], [22, 3, 1, "", "is_square"], [22, 3, 1, "", "is_symbol"], [22, 3, 1, "", "is_terminating_series"], [22, 3, 1, "", "is_trivial_zero"], [22, 3, 1, "", "is_trivially_equal"], [22, 3, 1, "", "is_unit"], [22, 3, 1, "", "iterator"], [22, 3, 1, "", "laplace"], [22, 3, 1, "", "laurent_polynomial"], [22, 3, 1, "", "lcm"], [22, 3, 1, "", "leading_coeff"], [22, 3, 1, "", "leading_coefficient"], [22, 3, 1, "", "left"], [22, 3, 1, "", "left_hand_side"], [22, 3, 1, "", "lhs"], [22, 3, 1, "", "limit"], [22, 3, 1, "", "list"], [22, 3, 1, "", "log"], [22, 3, 1, "", "log_expand"], [22, 3, 1, "", "log_gamma"], [22, 3, 1, "", "log_simplify"], [22, 3, 1, "", "low_degree"], [22, 3, 1, "", "match"], [22, 3, 1, "", "maxima_methods"], [22, 3, 1, "", "minpoly"], [22, 3, 1, "", "mul"], [22, 3, 1, "", "multiply_both_sides"], [22, 3, 1, "", "negation"], [22, 3, 1, "", "nintegral"], [22, 3, 1, "", "nintegrate"], [22, 3, 1, "", "nops"], [22, 3, 1, "", "norm"], [22, 3, 1, "", "normalize"], [22, 3, 1, "", "number_of_arguments"], [22, 3, 1, "", "number_of_operands"], [22, 3, 1, "", "numerator"], [22, 3, 1, "", "numerator_denominator"], [22, 3, 1, "", "numerical_approx"], [22, 4, 1, "", "op"], [22, 3, 1, "", "operands"], [22, 3, 1, "", "operator"], [22, 3, 1, "", "partial_fraction"], [22, 3, 1, "", "partial_fraction_decomposition"], [22, 3, 1, "", "plot"], [22, 3, 1, "", "poly"], [22, 3, 1, "", "polynomial"], [22, 3, 1, "", "power"], [22, 3, 1, "", "power_series"], [22, 3, 1, "", "primitive_part"], [22, 3, 1, "", "prod"], [22, 3, 1, "", "pyobject"], [22, 3, 1, "", "rational_expand"], [22, 3, 1, "", "rational_simplify"], [22, 3, 1, "", "real"], [22, 3, 1, "", "real_part"], [22, 3, 1, "", "rectform"], [22, 3, 1, "", "reduce_trig"], [22, 3, 1, "", "residue"], [22, 3, 1, "", "resultant"], [22, 3, 1, "", "rhs"], [22, 3, 1, "", "right"], [22, 3, 1, "", "right_hand_side"], [22, 3, 1, "", "roots"], [22, 3, 1, "", "round"], [22, 3, 1, "", "series"], [22, 3, 1, "", "show"], [22, 3, 1, "", "simplify"], [22, 3, 1, "", "simplify_factorial"], [22, 3, 1, "", "simplify_full"], [22, 3, 1, "", "simplify_hypergeometric"], [22, 3, 1, "", "simplify_log"], [22, 3, 1, "", "simplify_rational"], [22, 3, 1, "", "simplify_real"], [22, 3, 1, "", "simplify_rectform"], [22, 3, 1, "", "simplify_trig"], [22, 3, 1, "", "sin"], [22, 3, 1, "", "sinh"], [22, 3, 1, "", "solve"], [22, 3, 1, "", "solve_diophantine"], [22, 3, 1, "", "sqrt"], [22, 3, 1, "", "step"], [22, 3, 1, "", "subs"], [22, 3, 1, "", "substitute_function"], [22, 3, 1, "", "substitution_delayed"], [22, 3, 1, "", "subtract_from_both_sides"], [22, 3, 1, "", "sum"], [22, 3, 1, "", "tan"], [22, 3, 1, "", "tanh"], [22, 3, 1, "", "taylor"], [22, 3, 1, "", "test_relation"], [22, 3, 1, "", "to_gamma"], [22, 3, 1, "", "trailing_coeff"], [22, 3, 1, "", "trailing_coefficient"], [22, 3, 1, "", "trig_expand"], [22, 3, 1, "", "trig_reduce"], [22, 3, 1, "", "trig_simplify"], [22, 3, 1, "", "truncate"], [22, 3, 1, "", "unhold"], [22, 3, 1, "", "unit"], [22, 3, 1, "", "unit_content_primitive"], [22, 3, 1, "", "variables"], [22, 3, 1, "", "zeta"]], "sage.symbolic.expression.PynacConstant": [[22, 3, 1, "", "expression"], [22, 3, 1, "", "name"], [22, 3, 1, "", "serial"]], "sage.symbolic.expression.SubstitutionMap": [[22, 3, 1, "", "apply_to"]], "sage.symbolic.expression.SymbolicSeries": [[22, 3, 1, "", "coefficients"], [22, 3, 1, "", "default_variable"], [22, 3, 1, "", "is_terminating_series"], [22, 3, 1, "", "power_series"], [22, 3, 1, "", "truncate"]], "sage.symbolic.expression.hold_class": [[22, 3, 1, "", "start"], [22, 3, 1, "", "stop"]], "sage.symbolic.expression_conversions": [[23, 2, 1, "", "Converter"], [23, 2, 1, "", "DeMoivre"], [23, 2, 1, "", "Exponentialize"], [23, 2, 1, "", "ExpressionTreeWalker"], [23, 2, 1, "", "FakeExpression"], [23, 2, 1, "", "FastCallableConverter"], [23, 2, 1, "", "HalfAngle"], [23, 2, 1, "", "HoldRemover"], [23, 2, 1, "", "InterfaceInit"], [23, 2, 1, "", "LaurentPolynomialConverter"], [23, 2, 1, "", "PolynomialConverter"], [23, 2, 1, "", "RingConverter"], [23, 2, 1, "", "SubstituteFunction"], [23, 1, 1, "", "fast_callable"], [23, 1, 1, "", "laurent_polynomial"], [23, 1, 1, "", "polynomial"]], "sage.symbolic.expression_conversions.Converter": [[23, 3, 1, "", "arithmetic"], [23, 3, 1, "", "composition"], [23, 3, 1, "", "derivative"], [23, 3, 1, "", "get_fake_div"], [23, 3, 1, "", "pyobject"], [23, 3, 1, "", "relation"], [23, 3, 1, "", "symbol"]], "sage.symbolic.expression_conversions.DeMoivre": [[23, 3, 1, "", "composition"]], "sage.symbolic.expression_conversions.Exponentialize": [[23, 4, 1, "", "CircDict"], [23, 4, 1, "", "Circs"], [23, 4, 1, "", "I"], [23, 4, 1, "", "Integer"], [23, 4, 1, "", "SR"], [23, 3, 1, "", "composition"], [23, 4, 1, "", "cos"], [23, 4, 1, "", "cosh"], [23, 4, 1, "", "cot"], [23, 4, 1, "", "coth"], [23, 4, 1, "", "csc"], [23, 4, 1, "", "csch"], [23, 4, 1, "", "e"], [23, 3, 1, "", "function"], [23, 4, 1, "", "half"], [23, 4, 1, "", "sec"], [23, 4, 1, "", "sech"], [23, 4, 1, "", "sin"], [23, 4, 1, "", "sinh"], [23, 4, 1, "", "tan"], [23, 4, 1, "", "tanh"], [23, 4, 1, "", "two"], [23, 4, 1, "", "x"]], "sage.symbolic.expression_conversions.ExpressionTreeWalker": [[23, 3, 1, "", "arithmetic"], [23, 3, 1, "", "composition"], [23, 3, 1, "", "derivative"], [23, 3, 1, "", "pyobject"], [23, 3, 1, "", "relation"], [23, 3, 1, "", "symbol"], [23, 3, 1, "", "tuple"]], "sage.symbolic.expression_conversions.FakeExpression": [[23, 3, 1, "", "operands"], [23, 3, 1, "", "operator"], [23, 3, 1, "", "pyobject"]], "sage.symbolic.expression_conversions.FastCallableConverter": [[23, 3, 1, "", "arithmetic"], [23, 3, 1, "", "composition"], [23, 3, 1, "", "pyobject"], [23, 3, 1, "", "relation"], [23, 3, 1, "", "symbol"], [23, 3, 1, "", "tuple"]], "sage.symbolic.expression_conversions.HalfAngle": [[23, 4, 1, "", "Halves"], [23, 4, 1, "", "HalvesDict"], [23, 4, 1, "", "Integer"], [23, 4, 1, "", "SR"], [23, 3, 1, "", "composition"], [23, 4, 1, "", "cos"], [23, 4, 1, "", "cosh"], [23, 4, 1, "", "cot"], [23, 4, 1, "", "coth"], [23, 4, 1, "", "csc"], [23, 4, 1, "", "csch"], [23, 3, 1, "", "function"], [23, 4, 1, "", "half"], [23, 4, 1, "", "halfx"], [23, 4, 1, "", "one"], [23, 4, 1, "", "sec"], [23, 4, 1, "", "sech"], [23, 4, 1, "", "sin"], [23, 4, 1, "", "sinh"], [23, 4, 1, "", "tan"], [23, 4, 1, "", "tanh"], [23, 4, 1, "", "two"], [23, 4, 1, "", "x"]], "sage.symbolic.expression_conversions.HoldRemover": [[23, 3, 1, "", "composition"]], "sage.symbolic.expression_conversions.InterfaceInit": [[23, 3, 1, "", "arithmetic"], [23, 3, 1, "", "composition"], [23, 3, 1, "", "derivative"], [23, 3, 1, "", "pyobject"], [23, 3, 1, "", "relation"], [23, 3, 1, "", "symbol"], [23, 3, 1, "", "tuple"]], "sage.symbolic.expression_conversions.PolynomialConverter": [[23, 3, 1, "", "arithmetic"], [23, 3, 1, "", "composition"], [23, 3, 1, "", "pyobject"], [23, 3, 1, "", "relation"], [23, 3, 1, "", "symbol"]], "sage.symbolic.expression_conversions.RingConverter": [[23, 3, 1, "", "arithmetic"], [23, 3, 1, "", "composition"], [23, 3, 1, "", "pyobject"], [23, 3, 1, "", "symbol"]], "sage.symbolic.expression_conversions.SubstituteFunction": [[23, 3, 1, "", "composition"], [23, 3, 1, "", "derivative"]], "sage.symbolic.function": [[24, 2, 1, "", "BuiltinFunction"], [24, 2, 1, "", "Function"], [24, 2, 1, "", "GinacFunction"], [24, 2, 1, "", "SymbolicFunction"], [24, 1, 1, "", "pickle_wrapper"], [24, 1, 1, "", "unpickle_wrapper"]], "sage.symbolic.function.Function": [[24, 3, 1, "", "default_variable"], [24, 3, 1, "", "name"], [24, 3, 1, "", "number_of_arguments"], [24, 3, 1, "", "variables"]], "sage.symbolic.function_factory": [[25, 1, 1, "", "function"], [25, 1, 1, "", "function_factory"], [25, 1, 1, "", "unpickle_function"]], "sage.symbolic.integration": [[26, 0, 0, "-", "external"], [27, 0, 0, "-", "integral"]], "sage.symbolic.integration.external": [[26, 1, 1, "", "fricas_integrator"], [26, 1, 1, "", "libgiac_integrator"], [26, 1, 1, "", "maxima_integrator"], [26, 1, 1, "", "mma_free_integrator"], [26, 1, 1, "", "sympy_integrator"]], "sage.symbolic.integration.integral": [[27, 2, 1, "", "DefiniteIntegral"], [27, 2, 1, "", "IndefiniteIntegral"], [27, 1, 1, "", "integral"], [27, 1, 1, "", "integrate"]], "sage.symbolic.maxima_wrapper": [[28, 2, 1, "", "MaximaFunctionElementWrapper"], [28, 2, 1, "", "MaximaWrapper"]], "sage.symbolic.maxima_wrapper.MaximaWrapper": [[28, 3, 1, "", "sage"]], "sage.symbolic.operators": [[29, 2, 1, "", "DerivativeOperator"], [29, 2, 1, "", "FDerivativeOperator"], [29, 1, 1, "", "add_vararg"], [29, 1, 1, "", "mul_vararg"]], "sage.symbolic.operators.DerivativeOperator": [[29, 2, 1, "", "DerivativeOperatorWithParameters"]], "sage.symbolic.operators.FDerivativeOperator": [[29, 3, 1, "", "change_function"], [29, 3, 1, "", "function"], [29, 3, 1, "", "parameter_set"]], "sage.symbolic.random_tests": [[30, 1, 1, "", "assert_strict_weak_order"], [30, 1, 1, "", "choose_from_prob_list"], [30, 1, 1, "", "normalize_prob_list"], [30, 1, 1, "", "random_expr"], [30, 1, 1, "", "random_expr_helper"], [30, 1, 1, "", "random_integer_vector"], [30, 1, 1, "", "test_symbolic_expression_order"]], "sage.symbolic.relation": [[31, 1, 1, "", "solve"], [31, 1, 1, "", "solve_ineq"], [31, 1, 1, "", "solve_ineq_fourier"], [31, 1, 1, "", "solve_ineq_univar"], [31, 1, 1, "", "solve_mod"], [31, 1, 1, "", "string_to_list_of_solutions"], [31, 1, 1, "", "test_relation_maxima"]], "sage.symbolic.ring": [[32, 2, 1, "", "NumpyToSRMorphism"], [32, 2, 1, "", "SymbolicRing"], [32, 2, 1, "", "TemporaryVariables"], [32, 2, 1, "", "UnderscoreSageMorphism"], [32, 1, 1, "", "isidentifier"], [32, 1, 1, "", "the_SymbolicRing"], [32, 1, 1, "", "var"]], "sage.symbolic.ring.SymbolicRing": [[32, 3, 1, "", "I"], [32, 3, 1, "", "characteristic"], [32, 3, 1, "", "cleanup_var"], [32, 3, 1, "", "is_exact"], [32, 3, 1, "", "is_field"], [32, 3, 1, "", "is_finite"], [32, 3, 1, "", "pi"], [32, 3, 1, "", "subring"], [32, 3, 1, "", "symbol"], [32, 4, 1, "", "symbols"], [32, 3, 1, "", "temp_var"], [32, 3, 1, "", "var"], [32, 3, 1, "", "wild"]], "sage.symbolic.subring": [[33, 2, 1, "", "GenericSymbolicSubring"], [33, 2, 1, "", "GenericSymbolicSubringFunctor"], [33, 2, 1, "", "SymbolicConstantsSubring"], [33, 2, 1, "", "SymbolicSubringAcceptingVars"], [33, 2, 1, "", "SymbolicSubringAcceptingVarsFunctor"], [33, 2, 1, "", "SymbolicSubringFactory"], [33, 2, 1, "", "SymbolicSubringRejectingVars"], [33, 2, 1, "", "SymbolicSubringRejectingVarsFunctor"]], "sage.symbolic.subring.GenericSymbolicSubring": [[33, 3, 1, "", "has_valid_variable"]], "sage.symbolic.subring.GenericSymbolicSubringFunctor": [[33, 4, 1, "", "coercion_reversed"], [33, 3, 1, "", "merge"], [33, 4, 1, "", "rank"]], "sage.symbolic.subring.SymbolicConstantsSubring": [[33, 3, 1, "", "has_valid_variable"]], "sage.symbolic.subring.SymbolicSubringAcceptingVars": [[33, 3, 1, "", "construction"], [33, 3, 1, "", "has_valid_variable"]], "sage.symbolic.subring.SymbolicSubringAcceptingVarsFunctor": [[33, 3, 1, "", "merge"]], "sage.symbolic.subring.SymbolicSubringFactory": [[33, 3, 1, "", "create_key_and_extra_args"], [33, 3, 1, "", "create_object"]], "sage.symbolic.subring.SymbolicSubringRejectingVars": [[33, 3, 1, "", "construction"], [33, 3, 1, "", "has_valid_variable"]], "sage.symbolic.subring.SymbolicSubringRejectingVarsFunctor": [[33, 3, 1, "", "merge"]], "sage.symbolic.units": [[34, 2, 1, "", "UnitExpression"], [34, 2, 1, "", "Units"], [34, 1, 1, "", "base_units"], [34, 1, 1, "", "convert"], [34, 1, 1, "", "convert_temperature"], [34, 1, 1, "", "evalunitdict"], [34, 1, 1, "", "is_unit"], [34, 1, 1, "", "str_to_unit"], [34, 1, 1, "", "unit_derivations_expr"], [34, 1, 1, "", "unitdocs"], [34, 1, 1, "", "vars_in_str"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "terms": {"": [0, 1, 2, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34], "0": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34], "00": [2, 15, 31], "000": [10, 31], "00000000": 22, "000000000000": 1, "0000000000000": [1, 13], "00000000000000": [1, 13, 22, 23, 25, 31], "000000000000000": [2, 13, 22], "0000000000000000000": 22, "0000000000000000000000": 22, "0000000000000000000000000": 22, "00000000000000000000000000": 22, "00000000000000000000000000000": 1, "0000000000000000000000000000000000000000000000000000000000": [1, 22], "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": 2, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": 2, "00000000000000621724893790087": 13, "00000000000000976996261670137": 13, "00000000000000e8": 22, "0000000000000106581410364015": 13, "0000000000000159872115546022": 13, "0000000000000485744257349999": 13, "00001": 22, "0001": 10, "0004110514049349": 22, "000411051404934985": 22, "001": 10, "0012158": 10, "001540327067911417": 22, "0016": 10, "002": 22, "00330022368532410": 22, "003300223685324103": 22, "004": 22, "0062766802998": 22, "006276680299816": 22, "006276680299820175": 22, "0078": 2, "01": [2, 6, 9, 30, 31], "015": 2, "02": 6, "020": 2, "03": [5, 15], "031": 2, "0415798869439621": 17, "04296875": 7, "043": 2, "0470303661": 8, "0471975511965976": 22, "047197551196598": 22, "0497765406583": 8, "05": [2, 10, 22, 30], "052643677492633e": 6, "054": 2, "05558355": 10, "05623145800914245": 27, "0588115223184": 22, "05881152231844": 22, "058811522318449": 22, "05881152231844944": 22, "06": [1, 2, 6, 10], "062": 2, "0628722350809046": 1, "06961575467": 1, "0696157546720": 1, "06j": 10, "07": [1, 6, 14, 22, 31], "0702939": [8, 10], "071": 2, "079": 2, "08": [6, 22], "080083823051": 22, "080083823051904": 22, "085536923187668": 22, "0855369231877": [22, 23], "08650622": 10, "0874707456138": 7, "0879": 10, "08875068305030848": 6, "09": [13, 14], "09745444625553161": 6, "0e": 6, "0j": [8, 22], "0r": 22, "0x": 23, "1": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34], "10": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 22, 30, 31, 34], "100": [1, 2, 6, 9, 10, 13, 14, 17, 19, 22, 30], "1000": [1, 2, 6, 9, 10, 22, 30, 34], "10000": [6, 22, 30], "100000": [19, 34], "100000000": [22, 34], "1000j": 10, "1007760": 17, "10169": 22, "1024": 1, "103": [13, 14], "105": [13, 14], "10682": 17, "10806674191683492": 6, "10j": 10, "11": [1, 2, 4, 6, 9, 11, 13, 14, 15, 17, 19, 22, 30, 31, 33], "110": 22, "1101527003413533e": 4, "1102230246251565e": 4, "11022302462516e": 13, "1140": 17, "11445932736758703821": 31, "115": 22, "11520000": 22, "12": [1, 2, 4, 5, 6, 9, 13, 17, 19, 22, 31], "120": [4, 11, 22], "1200": 22, "12047": 6, "121": 4, "1212997593570257": 6, "123": [4, 17, 31], "12419127424558": 2, "125": [7, 15, 22, 31], "1250": [22, 34], "125970": 17, "127": [1, 17, 34], "12762596520638": 1, "1276259652063807852262251614": 1, "1276259652063807852262251614026720125478471180986674836290": 1, "12796": 1, "128": [1, 14, 15, 22], "1290320000000": [22, 34], "12915279": 31, "12967": 22, "13": [1, 2, 13, 17, 19, 22, 31], "13440": 11, "135": 31, "13519": 7, "13530": 7, "136": 31, "1368683772": 17, "137514": 10, "138": 22, "138275456763492": 6, "1383782400": 19, "14": [1, 2, 4, 6, 12, 13, 17, 22, 31], "1415926535": [17, 22], "141592653589793": [11, 22, 23], "1415926535897932384626": 22, "1415926535897932384626433832795028841971693993751058209749": 11, "141592653589794": 23, "1415926824043994": 22, "142857": 17, "144": [22, 31], "145037737730209": [22, 34], "147": 17, "15": [1, 2, 6, 10, 13, 16, 17, 19, 22, 31], "150": [17, 22], "150000000000": [22, 34], "151095006434": 8, "1511640": 17, "15120": 22, "1520363883": 8, "15323490199844318074242473679071410934833494247466385771803570370858961112774390851798166656796902695599442662754502211584226105508648298600018090510170430216881977761279503642801008178271982531042720727178135881702924595044672634313417239327304576652633321095875724771887486594852083526001648217317718794685379391946143663292907934545842931411982264788766619812559999515408813796287448784343854980686798782575952258163992236113752353237705088451481168691158059505161807961082162315225057299394348203539002582692884735745377391416638540520323363224931163680324690025802009761307137504963304640835891588925883135078996398616361571065941964628043214890356454145039464055430143": 19, "15377": 22, "15494982830181067": 22, "15494982830181068512495513048388660520": 22, "15504": 17, "15572734979092": 22, "1557273497909217": 22, "1557273497909217179100931833": 22, "156280": 10, "158080329": 34, "159265358979": 2, "15927948072741": 22, "15a": 3, "16": [1, 2, 4, 10, 12, 13, 15, 17, 22, 27, 31], "1608752771983211": 6, "160959987592246947739944859375773744043416001841910423046466880402863187009126824419781711398533250016237703449459397319370100476216445123130147322940019839927628599479294678599689928643570237983736966305423831947366332466878486992676823215303312139985015592974537721140932243906832125049776934072927576666849331956351862828567668505777388133331284248870175178634054430823171923639987569211668426477739974572402853248951261366399284257908177157179099041115431335587887276292978004143353025122721401971549897673882099546646236790739903146970578001092018346524464799146331225822142880459202800229013082033028722077703362360159827236163041299500992177627657014103138377287073792": 19, "162": 22, "1623008526180": 7, "163": [1, 17], "1653244": 10, "1667": 17, "167960": 17, "169": 22, "16y": 1, "17": [1, 2, 4, 17, 18, 22], "1720320": 19, "17301243": 10, "17520119364380": [1, 22], "1752011936438014568823818505956008151557179813340958702296": 1, "1752011936438014568823818506": 1, "1752011936438014568823819": 22, "175201193643802": 22, "17805383034795": 22, "1793740787340171819619895873183164984596816017589156131574": 22, "18": [1, 2, 17, 19, 22], "180": [1, 17, 34], "1800": [14, 22], "180936": 10, "1817104238446596": 6, "18396": 22, "184756": 17, "1847560": 17, "19": [2, 10, 17, 19, 22, 31], "190": 17, "19253082576711372": 6, "19380": 17, "1953125": 34, "195868299334218": 30, "196516041067": 7, "1994": 17, "1e": [1, 2, 6, 9, 15, 17, 22, 31], "1e8": 22, "1j": [8, 10, 22], "1st": 2, "2": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34], "20": [1, 2, 4, 9, 10, 13, 14, 17, 22, 23, 30, 31, 34], "200": [1, 6, 10, 11, 19, 22, 30], "2000": 9, "2004": 9, "2006": [1, 2, 9, 13, 14, 15], "2007": [1, 2, 4, 6, 22, 31], "2008": [1, 2, 5, 6], "2009": [1, 2, 8, 10, 22], "2010": [1, 2, 9, 31], "2011": [6, 10, 14, 15], "2012": [10, 22], "2013": 15, "2014": 2, "2015": 33, "2017": 22, "202": [13, 14], "204": [13, 14], "2048": 14, "206": [13, 14], "207855083711803945": 22, "208": [13, 14], "209335488557": 22, "2099798628571": 7, "21": [1, 2, 6, 10, 13, 19, 22], "210": 11, "22": [1, 10, 17], "22005": 1, "223": 4, "22474487136329": 2, "22474487139159": 2, "225417136326": 8, "2275357305882964": 30, "22826": 22, "23": [1, 2, 6, 17, 31], "231": 1, "232560": 17, "2378": 22, "239": 22, "24": [1, 4, 11, 15, 17, 19, 22, 26], "240": 11, "2400": 22, "24030098317248832": 6, "241": [10, 11], "2421619200": 19, "247397641513306": 17, "25": [1, 2, 3, 4, 7, 8, 10, 22, 30, 34], "250": 15, "250000000000000": 30, "252": 11, "2520": 17, "25401600": 1, "256": [15, 22], "26": [2, 17], "2602": 22, "262537412640768744": 1, "26760455264": 8, "27": [2, 10, 19, 22, 31, 34], "270": 1, "273": 34, "27323954": 8, "27323954473": 8, "2740880444219335226246195788": 22, "277": 11, "27942259892257": 22, "27958": [4, 12], "28": [2, 29], "280": 31, "2835": 17, "28489": 22, "288": 1, "288370845983": 22, "288371361890": 22, "288371395590": 22, "289": 22, "29": [2, 10, 17, 31], "2905943040": 19, "292": 17, "293": [22, 34], "299792458": 34, "2d": 22, "2e": 22, "2good": 32, "2nd": [2, 9, 22], "2r": 25, "2x2": 17, "3": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 34], "30": [4, 17, 22, 34], "300": [1, 22], "3000000000000": 22, "301": [13, 14], "30375717982404615": 30, "303961332787": 8, "30414093201713378043612608166064768844377641568960512000000000000": 17, "305": [13, 14], "307": [13, 14], "307507200": 19, "309": [13, 14], "3090169943749475": 31, "31": [6, 17, 22, 30], "3125": 1, "314": 2, "32": [4, 10, 12, 15, 19, 22, 34], "3217505543966422": 6, "321819": 10, "32185": 22, "3275": 12, "3276": 31, "32768": 19, "32898": 1, "32907051820075": 1, "33": [1, 2, 22, 31], "331099917875": 22, "331099917875796": 22, "3333333333": 22, "333333333333333": 6, "3333333333333333": 6, "33546240": 19, "3363": 22, "34": [2, 19, 26], "341": 31, "3420": 17, "347": 22, "34716728183": 8, "35": [17, 22], "352": 1, "3520": 22, "35505": 22, "35859061674557324": 30, "36": [1, 15, 22], "36050567903502": 22, "360505679035020": 22, "361": 22, "3614702": 10, "362880": 22, "3628800": 11, "3630": [22, 34], "363380227632": 8, "37": [17, 34], "3715891200": 22, "375": [2, 7], "37800": 17, "38": 2, "380": 17, "3803": 17, "381": [22, 34], "38554067263241296179": 31, "387268288079781e": 6, "387420489": 1, "387420490": 1, "38760": 17, "38761": 1, "38905609893065": 22, "39": [1, 2, 12, 22, 31], "3d": 22, "3j": 10, "3x3": 17, "4": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 27, 29, 30, 31, 32], "40": [1, 15, 17], "400": [10, 19], "40320": 11, "405757": 10, "40578892327": 8, "406880": 10, "408": 22, "41": [2, 6, 7, 17, 22, 31], "413159102577": 17, "4138": 1, "416": 22, "4161468365471424": 23, "4181554491413217": 22, "418155449141322": 22, "42": [1, 22, 31], "422784335098467": 22, "4250840220": 22, "4256184695": 22, "4257507903": 22, "4295192165889879e": 6, "43": [1, 10, 17], "43203735824841025516773866131535024": 22, "4436354751788": 22, "45": [4, 10, 11, 19], "450": 22, "45359237": [22, 34], "4538602480526452429": 31, "45461397519473547571": 31, "46": [1, 2], "46080": 22, "46159016228882": 2, "463647609000806": 22, "467775": 17, "47": 17, "477294259479": 22, "48": [1, 15, 17, 22], "480": 1, "48044583": 10, "4845": 17, "4861": 17, "486319": 10, "48e": 22, "4913": 22, "493": 34, "4942": 22, "49801566811835604271369111746219809195": 22, "49801566811835607": 22, "49927402801814311120646143662663009137292462589621789352095066181709095575681963967103004e": 1, "4992740280181431112064614366622348652078895136533593355718e": 1, "4x4": 17, "4y": 22, "5": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 27, 29, 30, 31, 34], "50": [1, 2, 3, 11, 17, 19, 22, 30, 34], "500": [10, 22, 31], "50000000000000": [11, 13, 24], "500000000000000": [11, 22], "5000000000000000": [6, 23], "5040": 22, "50479221787318": 6, "50521": 11, "507575757575": 7, "51": [6, 9, 22], "51880872209965": 22, "518808722099650": 22, "518918400": 19, "52047692949": 8, "522416551837318": 22, "52241655183732": 22, "52607123962616": 22, "52779177": 10, "528482232253147": 1, "5284822353142306": 1, "5293344109": 22, "53": [17, 22, 23], "5379": 9, "54": 22, "5400000000000": 34, "54030230586813971740093660744297660373231042": 22, "540302305868140": 22, "542640": 17, "54308063481524": 22, "5430806348152437784779056": 22, "543080634815244": 22, "54538602480526452429": 31, "5470393": 10, "5493061443340548": 22, "549306144334055": 22, "55": [1, 31], "5511151231257827e": 4, "5543672548552057": 30, "5574077246549022305069748074583601730872508": 22, "5584": 12, "56": [10, 15], "561090323458081": 22, "5610963381910451": 22, "5657285005610514829173563961304957417746108003917": 1, "5657285005610514829176211363206621657": 1, "567": 12, "56887091890590e": 2, "57": [1, 2, 22], "576": 1, "576000": 22, "5760623099": 34, "577": 22, "577215664901533": 22, "5787519424517955388380414460095588661142400534276438649791334295426354746147526415973165506704676": 2, "5787519424517955388380414460095588661142400534276438649791334295426354746147526415973165506704676171": 2, "5787519424517955388380414460095588661142400534276438649791334295426354746147526415973165506778440": 2, "5811388300841898": 17, "586522107161747275678702092126960705284805489972439358895215783190198756258880854355851082660142374": 2, "5865221071617472756787020921269607052848054899724393588952157831901987562588808543558510826601424": 2, "5877852522924731": 31, "588532743981862": 22, "5981500331442": 22, "598150033144236": 22, "5e": 22, "5r": 25, "6": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22, 23, 25, 26, 27, 29, 30, 31], "60": [4, 15, 22], "6000000000000": 34, "60431942934407": 6, "60480": 29, "604800": 22, "61": [6, 11], "61445932736758703821": 31, "618033988749895": 22, "6187684827485": 7, "62": 2, "6249954068750": 34, "6253741264076874399999999999925007259719820e17": 17, "627660": 10, "629": 1, "63": 2, "6328345202421523": 31, "634954084936208": 31, "64": [1, 15], "644934066848226": 22, "6449340668482264364724151666460251892189499012068": 22, "6467837624329358733826155674904591885104869874232887508703": 1, "646783762432936": 1, "6487212707001282": 22, "64872127070013": 22, "65": [10, 15, 22], "650923199301856": 22, "660538782": 34, "6767": 22, "68": [2, 22, 31, 34], "693147180559945": 22, "6931471805599453": 22, "7": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 19, 22, 27, 29, 31], "70": 22, "700743415417188e": 6, "7160": 31, "718281828459045": 22, "7182818284590452353602874713526624977572470936999595749670": 22, "7182818284590452353602874714": 22, "7182818284590452354": 22, "71828182845905": 22, "7185272465828846": 1, "72": 17, "720": [4, 11, 22], "720000": 22, "721353471724806": 1, "729": 22, "73205080756885": 13, "73205080756888": 13, "73324": 10, "73452": 8, "737280": 22, "7450070621797239": 1, "75": [2, 7, 10], "7604559947718565": 30, "76136363636": 7, "7615941559557649": 22, "761594155955765": 22, "762": [22, 34], "7636106821342005250144010543616538641008648540923684535378642921202827747268115852940239346315658": 2, "7636106821342005250144010543616538641008648540923684535378642921202827747268115852940239346395038": 2, "7636106821342005250144010543616538641008648540923684535378642921202827747268115852940239346395038284": 2, "7691": 17, "77": [2, 31], "7724538509060035": 6, "77351965": 10, "77520": 17, "7752256945384": 22, "7776": 1, "79": 31, "7983360": 22, "8": [1, 2, 4, 6, 7, 9, 10, 11, 12, 13, 15, 17, 22, 25, 26, 27, 29, 30, 31, 34], "80": [4, 17, 22], "800000000000000": 2, "800000000028622": 2, "8056": 23, "8064": 11, "8090169943749475": 31, "81": 2, "81759643554688": 6, "8258002386106038": 30, "82842712474999": 13, "83": 2, "83795706233228": 34, "83928460": 1, "84147098480789650665250232163029899962256306": 22, "8419115504372718": 30, "8429811298996553e": 6, "8488570602160455": 6, "857926501456": 22, "859140914229522": 4, "85987448204883": 11, "85987448204884": 23, "8603335890": 22, "8610183": 31, "8651": 11, "866": 31, "87": 6, "87005772672831": 12, "87243664726243": 22, "875": 7, "876696": 10, "87813065119873": 23, "87pt": 6, "88": 2, "881366116402": 8, "881373587019543": 22, "881784197001252e": 22, "88554067263241296179": 31, "88817841970012523233890533447265625": 11, "8896443230521": [22, 34], "89": 30, "890838090262283": 22, "89392588310": 8, "9": [1, 2, 7, 9, 12, 13, 15, 17, 19, 22, 25, 27, 29, 30, 31], "90": [1, 22], "900": 22, "900000000000000": 30, "90019052": 10, "904257108962112": 2, "907": 10, "909297426825682": 23, "90932794536153": 2, "91": 1, "91973525754241e": 2, "9217": 1, "924": 2, "934561222231": 8, "9388939039072284e": 4, "9393": 32, "93930000000000": 32, "94": 2, "9407509502498164": 30, "9424": 22, "95": 10, "9510565162951535": 31, "95461397519473547571": 31, "9549296": 8, "958924274663138": 22, "95892427466313846889315440615599397335246154396460": 22, "95892427466313846889315440616": 22, "960": 1, "9600": 22, "96804683": 10, "9709": 10, "9713408427702117": 30, "974852579915647": 22, "98": 34, "9880": 30, "989694": 10, "9899924966": 22, "989992496600": 22, "98999249660044545727157279473126130239367909661558832881409": 22, "99": [10, 22], "997": 17, "999": [12, 22], "9990999791895": 22, "99983": 17, "99993665751633376": 4, "99999999999957279": 6, "99999999999997": 13, "99999999999999": 13, "9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999636628": 2, "A": [1, 2, 3, 4, 6, 8, 10, 12, 13, 15, 16, 18, 20, 22, 23, 26, 27, 29, 30, 31, 32, 33, 34], "And": [1, 9, 11, 15, 17, 22], "As": [9, 10, 18, 22], "At": 31, "But": [17, 22, 27, 31], "By": [1, 9, 16, 22, 30, 31], "For": [1, 2, 4, 5, 6, 9, 10, 13, 14, 22, 23, 25, 29, 30, 31, 32, 34], "If": [1, 2, 3, 4, 5, 6, 7, 9, 10, 13, 15, 16, 18, 20, 21, 22, 23, 24, 27, 30, 31, 32, 33, 34], "In": [1, 2, 4, 6, 9, 10, 11, 13, 16, 18, 20, 22, 24, 30, 31], "It": [1, 6, 9, 10, 18, 22, 24, 25, 30, 31, 34], "Its": [1, 2], "NO": 17, "NOT": [17, 27], "No": [1, 8, 10, 12, 22], "Not": [1, 17, 22, 31, 33], "Of": 1, "One": [1, 2, 6, 23], "Or": [5, 17, 22, 27], "Such": [18, 22], "That": [10, 30], "The": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 27, 29, 30, 33, 34], "Their": 22, "Then": [1, 16, 22, 30, 31], "There": [1, 5, 6, 9, 18, 24, 31], "These": [2, 17, 22, 23], "To": [1, 2, 6, 9, 10, 16, 17, 22, 23, 24, 27, 30, 34], "Will": 10, "With": [1, 22], "_": [17, 19, 22, 23, 27, 30, 31, 32], "__call__": 24, "__doc__": 34, "__eq__": 13, "__float__": 22, "__index__": 22, "__init__": [22, 24], "__iter__": 13, "__mul__": 13, "__reduce__": 25, "__str__": 13, "__tmp__": [1, 2, 4, 6, 10, 12, 16, 18, 19, 20, 22, 23, 26, 27, 31], "_c": 2, "_c0": 2, "_c1": 2, "_c2": 2, "_complex_double_": 22, "_complex_mpfr_field_": 22, "_conjugate_": 24, "_deriv": 22, "_derivative_": 24, "_do_sqrt": 22, "_eval_": [22, 24], "_eval_numpy_": 24, "_evalf_": 24, "_factor_list": 22, "_fast_callable_": 23, "_first_ngen": [1, 3, 4, 11, 17, 22, 23], "_force_pyobject": [22, 23], "_gobj": 22, "_imag_part_": 24, "_inverse_laplace_latex": 1, "_is_regist": 24, "_k1": 2, "_k2": 2, "_laplace_latex": 1, "_latex_": 16, "_limit_latex": 1, "_maple_init_": 31, "_mathematica_init_": 25, "_maxima_": 31, "_maxima_init_": 31, "_mpfr_": 22, "_n": 31, "_power_": 24, "_real_double_": 22, "_real_part_": 24, "_register_funct": 24, "_repr_": 13, "_sage_": [11, 18, 32], "_sage_var__symbol0": 23, "_sage_var_i": 23, "_sage_var_x": [23, 31], "_series_": 24, "_swap_harmon": 30, "_sympy_": 11, "_tderivative_": 24, "a0": 17, "a1": [17, 18, 30], "a2": [17, 18, 30], "a3": [17, 18], "a4": [17, 18], "a5": 17, "a_dydt": 9, "a_i": 13, "a_n": 13, "ab": [1, 2, 4, 6, 10, 13, 15, 16, 17, 18, 22, 27, 30, 31, 32], "abad": 2, "abbr2011": 2, "abbr2012": 2, "abbrevi": 34, "abc": 11, "abelian": 13, "abelian_group_du": 13, "abeliangroup": 13, "abil": 31, "abl": [4, 17, 18, 22], "about": [0, 1, 10, 18, 22, 23, 30, 32, 34], "abov": [1, 4, 9, 13, 17, 18, 22, 27, 31], "absolut": [1, 2, 6, 10, 15, 22, 27], "absolute_minpoli": 1, "absolute_valu": 10, "abstract": [1, 24, 33], "acceler": [22, 34], "accept": [1, 16, 18, 22, 23, 25, 32, 33], "accept_sequ": 1, "accepting_vari": [32, 33], "access": [0, 2, 22], "accomplish": 22, "accord": [2, 20, 22, 30], "accordingli": 10, "account": 22, "accumul": 10, "accur": [6, 10, 13], "accuraci": [10, 22], "achiev": [1, 22], "ackerman": 34, "acm": 2, "aco": 19, "acosh": 22, "acr": [22, 34], "act": [23, 29, 34], "actual": [9, 11, 22, 30, 31], "ad": [7, 10, 18, 22, 31], "adam": 2, "adapt": [6, 10], "add": [6, 10, 11, 18, 22, 23, 29, 30, 31], "add_to_both_sid": 22, "add_vararg": [22, 23, 29], "addit": [1, 4, 6, 7, 9, 10, 18, 22, 24, 27, 34], "addition": 22, "adjust": 30, "advanc": [2, 22], "advis": 6, "affect": 18, "after": [1, 9, 12, 16, 18, 21, 22, 24, 32], "afterward": 23, "again": [22, 24, 31], "agreement": 22, "ahlfor": 10, "airy_ai": 30, "airy_ai_prim": 30, "airy_bi": 30, "airy_bi_prim": 30, "alg": 22, "algdep": 1, "algebra": [1, 16, 17, 22, 31], "algo": 6, "algorithm": [1, 2, 4, 6, 9, 10, 12, 15, 16, 22, 23, 25, 27, 31], "alia": [1, 4, 7, 22, 23, 27], "alias": 27, "align": [2, 14], "all": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "all_expr": 30, "allow": [1, 2, 4, 9, 13, 18, 22, 23, 24, 32], "allow_numeric_result": 22, "along": [2, 4, 22], "alonso": 15, "alphabet": [20, 22, 31], "alreadi": [22, 24, 34], "also": [1, 2, 4, 6, 9, 10, 12, 15, 16, 17, 18, 22, 23, 24, 27, 28, 30, 31, 32, 34], "alt_nam": 24, "altern": [17, 22, 27], "although": [12, 22, 31], "alwai": [4, 6, 17, 22, 27, 30, 31], "amaz": 22, "ambigu": 1, "among": 22, "amper": [22, 34], "amu": 34, "an": [1, 2, 3, 6, 7, 9, 10, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34], "an_el": 32, "an_opt": 1, "analyt": [10, 18, 22], "analytic_boundari": 10, "analytic_interior": 10, "andel": [8, 10], "angl": [10, 22, 34], "ani": [2, 6, 16, 17, 18, 22, 24, 30, 31, 32], "anoth": [1, 2, 16, 18, 20, 22, 23, 25, 27, 31, 34], "answer": [1, 2, 6, 10, 18, 22, 27, 31, 34], "antideriv": 12, "antisymmetr": 18, "anyth": [22, 30], "anywai": 2, "anywher": 31, "appar": 12, "appear": [1, 18, 20, 22, 23, 31], "append": [7, 19, 30], "appli": [1, 10, 22, 24, 27, 30, 31], "applic": [2, 10, 13, 23], "apply_to": 22, "approach": [1, 4, 22], "appropri": 22, "approx": 1, "approxim": [1, 2, 6, 8, 22, 23, 30, 31, 32], "ar": [1, 2, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34], "arbitrari": [1, 2, 22, 23, 30, 31, 32], "arc": [4, 22], "arcco": [19, 22, 30], "arccosh": [22, 30], "arccot": 30, "arccoth": 30, "arccsc": 30, "arccsch": 30, "arch": 13, "archenemi": 22, "architectur": [11, 13], "archosaurian": 22, "archsaur": 22, "arcsec": 30, "arcsech": 30, "arcsin": [22, 30], "arcsinh": [1, 17, 22, 30], "arctan": [2, 4, 12, 17, 22, 27, 30, 31, 32], "arctan2": [22, 23, 30], "arctanh": [22, 30], "area": [4, 7, 22, 34], "aren": 1, "arg": [1, 2, 4, 5, 10, 14, 15, 16, 18, 20, 22, 23, 24, 25, 30, 31, 32], "argument": [1, 2, 3, 5, 6, 9, 12, 15, 16, 18, 20, 21, 22, 23, 24, 25, 27, 29, 30, 32, 33], "argv": 4, "aris": 22, "arithmet": [1, 4, 16, 20, 22, 23, 25], "arm": 22, "around": [4, 5, 22, 24, 28, 30], "arrai": [2, 6, 8, 10, 14, 15], "articl": [5, 30], "ascend": 22, "ascii_art": 22, "asinh": 22, "ask": [1, 22, 31, 34], "asqr": 17, "assert_strict_weak_ord": 30, "assign": [1, 9, 16, 18, 22], "associ": [22, 24, 29], "assum": [1, 4, 10, 12, 13, 17, 18, 22, 24, 27, 31], "assumpt": [0, 1, 4, 17, 22, 27, 32], "assur": 22, "asymmetri": 30, "asymptot": 22, "atan": [22, 23, 32], "atan2": [22, 23, 24], "atanh": 22, "atol": 2, "atom": 34, "attain": 22, "attempt": [1, 2, 22, 24, 27], "attent": 2, "attribut": [9, 22], "attributeerror": [18, 22], "augment": 1, "author": [1, 2, 5, 6, 8, 9, 10, 13, 14, 15, 20, 22, 31, 33, 34], "automat": [1, 9, 13, 15, 16, 22, 23, 25, 27, 31, 32], "autonom": 2, "auxiliari": 1, "avail": [1, 9, 32], "avoid": 22, "awai": [10, 22], "award": [8, 10], "ax": 10, "axes_label": 9, "axiom": 30, "b": [1, 2, 3, 4, 6, 7, 10, 12, 13, 14, 15, 16, 17, 20, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33], "b1": 30, "b2": 30, "b3": 30, "b_": 13, "b_n": 13, "back": [16, 17, 22, 27, 28], "backend": [1, 17, 22], "background": 1, "backward": [2, 13, 15, 22], "backward_transform": [14, 15], "bad": 1, "balanc": 30, "band": 14, "bar": [1, 13, 16, 22, 23, 25, 29], "barrio": 2, "base": [4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 27, 28, 29, 31, 32, 33, 34], "base_r": [3, 13, 15, 22, 23], "base_unit": 34, "basi": [17, 24, 31], "basic": [1, 10, 12, 16, 18, 22, 23, 25, 31], "battl": 1, "bdf": 2, "becaus": [1, 9, 19, 22, 24, 30, 31, 32], "becom": 22, "been": [1, 2, 12, 22], "befor": [1, 4, 16, 18, 22, 23, 24, 25, 27, 30], "begin": [2, 12], "behav": [22, 24], "behavior": [1, 10, 18, 22], "behaviour": 17, "behind": [1, 22, 31], "being": [1, 18, 31], "belong": 16, "below": [1, 2, 4, 9, 10, 19, 22, 24, 31, 32], "benchmark": 0, "bernoulli": 2, "bessel": [2, 17], "bessel_i": [2, 30], "bessel_j": [2, 17, 30], "bessel_k": 30, "best": 22, "beta": [2, 30], "better": [1, 6, 10, 16, 22, 23], "between": [1, 2, 4, 7, 8, 9, 10, 13, 20, 22, 30, 31, 34], "bewar": 22, "bi": 22, "big": [10, 12, 22, 31], "bigger": 31, "binari": 30, "binom": 22, "binomi": [1, 18, 22, 30], "biorthogon": [13, 14], "bit": [1, 22, 23], "blanklin": 10, "blesa": 2, "block": [9, 18], "blowup": 19, "blue": 10, "bobbi": [1, 20, 31], "book": 12, "bool": [1, 4, 17, 18, 19, 22, 23, 29, 31, 32], "boolean": [1, 2, 10, 16, 18, 22, 23, 25, 31, 32, 33, 34], "both": [1, 10, 16, 17, 18, 22, 23, 24, 27], "bound": [1, 2, 6, 7, 15, 30], "boundari": [2, 10], "bradshaw": [1, 2, 6, 10, 31], "brahmagupta": 22, "branch": [18, 22], "break": [10, 22], "brent": 22, "broken": 34, "brought": 22, "bsimp": 9, "bspline": [13, 14], "bspline_cent": [13, 14], "bsv2010": 10, "bug": [1, 4, 12, 13, 22, 30, 31], "bugfix": 2, "build": 34, "built": [1, 16, 22, 23, 30, 31], "builtin": 24, "builtinfunct": [22, 24, 27], "burlisch": 9, "bvp": 2, "bykov": 2, "byte": 24, "c": [1, 2, 6, 8, 9, 10, 12, 13, 17, 18, 22, 23, 24, 30, 31, 32, 33], "c1": 31, "c2": [13, 31], "c3": 13, "c_f": 9, "c_j": [9, 13], "ca": [17, 24], "cach": 22, "calcul": [1, 4, 18, 22, 27], "calculu": [1, 2, 3, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 22, 31], "call": [1, 2, 4, 5, 6, 7, 12, 13, 15, 16, 17, 18, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34], "call_registered_funct": 22, "callabl": [0, 1, 3, 4, 6, 16, 22, 23], "callablesymbolicexpress": [1, 20], "callablesymbolicexpressionfunctor": 20, "callablesymbolicexpressionr": 20, "callablesymbolicexpressionring_class": 20, "callablesymbolicexpressionringfactori": 20, "came": 22, "can": [0, 1, 2, 4, 5, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 22, 23, 24, 27, 30, 31, 32, 33, 34], "cancel": 22, "candid": 1, "cannot": [1, 2, 4, 6, 10, 12, 18, 22, 23, 31, 34], "canon": 22, "canonicalize_rad": [17, 22], "capabl": [17, 22, 31], "card": [22, 32], "cardin": 19, "care": [2, 23], "carefulli": 2, "carlo": 6, "case": [1, 2, 4, 10, 13, 15, 17, 18, 20, 22, 27, 30, 31], "case1": 31, "case2": 31, "cast": 22, "castejon": 2, "catalan": 30, "categori": 33, "catrom": 10, "cauchy_kernel": 10, "caught": 22, "caus": [7, 10, 22], "cbf": 24, "cc": [1, 13, 22], "ccspline": 8, "cdef": [9, 22], "cdf": [1, 10, 15, 22, 30], "cdot": [13, 22], "ceci_n_est_pas_une_pip": 32, "ceil": [12, 23, 30], "celsiu": [22, 34], "center": [10, 14], "centimet": 34, "certain": [18, 20, 22, 31], "certif": 22, "cform": 17, "cg": 34, "chain": [16, 18, 22, 23, 24, 25], "chang": [6, 7, 9, 10, 14, 22, 31], "change_funct": 29, "chapter": 6, "charact": [11, 13, 21], "characterist": 32, "charg": [22, 34], "charpenti": 22, "chart": 4, "chebyshev_t": 30, "chebyshev_u": 30, "check": [1, 6, 12, 15, 16, 18, 20, 22, 23, 30], "checker": 17, "checksign": 22, "cheval_vapeur": 34, "chi": [13, 17], "chines": 31, "choic": [1, 6, 13, 14, 17, 22, 31], "choos": [17, 22, 32], "choose_from_prob_list": 30, "chosen": [1, 19, 22], "christoffel": 12, "ci": 2, "cif": 22, "cimport": 9, "circ": 23, "circdict": 23, "circl": [8, 10], "circular": [10, 22, 23], "circumst": 10, "clairau": 2, "clairaut": 2, "clash": 32, "class": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 25, 27, 28, 29, 30, 32, 34], "classic": 9, "clean": [10, 32], "cleanli": 22, "cleanup": 2, "cleanup_var": 32, "clear": [16, 18, 22, 31], "clear_var": 16, "cli": 24, "click": 2, "clockwis": 10, "close": [1, 2, 10, 22, 27], "clr": 13, "cmath": 8, "cmd": 22, "cmp_func": 30, "cmp_m": 30, "co": [1, 2, 4, 5, 6, 7, 9, 11, 12, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 29, 30, 31, 34], "coat": 1, "code": [1, 9, 16, 22, 23, 24], "coeff": 22, "coeff_gener": 30, "coeffici": [4, 14, 16, 22, 23, 25, 30], "coerc": [1, 22, 23], "coercibl": [13, 22], "coercion": [1, 6, 20, 22], "coercion_revers": 33, "collect": [13, 22, 32, 34], "collect_common_factor": 22, "colloc": 10, "color": [9, 10, 15, 16], "column": 2, "com": [11, 22, 27], "combin": [17, 18, 20, 22, 31], "combinat": 13, "combinatori": 22, "come": [17, 22, 27], "comma": 16, "command": [1, 2, 4, 18, 22, 24, 27, 31], "commerci": 17, "common": [0, 2, 13, 22], "commonli": 2, "commut": [18, 20], "compact": [22, 27], "compar": [17, 20, 30], "comparison": [10, 18, 22, 30, 31], "compat": 22, "compil": 9, "compiled_integrand": 6, "complet": [1, 13, 28, 31], "complex": [0, 1, 10, 12, 16, 17, 18, 22, 23, 25, 31, 32], "complex128": 10, "complex_cubic_splin": [8, 10], "complex_plot": 10, "complex_root_of": [22, 30, 31], "complex_to_rgb": 10, "complex_to_spiderweb": 10, "complexfield": [1, 22], "complexity_measur": [21, 22], "complexnumb": [8, 10], "complic": [1, 10, 22], "compon": [6, 9, 22], "compos": [9, 23], "composit": 23, "compositum": 1, "comprehens": 32, "compress": 14, "comput": [0, 2, 4, 5, 7, 9, 10, 12, 13, 15, 16, 17, 18, 22, 23, 24, 25, 27], "computation": 10, "compute_jac": 2, "compute_on_grid": 10, "concentr": 10, "cond": 1, "condit": [1, 2, 9, 18, 22, 31], "confluent": 22, "conform": 10, "confus": 22, "conjug": [16, 17, 22, 23, 24, 25, 30, 32], "conjugaci": 13, "conjugacy_classes_repres": 13, "conjugate_f": 25, "conjugate_func": [16, 22, 23, 25], "connect": 10, "consid": [2, 4, 9, 17, 21, 22, 32], "consist": [0, 2, 10, 15, 18, 22, 30, 31, 33], "const": 22, "constant": [1, 2, 5, 6, 10, 13, 18, 22, 23, 27, 30, 31, 32, 33], "constcoeff": 2, "constraint": [1, 4, 18, 22, 27], "construct": [1, 20, 22, 32, 33], "constructionfunctor": [20, 33], "constructor": [0, 22, 23], "consum": 22, "contain": [2, 4, 8, 10, 13, 18, 22, 24, 27, 31, 33, 34], "content": 22, "context": [18, 22, 31], "continu": [17, 27, 30], "continued_fract": 17, "contour": 1, "contract": 22, "contradict": [18, 22], "contrast": [22, 32], "contrib": 31, "contrib_od": 2, "control": [1, 2, 6, 22], "conveni": 12, "convent": [6, 17, 22], "converg": [1, 22, 27], "convers": [0, 15, 16, 22, 24, 25, 31, 34], "convert": [1, 2, 10, 11, 17, 21, 22, 23, 24, 27, 28, 31, 34], "convert_temperatur": 34, "convex": 22, "convolut": 13, "convolution_period": 13, "convolv": 13, "coolei": 15, "coordin": [1, 22], "copi": [1, 7], "core": 11, "corner": 10, "correct": [1, 12, 22, 27], "correctli": 22, "correspond": [1, 2, 8, 10, 22, 23, 28, 31, 34], "cos_integr": 30, "cosh": [1, 17, 22, 23, 30, 31], "cosh_integr": 30, "cosin": [13, 22], "cost": 22, "cot": [23, 30], "coth": [1, 22, 23, 30], "could": [1, 2, 22, 23, 27], "coulomb": [22, 34], "count": 22, "counter": [10, 22], "coupl": 32, "cours": [1, 2, 17], "cover": 31, "cr": [1, 16, 23, 25], "crash": 4, "cre": 22, "creat": [1, 3, 4, 7, 8, 14, 15, 16, 18, 22, 23, 25, 30, 32, 33, 34], "create_kei": 20, "create_key_and_extra_arg": 33, "create_object": [20, 33], "creation": [2, 10], "critic": 2, "csc": [22, 23, 30], "csch": [23, 30], "csgn": 22, "cube": 22, "cubic": [1, 7, 8], "current": [1, 10, 12, 17, 18, 20, 22, 31, 34], "curv": [3, 4, 7, 8, 10, 22], "curvilinear": 22, "custom": [16, 22, 23, 24, 25], "cut": 22, "cutoff": 10, "cv": 31, "cyclic": 13, "cyclicpermutationgroup": 13, "cyclotom": 1, "cyclotomicfield": 13, "cython": [9, 24], "d": [1, 2, 6, 12, 17, 18, 22, 23, 29, 31], "d_": 14, "d_i": 9, "da": 4, "dan": 5, "daniel": 33, "data": [9, 10, 14, 15, 22, 29, 34], "databas": [18, 32], "daubechi": [13, 14], "daubechies_cent": [13, 14], "david": [1, 2, 13, 14, 34], "dct": 13, "de": [2, 22], "de1": [1, 2], "de2": [1, 2], "deal": 6, "decim": [17, 22, 34], "decl": [18, 22], "decl_assum": 22, "decl_forget": 22, "declar": [2, 10, 18, 22], "decomposit": [17, 22], "decreas": [10, 18], "deduc": [17, 22], "deep": 22, "def": [6, 9, 12, 16, 19, 22, 23, 24, 25, 30, 32], "default": [1, 2, 4, 6, 7, 9, 10, 13, 15, 16, 17, 18, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34], "default_vari": [22, 24], "defin": [1, 2, 3, 4, 6, 16, 17, 18, 22, 23, 24, 25, 31, 34], "definit": [1, 4, 7, 17, 18, 22, 26, 27, 31, 32], "definite_integr": [7, 27], "definiteintegr": 27, "degener": 17, "degre": [1, 4, 12, 17, 22, 34], "del": 7, "delecroix": 6, "delet": [7, 16], "delta": [1, 2], "demey": 6, "demoivr": [22, 23], "demonstr": [10, 31], "denomin": [1, 22, 31], "denot": 13, "dens": 3, "depend": [1, 2, 6, 9, 13, 17, 18, 22, 31], "deprec": 22, "deprecationwarn": 22, "der": 9, "deriv": [1, 2, 4, 5, 7, 8, 9, 10, 12, 16, 17, 22, 23, 24, 25, 29, 31, 32, 34], "deriv_param": [16, 23, 25], "derivative_func": [16, 23, 25], "derivativeoper": 29, "derivativeoperatorwithparamet": 29, "describ": [2, 10, 34], "descript": 31, "design": 10, "desir": [1, 2, 15, 22], "desired_relative_error": 1, "desolv": 2, "desolve_laplac": 2, "desolve_mintid": 2, "desolve_odeint": 2, "desolve_rk4": 2, "desolve_rk4_determine_bound": 2, "desolve_system": 2, "desolve_system_rk4": 2, "desolve_tides_mpfr": 2, "despit": 1, "det": [1, 5], "detail": [1, 4, 14, 17, 18, 22, 23, 27, 31, 33], "detect": 31, "determin": [1, 2, 5, 10, 17, 22, 24, 31, 33], "develop": [8, 10, 24], "deviat": 17, "df": 4, "df_1": 9, "df_n": 9, "dfdt": 9, "dfdy": 9, "dft": 13, "dgamma": 18, "dickman_rho": 30, "dict": [1, 13, 22, 24], "dictionari": [1, 16, 18, 22, 23, 25, 31], "did": 31, "diff": [1, 2, 4, 5, 11, 12, 16, 17, 19, 22, 23, 25, 29, 31, 32], "diff_param": [16, 23, 25], "differ": [1, 6, 9, 10, 13, 16, 17, 22, 23, 24, 30, 31], "differenti": [0, 1, 4, 5, 12, 16, 22, 23, 24, 25, 29], "difficult": 2, "digit": [2, 17, 22, 31], "dilog": [12, 30], "dim": 6, "dimens": [3, 6, 10, 17, 22, 31], "dimension": [2, 4, 6, 9], "diophantin": [22, 31], "dir": [1, 4], "dirac": 1, "dirac_delta": [1, 30], "direct": [1, 4, 8, 10, 22, 24], "directli": [17, 22, 31, 34], "dirichlet": 13, "dirti": 10, "disabl": [11, 22], "disc": 10, "discard": 22, "discontinu": 6, "discov": 18, "discret": [0, 9, 10], "discretewavelettransform": 14, "discuss": 10, "disjoint": 33, "disk": 10, "displai": [4, 22], "distanc": 34, "distinct": [1, 22, 32, 33], "distinguish": 2, "distribut": [1, 12, 13, 17, 22], "div": 23, "diverg": [1, 12, 18, 22, 27], "divid": [22, 31], "divide_both_sid": 22, "divis": [23, 30], "do": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 24, 25, 31], "doc": [6, 12, 22], "docstr": [9, 14, 22, 34], "doctest": [9, 22, 27, 33], "document": [2, 4, 6, 7, 10, 12, 15, 22, 25, 27, 31, 32, 34], "doe": [1, 2, 4, 10, 17, 22, 27, 31, 32], "doesn": [9, 17, 22, 23], "domain": [1, 10, 16, 17, 18, 22, 23, 31, 32], "don": [1, 5, 17, 22, 24], "done": [0, 1, 15, 20, 22], "dontfactor": 22, "dormand": 9, "doubl": [4, 8, 9, 22, 31], "doublefactori": 22, "down": [10, 16, 23, 25, 34], "dr": 10, "drake": 5, "draw": [7, 22], "drawn": 10, "dreadfulli": 22, "drop": 22, "dst": 13, "dt": [1, 2, 9], "dtheta": 10, "dtype": 10, "due": [1, 4, 22, 31], "dummi": [22, 31], "dummy_diff": 1, "dummy_integr": 1, "dummy_inverse_laplac": 1, "dummy_laplac": 1, "dummy_pochhamm": 1, "dump": [1, 20, 22, 23], "duplic": 22, "dure": [2, 16, 22, 23, 25], "dvar": 2, "dwt": [13, 14], "dx": [2, 4], "dy": [1, 2, 4], "dy_1": 9, "dy_i": 9, "dy_n": 9, "dydt": 9, "dynam": 2, "dyne": 34, "e": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33], "e1": [22, 31], "e2": 22, "each": [1, 2, 4, 5, 6, 10, 16, 18, 21, 22, 23, 24, 30, 31], "earth": 34, "eas": 34, "easi": [4, 22], "easier": [1, 34], "echelon_form": 1, "edg": [10, 14], "ef": [16, 23, 25], "ef1": 10, "ef1p": 10, "ef2": 10, "ef2p": 10, "effect": 22, "effici": [0, 31, 34], "effort": [22, 31], "ei": 30, "eigenspaces_left": 17, "eigenvalu": [1, 17], "either": [2, 6, 9, 16, 18, 22, 23, 30, 34], "electric_potenti": 34, "element": [0, 1, 3, 6, 9, 13, 20, 22, 23, 24, 30, 32], "elementari": 24, "elif": 30, "elimin": [22, 31], "ellips": 10, "ellipsi": [19, 22], "ellipsis_rang": [19, 22], "ellipt": [3, 4], "elliptic_": 30, "elliptic_ec": 30, "elliptic_eu": 30, "elliptic_f": 30, "elliptic_kc": 30, "elliptic_pi": 30, "ellipticcurv": 3, "els": 17, "em": 22, "emb": 22, "embed": [9, 22], "emmanuel": 22, "emploi": 22, "empti": [18, 22, 31], "enabl": [22, 24], "encount": [1, 22, 23, 31], "encyclopedia": 5, "end": [2, 9], "end_point": 2, "endpoint": [1, 22, 27], "enhanc": [2, 22], "enough": [1, 17], "ensur": [18, 20, 22, 27], "entir": 18, "entri": [2, 5, 16, 22, 33], "enumer": 31, "ep": 13, "eps_ab": 6, "eps_rel": 6, "epsilon": [1, 2, 10], "eq": [2, 23, 31], "eq1": 17, "eq2": 17, "eqn": [1, 17, 22, 31], "eqn1": 22, "eqn2": 22, "equal": [1, 2, 9, 10, 13, 17, 18, 22, 27, 31, 34], "equals_sub": 1, "equat": [0, 3, 17, 18, 22], "equival": [9, 17, 18, 22], "erf": [4, 12, 22, 27, 30], "erfc": 30, "erfi": 30, "erfinv": 30, "errat": 10, "erron": 30, "error": [1, 2, 6, 9, 10, 15, 18, 22, 30, 31], "error_ab": 9, "error_rel": 9, "especi": [10, 31], "essaysmanu": 17, "establish": 31, "estim": [1, 2, 6, 9], "etb": 23, "etc": [1, 6, 16, 22, 23, 25, 31, 34], "ethan": [8, 10], "euclidean": 22, "euler": [2, 22], "euler_gamma": [1, 4, 22, 30], "eulers_method": 2, "eulers_method_2x2": 2, "eulers_method_2x2_plot": 2, "ev": [16, 23, 25], "eval": [1, 22], "eval_func": [16, 23, 25], "evalf": [16, 23, 25], "evalf_f": [16, 23, 25], "evalf_func": [16, 23, 25], "evalf_params_first": [16, 22, 23, 24, 25], "evalu": [1, 4, 7, 9, 10, 16, 17, 18, 20, 22, 23, 24, 25, 27, 31, 34], "evalunitdict": 34, "even": [1, 4, 6, 9, 13, 14, 17, 18, 19, 22, 31], "evenfun": 18, "event": 27, "everi": [1, 22, 23, 30], "everyth": 18, "ewt": 2, "ex": [1, 4, 22, 23], "exact": [2, 10, 13, 18, 22], "exactli": [1, 22, 24, 34], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34], "except": [1, 2, 17, 22, 23, 27], "excess": 1, "exclud": [22, 23], "execut": 9, "exhaust": 32, "exhibit": [10, 22], "exist": [3, 34], "exit": 18, "exot": 1, "exp": [1, 2, 4, 5, 6, 8, 10, 11, 12, 13, 17, 22, 23, 27, 28, 30, 31], "exp_integral_": 30, "exp_integral_e1": 30, "exp_polar": [12, 30], "expand": [1, 2, 4, 11, 12, 13, 16, 17, 19, 22, 23, 25], "expand_log": 22, "expand_r": 22, "expand_sum": 22, "expand_trig": 22, "expans": [1, 10, 16, 17, 22, 23, 25], "expect": [1, 2, 16, 21, 22, 23, 24, 25, 28], "expens": 22, "explan": [2, 25], "explicit": [1, 17, 22, 31], "explicit_solut": [22, 31], "explicitli": [1, 22], "explor": [18, 22], "expo": 24, "expon": [1, 16, 22, 23, 25, 31], "exponenti": [1, 22, 23], "expr": [1, 3, 4, 21, 22, 23, 32, 34], "express": [0, 1, 2, 4, 6, 9, 11, 16, 17, 18, 21, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34], "expression_convers": 23, "expressioniter": 22, "expressiontreebuild": 23, "expressiontreewalk": 23, "ext": 23, "extend": [10, 13, 17, 22], "extens": [1, 30], "exterior": [4, 10], "extern": [0, 26], "extra": [1, 2, 30], "extra_arg": 20, "extract": [10, 16, 23, 25], "extratabcomplet": 34, "extrem": 1, "f": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33], "f1": [2, 5, 22], "f2": [2, 22], "f3": 2, "f_1": 9, "f_i": 9, "f_k": 22, "f_n": 22, "fact": [4, 22], "factor": [1, 2, 4, 13, 17, 22, 31], "factor_list": 22, "factori": [0, 1, 17, 22, 24, 30, 33], "factorial_simplifi": 22, "fahrenheit": [22, 34], "fail": [1, 4, 6, 17, 18, 22, 27], "failur": 1, "fairli": [10, 22], "fakeexpress": 23, "fals": [1, 2, 4, 9, 10, 11, 17, 18, 22, 23, 24, 27, 30, 31, 32, 33, 34], "famili": 22, "familiar": 22, "far": 22, "farrar": 6, "fast": [0, 6, 13, 22, 30], "fast_cal": 23, "fast_float": 2, "fastcallableconvert": 23, "faster": [1, 2, 4, 31], "fastfouriertransform": [13, 15], "fastfouriertransform_bas": 15, "fastfouriertransform_complex": 15, "fcn": 13, "fderivativeoper": 29, "feasibl": 19, "featur": [18, 32], "fehlberg": 9, "fermat": 31, "few": [1, 7, 31], "ff": 23, "fft": [13, 15], "field": [1, 2, 3, 4, 6, 13, 16, 17, 22, 23, 30, 31, 32], "fight": 1, "figur": [8, 10], "file": [2, 9, 13, 15], "filenam": 9, "filter": 13, "final": [2, 31], "find": [1, 2, 4, 17, 22, 31], "find_local_maximum": 22, "find_local_minimum": 22, "find_registered_funct": 22, "find_root": [22, 31], "fine": 22, "finit": [13, 22], "finite_r": 22, "first": [1, 2, 6, 7, 9, 11, 16, 17, 20, 22, 23, 25, 29, 30, 31, 32, 33], "fix": [1, 6, 9, 13, 15, 22, 23], "flag": 22, "flexibl": 34, "flint": 24, "float": [1, 2, 4, 6, 10, 11, 14, 17, 19, 22, 24, 27, 30], "float64": 10, "floor": [12, 22, 30], "fn": 5, "fname_paren": 22, "follow": [1, 2, 4, 9, 10, 12, 13, 17, 18, 20, 22, 24, 27, 31, 32, 33], "foo": [1, 9, 16, 22, 23, 24, 25, 29], "foot": [22, 34], "forc": [22, 23, 31, 34], "forev": 19, "forget": [1, 4, 12, 17, 18, 22, 27, 31], "forgotten": [1, 18], "form": [1, 2, 4, 8, 9, 10, 12, 14, 17, 18, 22, 27, 34], "formal": [1, 16, 17, 23, 25], "format": [10, 11, 16, 18, 22, 23, 25, 31], "formul": 1, "formula": [17, 22, 31], "fortran": 17, "forward": [10, 13, 15, 17], "forward_transform": [14, 15], "found": [1, 2, 6, 9, 10, 17, 22, 23, 27], "fourier": [0, 31], "fourier_elim": 31, "fouriertransform_complex": 15, "fouriertransform_r": 15, "fp": 10, "fprime": 10, "fpylll": 1, "fr": 22, "frac": [1, 2, 22, 30, 31], "fraction": [17, 22, 23, 30], "frame": 22, "frame_aspect_ratio": 22, "free": 22, "free_vari": 22, "freeofx": 2, "fresnel": 27, "fresnel_co": 30, "fresnel_sin": [27, 30], "frica": [1, 2, 22, 26, 27], "fricas_desolv": 2, "fricas_desolve_system": 2, "fricas_integr": 26, "friedland": 12, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "ft": 13, "full": [1, 3, 22], "full_binari": 30, "full_intern": 30, "full_nullari": 30, "full_output": 22, "full_simplifi": 22, "full_unari": 30, "fullratsimp": 22, "fun": 10, "func": [5, 6, 22], "func_with_arg": 22, "function": [1, 2, 3, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 26, 27, 29, 30, 31, 32, 34], "function_cal": 22, "function_factori": [12, 16, 22, 23, 25], "function_gamma": 22, "function_sin": 22, "functional_deriv": 32, "functionunitstep": 22, "functor": [20, 33], "functori": 33, "funni": 12, "further": [0, 1, 12, 22], "futur": 22, "fuzz": 10, "fx": [8, 22], "fy": 8, "g": [1, 2, 4, 5, 9, 10, 12, 13, 16, 17, 19, 20, 22, 23, 24, 25, 27, 31, 33], "g_": 22, "g_1": 9, "g_3": 22, "g_n": 22, "galileo": [22, 34], "galleri": 31, "gamma": [1, 16, 18, 22, 27], "gamma_inc_low": 30, "gamma_norm": 22, "garbag": 32, "gauss": 6, "gaussian": [4, 9, 22], "gcd": 22, "gdecl": 18, "ge": 31, "gear": 9, "gear1": 9, "gear2": 9, "gegenbau": 30, "gen": [2, 10, 13, 17, 22], "gen_laguerr": 30, "gen_legendre_p": 30, "gen_legendre_q": 30, "gener": [2, 6, 9, 10, 15, 18, 22, 23, 24], "genericdeclar": 18, "genericsymbolicsubr": 33, "genericsymbolicsubringfunctor": 33, "geometr": [1, 22], "geometri": 27, "geq": [1, 31], "get": [1, 2, 4, 5, 10, 16, 17, 22, 23, 31, 34], "get_deriv": 10, "get_fake_div": 23, "get_fn_seri": 22, "get_ginac_seri": 22, "get_sfunction_from_hash": 22, "get_sfunction_from_seri": 22, "get_szego": 10, "get_theta_point": 10, "gf": [13, 17, 22], "giac": [1, 4, 22, 23, 26, 27, 31], "ginac": [0, 22, 24], "ginacfunct": 24, "ginv": 12, "github": [11, 22], "give": [1, 2, 5, 10, 13, 14, 17, 22, 27, 28, 29, 30, 31, 32, 34], "given": [1, 4, 5, 7, 8, 10, 16, 18, 20, 22, 23, 24, 25, 28, 30, 31, 32, 33, 34], "global": [1, 16, 18, 22, 23, 30, 32], "gnu": 6, "goe": [1, 7, 18], "golam": 1, "golden_ratio": [22, 30], "good": [17, 31], "good2": 32, "gosper": 22, "gosper_sum": 22, "gosper_term": 22, "got": 22, "govern": 22, "gp": [1, 22, 23], "gradient": [1, 22], "gram": 34, "graph": 2, "graphic": [2, 9, 10, 15, 22], "graphics3d": 22, "great": 10, "greater": 22, "green": [10, 22], "grid": 10, "groebner": 31, "group": [13, 22, 30], "gsl": [0, 1, 6, 13, 14], "gsl_dwt_backward": 13, "gsl_dwt_forward": 13, "gsl_fft_complex_forward": [13, 15], "gsl_fft_complex_invers": [13, 15], "gsl_fft_complex_radix2_forward": [13, 15], "gsl_fft_complex_radix2_invers": [13, 15], "gsl_success": 9, "gsl_wavelet_transform_backward": 13, "gsl_wavelet_transform_forward": [13, 14], "gsl_wavelet_transform_invers": 14, "gsldoublearrai": 14, "guarante": [22, 31], "h": [1, 2, 4, 9, 17, 22, 23, 27, 31], "h0": 2, "ha": [1, 2, 9, 10, 17, 18, 21, 22, 27, 31, 32, 34], "haar": [13, 14], "haar_cent": [13, 14], "hahn": 30, "half": [1, 22, 23], "half_angl": 22, "halfangl": 23, "halfx": 23, "halv": 23, "halvesdict": 23, "hampton": 2, "hand": [2, 18, 22, 32], "handl": [1, 22, 31], "hankel1": 30, "hankel2": 30, "hansen": 15, "happen": [2, 22], "harmonic_numb": 30, "has_valid_vari": 33, "has_wild": 22, "hash": [22, 24], "have": [1, 2, 4, 6, 7, 9, 10, 12, 13, 20, 22, 23, 27, 31, 32, 34], "heavisid": [1, 30], "height": 15, "held": 22, "help": [1, 4, 10, 18, 22, 27, 28], "henc": 31, "here": [1, 2, 11, 12, 15, 16, 18, 22, 27, 31, 32], "hereaft": 2, "hermit": [19, 30], "hessian": [1, 5, 22, 31], "heurist": 22, "hf": 10, "hfprime": 10, "hgfred": 22, "hi": 10, "high": [1, 10], "higher": [1, 2, 6, 10], "highest": 22, "highlight": 22, "histogram": 13, "hmax": 2, "hmin": 2, "hold": [1, 17, 22, 23, 24, 27, 31], "hold_class": 22, "holdremov": 23, "hole": 10, "homogen": 2, "hopit": 17, "horner": [1, 17, 22], "horsepow": 34, "hossain": 1, "hour": 34, "how": [2, 4, 17, 18, 22, 31], "howev": [22, 27], "html": [5, 17, 22], "http": [1, 5, 11, 12, 17, 19, 22, 27, 31], "hue": [4, 7], "huge": 4, "human": 21, "hurwitz_zeta": 30, "hyperbol": [22, 23], "hypercub": 6, "hypergeometr": [1, 4, 12, 22, 23, 27], "hypergeometric_m": [22, 30], "hypergeometric_simplifi": 22, "hypergeometric_u": [22, 30], "hypothesi": 17, "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34], "ic": 2, "id": 22, "ident": [1, 10, 18, 20, 22], "identifi": [1, 16, 22, 32], "idft": 13, "idwt": 13, "iff": 22, "ifft": 13, "ignor": [1, 9, 16, 22, 27, 31], "ii": 23, "ik": 22, "illustr": [1, 4, 22, 31], "ilt": 1, "im": [17, 22], "imag": [8, 17, 22], "imag_part": [17, 22, 30], "imag_part_func": [16, 23, 25], "imageset": 31, "imaginari": [10, 15, 16, 17, 18, 22, 23, 24, 25, 32], "imaginary_toler": 22, "immedi": [1, 16, 17, 22, 23], "implement": [1, 2, 6, 13, 14, 22, 24, 31, 32, 33], "impli": [1, 4], "implicit": [2, 9, 22, 31], "implicit_deriv": 22, "implicitli": [1, 2, 22, 31], "import": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "imprecis": 10, "improp": [27, 34], "inaccur": 10, "inch": [22, 34], "includ": [1, 2, 9, 10, 17, 22], "incompar": 30, "incompat": [22, 31, 34], "inconclus": 31, "inconsist": [18, 22], "incorrect": 1, "incorrectli": 22, "increas": 18, "increment": [2, 18], "ind": 1, "inde": 22, "indefinit": [1, 27], "indefinite_integr": 27, "indefiniteintegr": 27, "independ": [1, 2, 18, 22], "indetermin": 1, "index": [0, 1, 13, 16, 22, 23, 24, 25, 32], "index_object": 13, "indexedsequ": 13, "indexerror": 22, "indic": [1, 16, 22, 23, 25, 29], "indirect": [22, 27, 33], "individu": 22, "ineffici": 31, "ineq": 31, "inequ": [0, 2, 17, 18, 22], "inexact": 32, "inf": 6, "infin": [1, 4, 6, 11, 17, 22, 27, 31], "infinit": [6, 22, 32], "infix": 23, "influenc": 22, "inform": [1, 18, 22, 34], "infti": [1, 10], "init_function_t": 22, "init_pynac_i": 22, "initi": [1, 2, 8, 9, 10, 14, 15, 22, 24, 31], "inject": [16, 23, 32], "inner": 10, "input": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 18, 20, 21, 22, 23, 25, 27, 29, 30, 31, 32, 33, 34], "insert": [7, 22], "insid": [1, 18], "instal": [1, 2, 27, 31], "instanc": [1, 16, 20, 22, 23, 25, 32], "instanti": 9, "instead": [1, 2, 4, 9, 10, 11, 17, 18, 22, 23, 24, 27, 32], "int": [9, 11, 22, 31], "int_": 1, "int_a": 6, "integ": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "integervalu": 18, "integervector": 30, "integr": [0, 1, 2, 4, 7, 10, 12, 16, 17, 18, 22, 23, 25, 26, 30], "integrand": 1, "intellig": 1, "intend": [10, 22, 23, 24], "intens": 10, "interact": [18, 24], "interfac": [1, 2, 16, 23, 24, 25, 31], "interfacefunctionel": 28, "interfaceinit": 23, "interior": 10, "intermedi": [10, 22], "intern": [1, 2, 10, 16, 22, 23, 25, 30, 31, 34], "internet": [1, 26, 27], "interpol": [0, 9, 10], "interpolate_solut": 9, "interpret": [1, 2, 5], "interv": [2, 6, 9, 22, 23, 27, 31], "intnum": 1, "introduc": 18, "intuit": 22, "inv": 30, "invalid": [1, 34], "invers": [1, 10, 13, 15, 22], "inverse_jacobi_c": 30, "inverse_jacobi_cd": 30, "inverse_jacobi_cn": 30, "inverse_jacobi_d": 30, "inverse_jacobi_dc": 30, "inverse_jacobi_dn": 30, "inverse_jacobi_n": 30, "inverse_jacobi_nc": 30, "inverse_jacobi_nd": 30, "inverse_jacobi_sc": 30, "inverse_jacobi_sd": 30, "inverse_jacobi_sn": 30, "inverse_laplac": [1, 22], "inverse_riemann_map": 10, "inverse_transform": 15, "inversetaylor": 17, "invert": [17, 22], "invok": [1, 2, 9], "involv": [1, 2, 16, 22, 23, 25, 30, 31], "ipow": 23, "irrat": [18, 22], "irreduc": 22, "irreflex": 30, "is2pow": 14, "is_algebra": 22, "is_cal": 22, "is_const": 22, "is_exact": [22, 32], "is_field": 32, "is_finit": 32, "is_infin": 22, "is_integ": [18, 22], "is_neg": 22, "is_negative_infin": 22, "is_numer": 22, "is_polynomi": 22, "is_posit": [18, 22], "is_positive_infin": 22, "is_rational_express": 22, "is_real": [18, 22, 32], "is_rel": 22, "is_squar": 22, "is_symbol": 22, "is_symbolicequ": 22, "is_terminating_seri": 22, "is_trivial_zero": 22, "is_trivially_equ": 22, "is_unit": [22, 34], "is_zero": 22, "ish": 17, "isidentifi": 32, "isinst": [3, 22, 24], "isomorph": 13, "issu": [1, 4, 6, 7, 12, 17, 22, 23, 30, 31], "item": [20, 25], "iter": [22, 32, 33], "its": [1, 2, 4, 6, 10, 17, 18, 20, 22, 23, 24, 29, 33], "itself": [10, 13, 16, 22, 27, 31], "ivar": 2, "ivp": 2, "ixpr": 2, "j": [2, 5, 8, 10, 12, 13, 14, 17, 30, 31], "j_1": 9, "jacobi_am": 30, "jacobi_c": 30, "jacobi_cd": 30, "jacobi_cn": 30, "jacobi_d": 30, "jacobi_dc": 30, "jacobi_dn": 30, "jacobi_n": 30, "jacobi_nc": 30, "jacobi_nd": 30, "jacobi_p": 30, "jacobi_sc": 30, "jacobi_sd": 30, "jacobi_sn": 30, "jacobian": [1, 2, 5, 9], "jeroen": 6, "john": 22, "join": [16, 18, 22, 23, 25], "josh": [6, 14], "joshi": 12, "joshua": [9, 13], "joyner": [1, 2, 13, 14, 15], "just": [1, 9, 13, 22, 23, 24, 27, 32, 34], "k": [1, 2, 4, 5, 12, 13, 14, 16, 17, 18, 22, 23, 31], "k1": 22, "k2": 22, "kantor": [6, 9, 13, 14], "kappa": [16, 23, 25], "keep": 22, "keepfloat": 27, "kei": [1, 6, 13, 18, 20, 22, 33], "kelvin": [22, 34], "kepler": 2, "kept": 22, "kernel": 10, "keyerror": 34, "keyword": [1, 9, 16, 22, 23, 24, 25, 31, 32, 33], "khinchin": 30, "kilo": [22, 34], "kilogram": [22, 34], "kind": [1, 22, 30, 32, 33], "klein": 6, "know": [4, 17, 18, 22], "known": [1, 18, 22, 30, 31], "kosan": 22, "krawtchouk": 30, "krenn": 33, "kronecker_delta": 30, "kronecker_symbol": 13, "kronrod": 6, "kt1986": 10, "kutta": [2, 9], "kwarg": 1, "kwd": [1, 2, 4, 9, 16, 18, 22, 23, 24, 25, 31, 32, 33], "l": [1, 7, 12, 13, 15, 17, 19], "lack": 15, "lagrang": 2, "laguerr": [22, 30], "lambda": [2, 3, 6, 8, 9, 10, 13, 16, 17, 18, 22, 23, 25, 30, 31, 32], "lambert_w": [30, 31], "laplac": [1, 2, 22], "larg": [10, 22, 31], "larger": [7, 10, 22, 30, 31], "lassoci": 18, "last": [1, 2, 4, 5, 6, 7, 12, 13, 16, 18, 22, 23, 24, 25, 27, 31, 33, 34], "latest": 22, "latex": [1, 16, 22, 23, 24, 25, 31, 32], "latex_nam": [16, 22, 23, 24, 25, 32], "latte_int": 27, "laurent": [4, 22, 23], "laurent_polynomi": [22, 23], "laurentpolynomialconvert": 23, "laurentpolynomialr": 23, "lcm": 22, "ldot": [2, 14], "lead": [1, 10, 22], "leading_coeff": 22, "leading_coeffici": 22, "least": [22, 31], "leav": [13, 22, 30], "lebesgu": 6, "left": [1, 2, 10, 16, 18, 22, 23, 24, 25, 32], "left_hand_sid": [22, 31], "legal": [1, 4, 18, 27], "legendr": 17, "legendre_p": 30, "legendre_q": 30, "leibniz": 27, "len": [7, 13, 15, 19, 22, 30], "length": [1, 2, 9, 13, 14, 18, 21, 22, 30, 34], "lepag": 6, "less": [1, 10, 19, 22], "let": [9, 18, 20, 22, 32], "letter": 16, "level": [1, 13, 14, 22, 24], "lh": [22, 31], "li": 22, "lib": [1, 9, 22, 23, 24, 26, 27, 31], "libgiac": [26, 27], "libgiac_integr": 26, "librari": [1, 6, 9, 16, 22, 23, 24], "licens": 27, "lie": [4, 22], "light": 34, "light_year": 34, "like": [1, 10, 18, 22, 23, 24, 34], "likewis": [3, 31], "lim": [1, 4], "limit": [1, 4, 6, 11, 17, 18, 22], "line": [2, 4, 9, 10, 13, 15, 16, 22, 24], "linear": [2, 17, 22, 31], "linescal": 10, "link": 0, "list": [1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 16, 17, 18, 19, 20, 22, 23, 29, 30, 31, 32, 34], "list_plot": [2, 10], "liter": [18, 34], "ln": [4, 17, 22, 31], "load": [1, 20, 22, 23], "local": [2, 18, 22], "locat": 8, "log": [1, 2, 4, 5, 6, 12, 17, 22, 26, 27, 28, 30, 31], "log2": [22, 30], "log_2": [13, 14], "log_expand": [1, 22], "log_gamma": [22, 30], "log_integr": 30, "log_integral_offset": 30, "log_simplifi": 22, "logarithm": 22, "logcontract": [22, 28], "logexpand": 22, "logic": 18, "long": [1, 2, 4, 10, 12, 14, 15, 19, 22, 23, 27, 30], "longer": [1, 10, 16, 21, 22, 23, 25, 27, 30, 32], "look": [1, 10, 12, 22], "lorenz": 2, "lost": [22, 31], "lot": [1, 31], "lotka": 2, "low_degre": 22, "lower": [1, 6, 7, 15, 22, 27], "lowest": 22, "lp": 2, "lst": 30, "lt": [22, 23, 31], "m": [1, 2, 3, 4, 8, 9, 10, 12, 17, 22, 23, 31], "mac": 31, "machin": [1, 22], "made": [1, 10, 12, 18, 22, 24, 31], "magnitud": [10, 22], "mai": [1, 2, 4, 7, 9, 10, 18, 22, 24, 27, 30, 31, 34], "main": [0, 1, 22, 30], "mainli": [22, 23, 32, 34], "major": 18, "make": [1, 2, 6, 9, 10, 16, 18, 22, 23, 24, 31, 34], "make_map": 22, "manag": 18, "mandatori": 24, "mani": [1, 9, 10, 13, 22, 24, 31, 34], "manifold": [4, 22], "manipul": [0, 22], "manual": 6, "map": [0, 16, 18, 22, 23, 25], "mapl": [1, 12, 22, 27, 31], "mapped_opt": 1, "marco": 2, "marik": [2, 9, 22, 31], "marshal": 2, "mass": [22, 34], "match": [17, 22, 32], "math": [8, 9, 10, 14, 15, 22], "math_sort": 22, "mathcal": [16, 23], "mathemat": [2, 10, 17, 22], "mathematica": [1, 12, 22, 23, 25, 26, 27], "mathematica_fre": [1, 27], "mathrm": 22, "mathtt": 1, "matric": [1, 3, 31], "matrix": [1, 3, 5, 10, 11, 12, 13, 17, 22, 30, 31], "matrixspac": 3, "matter": 20, "max": [2, 6, 22], "max_point": 6, "maxfun": 22, "maxim": [1, 22], "maxima": [0, 1, 2, 4, 6, 12, 17, 18, 19, 22, 23, 26, 27, 31, 32], "maxima_calculu": 1, "maxima_integr": 26, "maxima_lib": 1, "maxima_method": [22, 28], "maxima_opt": 1, "maxima_taylor": 1, "maxima_wrapp": 28, "maximafunctionelementwrapp": 28, "maximawrapp": 28, "maximum": [2, 6, 22], "maximum_num_subinterv": 1, "maxit": 22, "mean": [1, 2, 22, 31], "meaningless": [18, 22], "meant": 10, "measur": [0, 22], "mechan": 24, "meixner": 30, "member": 24, "men": 1, "mention": 18, "merg": [20, 30, 33], "merten": 30, "mess": 4, "messag": [2, 30], "meter": [22, 34], "method": [0, 1, 2, 6, 9, 10, 13, 14, 16, 18, 22, 23, 24, 25, 30, 32], "mf": 10, "mfprime": 10, "michael": 17, "middl": 18, "might": [1, 2, 6, 22, 30, 31], "miguel": 2, "min": [2, 31], "min_mag": 10, "minim": [1, 22], "minimum": [2, 22], "minor": [14, 15], "minpoli": [1, 22], "mintid": 2, "minu": [1, 4, 6, 22], "minval": 22, "misc": 22, "miser": 6, "miss": [2, 31], "mitig": 10, "mix": [1, 11, 22, 30], "mixed_ord": 22, "mixed_sort": 22, "mixtur": 23, "mma_free_integr": 26, "mma_free_limit": 1, "mod": 17, "mode": [16, 18, 23, 25, 32], "model": 1, "modif": 15, "modifi": [18, 22, 30], "modul": [0, 2, 10, 18, 22, 23, 33], "modulo": [15, 31], "modulu": 31, "moment": [13, 14], "monic": 31, "monomial_coeffici": 22, "mont": 6, "monte_carlo_integr": 6, "more": [0, 1, 2, 4, 6, 10, 12, 13, 18, 21, 22, 27], "more_sampl": 30, "moreov": [2, 7, 10], "moretti": [1, 20, 31], "morphism": 32, "mortuza": 1, "most": [1, 2, 4, 6, 7, 12, 16, 17, 18, 19, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34], "mu": [3, 16, 23], "much": [1, 4, 17, 22, 31], "mul": [22, 23, 30], "mul_vararg": [22, 29], "multi": 22, "multipl": [1, 4, 13, 16, 18, 22, 23, 29, 31, 32], "multipli": [10, 22, 29, 30, 31, 34], "multiply_both_sid": 22, "multivari": [17, 22, 23, 31], "must": [1, 2, 7, 9, 10, 13, 14, 16, 22, 23, 24, 25, 31], "mxhnil": 2, "mxord": 2, "mxordn": 2, "mxstep": 2, "my": [16, 22, 23, 25], "my_intern": 30, "my_jacobian": 9, "my_latex_print": [16, 23], "my_print": [16, 22, 23, 25], "my_sin": 24, "myhash": 22, "n": [1, 2, 4, 5, 6, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 30, 31, 32], "n1": 1, "n2": 1, "n3": 1, "n4": 1, "n5": 1, "n6": 1, "n7": 1, "n8": 1, "n9": 1, "n_node": 30, "naiv": 31, "name": [1, 4, 9, 10, 13, 14, 16, 17, 18, 22, 23, 24, 25, 27, 28, 31, 32, 34], "namedtemporaryfil": [1, 9], "nameerror": 16, "namespac": [16, 23, 32], "nan": [6, 23], "napproxim": 34, "narg": [16, 22, 23, 24, 25], "nativ": [6, 17], "natur": 22, "naught": 18, "ncoeff": 30, "ncorner": 10, "ndefin": 34, "nearest": 22, "nearli": [10, 22], "necess": 10, "necessari": [1, 9, 18, 22], "necessarili": [1, 22], "need": [1, 2, 3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 22, 23, 24, 25, 26, 27, 31, 32], "neg": [1, 4, 18, 22, 23, 27, 30], "negat": 22, "neither": 22, "neq": 20, "nest": [1, 22], "net": [1, 12, 17, 31], "never": 22, "nevertheless": [27, 31], "new": [1, 2, 16, 18, 22, 23, 24, 29, 31, 32], "new_express": 22, "new_expression_from_": 22, "new_expression_from_pyobject": 22, "new_expression_symbol": 22, "new_expression_wild": 22, "newsymbolicfunct": [12, 16, 23, 25], "newton": [22, 27, 34], "next": [1, 2, 17, 27, 32], "next_expr": 30, "nf": [22, 25], "nice": [22, 34], "nicer": 17, "nintegr": [1, 6, 12, 22], "nitpick": 18, "no_vari": [32, 33], "node": [23, 30], "noexpand": 22, "non": [1, 2, 6, 22, 32], "nonconst": 22, "none": [1, 2, 4, 6, 9, 10, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34], "nonetyp": 22, "noninteg": [18, 32], "nonlinear": 31, "nonneg": [9, 22, 30, 32], "nonrat": 22, "nonsens": 22, "nonstiff": 2, "nonzero": [1, 22, 24, 31], "nop": 22, "nopol": 26, "nor": 22, "norm": [2, 22], "normal": [1, 15, 22, 30], "normalize_index": 22, "normalize_index_for_doctest": 22, "normalize_prob_list": 30, "notat": [0, 18, 22], "note": [1, 3, 4, 6, 9, 10, 16, 17, 19, 22, 23, 24, 25, 27, 31, 32], "notebook": [2, 9, 16], "noth": [22, 24, 30], "notic": [1, 12, 22, 27, 31], "notimpl": 22, "notimplementederror": [1, 2, 22, 23, 31, 33], "notion": 17, "now": [1, 2, 4, 12, 15, 16, 17, 22, 23, 25, 27, 32], "nrow": 12, "nsf": [8, 10], "ntest": 22, "nu": [3, 16, 23], "nullari": 30, "nullary_frac": 30, "num_point": 9, "number": [1, 2, 6, 8, 10, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 30, 31, 32], "number_field": [13, 22], "number_of_argu": [22, 24, 30], "number_of_operand": 22, "numberfield": [1, 17], "numer": [0, 1, 2, 4, 10, 16, 17, 22, 23, 25, 31], "numerator_denomin": 22, "numerical_approx": [1, 22], "numerical_integr": [1, 4, 6, 22], "numpi": [10, 22, 24, 32], "numpytosrmorph": 32, "nvar": [23, 30], "o": [11, 17, 22], "obj": [23, 28], "object": [0, 1, 2, 3, 6, 7, 8, 9, 10, 13, 15, 18, 20, 22, 23, 29, 30, 32, 33, 34], "obscur": 4, "observ": 22, "obtain": [2, 6, 10, 17, 22, 27, 31], "occasion": 1, "occur": [2, 10, 22, 32], "occurr": [16, 22, 23, 25], "octav": 2, "od": [0, 2], "odd": 18, "oddfun": 18, "ode_solv": [2, 9], "ode_system": 9, "odeint": 2, "off": [2, 10, 15, 16, 22, 23, 25], "often": [22, 23, 30], "oh": 22, "ok": 17, "old": 2, "old_prec": 1, "omega": 11, "omit": [1, 2, 4, 22, 31], "onc": [22, 29, 32], "one": [1, 2, 5, 6, 7, 9, 13, 16, 17, 18, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33], "one_form": 4, "ones": [9, 13, 14], "onli": [1, 2, 7, 9, 10, 13, 14, 17, 18, 22, 24, 27, 31, 32, 33], "onlin": [1, 26], "onto": [22, 29], "oo": [1, 4, 11, 12, 17, 18, 22, 26, 27, 30], "op": [22, 23, 29], "oper": [0, 1, 4, 18, 22, 23, 30], "operand": [16, 22, 23, 25, 29], "operandswrapp": 22, "opp": 10, "oppos": 18, "optim": 22, "optimis": 22, "option": [1, 2, 4, 9, 10, 13, 15, 16, 22, 23, 25, 26, 27, 31, 32], "orbit": 2, "order": [1, 2, 7, 9, 10, 11, 13, 14, 16, 20, 22, 23, 24, 25, 30, 31], "ordinari": [0, 1, 22], "org": [5, 19, 22], "origin": [10, 16, 18, 22, 23, 31], "oriol": 2, "oscil": 9, "oscillatori": 22, "other": [0, 1, 2, 4, 9, 10, 12, 13, 15, 16, 17, 20, 22, 24, 25, 27, 30, 32, 33, 34], "otherwis": [1, 2, 10, 13, 15, 16, 19, 22], "our": [22, 32], "our_expr": 30, "out": [1, 16, 22], "outer": 10, "output": [1, 2, 3, 4, 6, 8, 9, 10, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 29, 30, 31, 32, 33, 34], "outsid": 10, "over": [3, 4, 6, 10, 12, 13, 17, 22, 23, 27, 31], "overal": [22, 30], "overlaid": 10, "overlap": 22, "overlin": 22, "overload": 9, "overrid": [22, 24], "overridden": 23, "overview": 10, "p": [1, 2, 4, 8, 10, 12, 13, 17, 18, 22, 23, 24, 29, 31], "p1": [1, 2], "p2": [1, 2], "packag": [1, 2, 17, 22, 27, 31, 34], "page": 0, "pair": [1, 2, 7, 22], "paper": 0, "parabola": 1, "param": [6, 9, 22], "paramet": [1, 2, 4, 6, 8, 9, 10, 16, 19, 22, 23, 24, 25, 27, 29, 31], "parameter": [8, 10], "parameter_set": 29, "parametr": [8, 22], "parametric_plot": [2, 8], "paramset_from_express": 22, "parent": [3, 13, 16, 17, 20, 22, 23, 24, 25, 28, 31, 32], "pari": [1, 22, 23, 31], "pars": 1, "parser": 1, "part": [10, 11, 15, 16, 17, 22, 23, 24, 25, 32, 34], "partial": [5, 16, 17, 22, 23, 25, 27, 29, 31], "partial_fract": [17, 22], "partial_fraction_decomposit": 22, "particular": [20, 22], "particularli": [1, 10], "pascal": [22, 34], "pass": [1, 2, 6, 9, 10, 15, 16, 18, 22, 23, 24, 25, 31], "past": 22, "patch": 1, "path": 1, "pattern": [22, 32], "pedagog": 2, "pell": 22, "perform": [1, 2, 14, 15, 22, 23], "perhap": [1, 2], "period": [2, 13, 17], "permut": 13, "perpendicular": 22, "persist": 2, "pformat": [16, 23], "phi": 12, "pi": [1, 2, 4, 6, 8, 9, 10, 11, 12, 13, 17, 18, 19, 22, 23, 26, 27, 30, 31, 32, 34], "pick": 22, "pickl": [1, 22, 24], "pickle_funct": 24, "pickle_wrapp": [24, 25], "pickled_func": 25, "pictur": [2, 9], "piecewis": 17, "pitfal": 22, "pl": 30, "place": [15, 22], "plain": 6, "plan": 18, "plane": [1, 8, 10, 18, 22], "planetmath": 5, "pleas": [6, 18, 22], "plot": [1, 2, 4, 7, 8, 9, 10, 13, 14, 15, 22], "plot3d": 22, "plot_boundari": 10, "plot_color": [8, 10], "plot_histogram": 13, "plot_point": [10, 22], "plot_rang": 10, "plot_slope_field": 2, "plot_solut": 9, "plot_spiderweb": [8, 10], "plotjoin": 10, "plu": [1, 2, 4, 6, 22], "png": [1, 9], "pochhamm": [1, 22], "point": [1, 2, 4, 6, 7, 8, 9, 10, 13, 15, 22, 24, 30], "pointer": 22, "pol": [9, 31], "polar": [1, 15], "pole": 22, "poli": [12, 17, 22], "polygen": [4, 17], "polygon": 8, "polygon_splin": [8, 10], "polyhedron": 27, "polyhedron_bas": 27, "polylog": 30, "polynomi": [0, 1, 3, 4, 12, 17, 22, 23, 27, 31, 34], "polynomial_rational_flint": 3, "polynomialconvert": 23, "polynomialr": [2, 4, 17, 22], "polytop": 27, "posfun": 18, "posit": [1, 2, 4, 10, 16, 17, 18, 22, 27, 29, 32], "possibl": [1, 2, 6, 9, 18, 22, 23, 24, 27, 30, 31, 32, 33], "possibli": [1, 22, 31], "potenti": [1, 6, 22], "pound": [22, 34], "pounds_per_square_inch": [22, 34], "pow": [16, 22, 23, 25, 30], "power": [13, 14, 15, 16, 22, 23, 24, 25, 31, 34], "power_func": [16, 23, 25], "power_param": [16, 23, 25], "power_seri": [17, 22], "pprint": [11, 16, 23], "pprint_use_unicod": 11, "practic": [18, 24], "prduct": 1, "prec": [2, 22], "precis": [1, 2, 10, 13, 22, 23], "predefin": [1, 16], "prefer": [22, 23, 30], "prepars": 1, "preprocess_assumpt": 18, "presenc": [6, 22], "present": [2, 22, 24], "preserved_arg": 24, "press": 6, "pressur": [22, 34], "pretti": [11, 22], "pretty_print": 22, "prev_us": 11, "prevent": [6, 10, 22, 27], "previou": [2, 9, 17, 22], "price": 22, "primarili": [10, 23], "prime": 31, "prime_pi": 30, "primit": [2, 9, 10, 15, 22], "primitive_part": 22, "princ": 9, "print": [2, 4, 10, 11, 13, 16, 17, 22, 23, 24, 25, 27, 30, 31, 32, 34], "print_arg": [16, 23, 25], "print_func": [16, 22, 23, 25], "print_latex": 24, "print_latex_func": [16, 22, 23, 25], "print_ord": 22, "print_sort": 22, "printer": 11, "printmessg": 2, "probabl": [1, 13, 21, 30], "problem": [1, 2, 10, 12, 17, 19, 22, 31], "proce": 22, "process": 22, "prod": [17, 22], "prod_": [1, 22], "produc": [1, 2, 20, 22, 30], "product": [1, 12, 22, 29, 30], "project": 9, "proof": [22, 32], "propag": 32, "proper": 10, "properti": [2, 18, 20, 22], "prove": [1, 17, 22], "proven": 1, "provid": [2, 5, 10, 18, 22, 23, 24, 31], "pseudo": 22, "psi": [16, 22, 23, 25], "psi_": [16, 23], "pspline": 8, "pt": [2, 8, 10], "pure": 22, "purpos": [2, 10, 22, 32, 34], "pushout": 33, "put": [2, 5, 17, 31], "py_atan2": 22, "py_atan2_for_doctest": 22, "py_denom": 22, "py_denom_for_doctest": 22, "py_eval_infin": 22, "py_eval_infinity_for_doctest": 22, "py_eval_neg_infin": 22, "py_eval_neg_infinity_for_doctest": 22, "py_eval_unsigned_infin": 22, "py_eval_unsigned_infinity_for_doctest": 22, "py_exp": 22, "py_exp_for_doctest": 22, "py_factori": 22, "py_factorial_pi": 22, "py_float": 22, "py_float_for_doctest": 22, "py_imag": 22, "py_imag_for_doctest": 22, "py_is_cinteger_for_doctest": 22, "py_is_crational_for_doctest": 22, "py_is_integer_for_doctest": 22, "py_latex_fderiv": 22, "py_latex_fderivative_for_doctest": 22, "py_latex_function_pystr": 22, "py_latex_variable_for_doctest": 22, "py_lgamma": 22, "py_lgamma_for_doctest": 22, "py_li": 22, "py_li2_for_doctest": 22, "py_li_for_doctest": 22, "py_log": 22, "py_log_for_doctest": 22, "py_mod": 22, "py_mod_for_doctest": 22, "py_num": 22, "py_numer_for_doctest": 22, "py_print_fderiv": 22, "py_print_fderivative_for_doctest": 22, "py_print_function_pystr": 22, "py_psi": 22, "py_psi2": 22, "py_psi2_for_doctest": 22, "py_psi_for_doctest": 22, "py_real": 22, "py_real_for_doctest": 22, "py_stieltj": 22, "py_stieltjes_for_doctest": 22, "py_tgamma": 22, "py_tgamma_for_doctest": 22, "py_zeta": 22, "py_zeta_for_doctest": 22, "pyfunctionwrapp": [6, 9], "pynac": [0, 18, 19, 22, 23, 24], "pynacconst": 22, "pyobject": [22, 23, 31], "python": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "q": [1, 2, 13, 18, 22, 23, 31], "qag": 6, "qe": 31, "qng": 6, "qq": [1, 2, 3, 4, 11, 13, 16, 17, 22, 23], "qqbar": [1, 22], "quadpack": 1, "quadrat": [13, 17, 22, 31], "quadraticfield": [17, 22], "quantiti": [22, 34], "queri": [18, 22], "quick": [10, 19], "quickli": [4, 30], "quit": 22, "quotient": 22, "r": [1, 2, 3, 4, 10, 11, 12, 13, 16, 17, 18, 22, 23, 24, 25, 31, 32, 33], "r1": [17, 19, 31], "r10": 19, "r11": 19, "r2": [18, 19], "r3": 19, "r4": 19, "r5": 19, "r6": 19, "r7": 19, "radcan": 22, "radial": 10, "radian": 34, "radic": [1, 22], "radix2": [13, 15], "rais": [1, 2, 16, 18, 22, 27, 30, 34], "ralf": 22, "randint": 30, "random": [0, 1, 4, 6, 13, 15, 19, 22, 31], "random_el": 30, "random_expr": [23, 30], "random_expr_help": 30, "random_integer_vector": 30, "random_test": [23, 30], "randomli": [6, 30], "rang": [1, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 22, 23, 25, 30], "rank": 33, "rare": 10, "rassoci": 18, "rate": 10, "rather": [22, 31], "ratio": [22, 30], "ration": [1, 3, 11, 13, 16, 17, 18, 22, 23, 27, 30, 31], "rational": 21, "rational_expand": 22, "rational_simplifi": [12, 22], "rationalfield": 30, "ratsimp": 22, "rdf": [7, 8, 17, 22, 23], "re": [1, 17, 22, 31], "read": 13, "real": [0, 1, 6, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 31, 32], "real_mpfr": 24, "real_nth_root": 30, "real_part": [17, 22, 30], "real_part_func": [16, 23, 25], "realfield": [2, 11, 17, 22], "realli": [1, 17], "realnumb": [1, 2, 4, 6, 7, 8, 9, 10, 11, 17, 18, 22, 24, 27, 30, 31, 32, 34], "reason": [1, 17, 22], "receiv": 24, "recent": [1, 4, 6, 7, 12, 16, 18, 22, 23, 24, 25, 27, 31, 33, 34], "recogn": [2, 22, 34], "recomput": 7, "record": 29, "recov": 1, "recreat": 25, "rect": 15, "rectangl": 2, "rectangular": 22, "rectform": 22, "recurs": [6, 22], "red": [9, 10, 16, 22], "reduc": [10, 22], "reduce_trig": 22, "redund": 18, "refer": [2, 5, 6, 7, 30], "refin": 18, "reformat": 6, "regard": [1, 22], "regardless": 22, "region": [1, 4, 6, 10], "regist": [22, 24], "register_or_update_funct": 22, "registri": 22, "regress": [1, 12, 31], "regular": 22, "reinforc": 1, "reject": [32, 33], "rejecting_vari": [32, 33], "rel": [1, 2, 6, 22, 30, 31], "relat": [1, 6, 18, 22, 23, 30, 31], "relationship": [18, 22, 34], "relev": 22, "reli": 1, "remain": [20, 30], "remaind": 31, "remark": [1, 6], "rememb": 27, "remov": [1, 10, 32], "repeat": [4, 22], "repeatedli": 22, "repetit": 30, "replac": [1, 16, 18, 22, 23, 25, 34], "report": 22, "repr": [16, 22, 23, 25], "repres": [1, 2, 8, 9, 10, 13, 15, 18, 21, 22, 23, 27, 29, 30], "represent": [1, 18, 22], "request": [1, 4, 18, 22, 27], "requir": [1, 2, 9, 10, 22, 27, 30, 31], "research": 10, "reset": 17, "residu": [13, 22], "resolut": 10, "resolv": 1, "respect": [1, 5, 18, 22, 23, 24, 27, 29, 31], "rest": 29, "restor": [4, 12, 16, 17, 18, 22], "restore_op_wrapp": 22, "result": [1, 2, 6, 10, 17, 22, 23, 24, 27, 31, 32], "result_par": 22, "return": [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34], "reusabl": 18, "revers": [10, 17, 22], "review": 17, "rewrit": [6, 17, 22, 23], "rewritten": 9, "rf": 22, "rgb": [10, 13], "rgbcolor": [1, 10, 22], "rh": [1, 2, 22, 31], "rho": 2, "riccati": 2, "riemann": [0, 16, 23], "riemann_map": [8, 10], "riemannian": 22, "rif": [22, 23], "right": [1, 2, 13, 16, 22, 23, 24, 25], "right_hand_sid": [22, 31], "ring": [0, 1, 3, 4, 12, 13, 16, 17, 20, 22, 23, 24, 25, 28], "ringconvert": 23, "rising_factori": 22, "rk": 2, "rk2": 9, "rk2imp": 9, "rk4": 9, "rk4imp": 9, "rk8pd": 9, "rkf45": 9, "rm": 22, "rnd": 2, "rndu": 2, "robert": [1, 2, 6, 9, 10, 22, 31], "rodrigu": 17, "rodriguez": 2, "root": [1, 13, 17, 22, 31], "rough": 10, "roughli": 22, "round": [15, 22], "roundoff": 1, "routin": [9, 22, 23, 30], "row": 5, "rr": [2, 6, 13, 16, 22, 23, 34], "rtest_fourier_elim": 31, "rtol": [2, 22], "rudimentari": 18, "rule": [1, 6, 12, 16, 17, 20, 22, 23, 24, 25], "run": [10, 22], "rung": [2, 9], "runtimeerror": [22, 31], "s1": [19, 22], "s2": [19, 22], "s3": 19, "s4": 19, "s_": [14, 16], "s_arctan": 22, "s_i": 9, "s_n": 22, "saddl": 1, "safe": 22, "sage": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "sagemath": [19, 22], "sageobject": [13, 22, 24, 28], "sagevarx": 23, "sai": [13, 22], "saltzman": 2, "same": [1, 2, 4, 10, 13, 15, 17, 18, 20, 22, 24, 27, 29, 31], "sampl": [6, 13, 15, 17], "satisfi": [6, 18, 22, 30, 31], "save": [1, 9], "scalar": [2, 4, 13, 22], "scalar_field": 4, "scale": 10, "scale_ab": 9, "scaling_ab": 9, "scan": 22, "scene": [1, 22, 31], "scheme": 3, "sci_not": 2, "scientif": 6, "scipi": [2, 17, 22, 31], "screen": [21, 22], "search": [0, 22, 31], "sec": [1, 10, 22, 23, 30], "sech": [22, 23, 30], "second": [1, 2, 5, 6, 7, 16, 19, 22, 23, 24, 25, 29, 30, 31, 33, 34], "section": 31, "see": [1, 2, 4, 6, 10, 12, 15, 16, 17, 18, 19, 22, 23, 24, 25, 27, 30, 31, 32, 33], "seen": 22, "sefm": 1, "segfault": 22, "select": 30, "self": [1, 4, 9, 13, 15, 16, 20, 22, 23, 24, 25, 27], "semant": 17, "semest": 2, "send": 22, "sens": [6, 9, 22, 31], "sent": 22, "separ": [2, 16, 18, 22], "sequenc": [2, 9, 13, 18], "sergei": 2, "seri": [1, 2, 4, 11, 16, 17, 19, 22, 23, 24, 25], "serial": 22, "series_func": [16, 23, 25], "session": 18, "set": [1, 2, 6, 7, 8, 9, 10, 13, 15, 17, 18, 19, 20, 22, 23, 24, 29, 30, 31, 32, 33], "set_random_se": [23, 30], "set_real_precis": 1, "set_series_precis": 22, "set_verbos": 22, "sever": [5, 12, 22, 24], "sf": 1, "sfunction_serial_dict": 22, "sgn": [22, 30], "shape": 10, "share": 31, "shift": 1, "shorter": 22, "shortest": 13, "should": [2, 5, 9, 16, 17, 18, 22, 23, 24, 25, 30, 31, 32], "show": [2, 4, 7, 8, 9, 10, 13, 14, 15, 17, 18, 22, 27, 31], "show_method": 2, "shown": [10, 22], "shrink": 10, "si": 34, "si_prefix": [22, 34], "side": [1, 2, 4, 18, 22, 32], "sigma": [2, 16, 22], "sign": [7, 17, 18, 22, 27, 30], "signific": 10, "similar": [2, 17, 22, 32], "similarli": 1, "simpl": [1, 2, 8, 14, 18, 22, 31, 32], "simpler": 22, "simplest": [22, 24], "simpli": [1, 10], "simplif": [1, 4, 17, 22], "simplifi": [1, 4, 10, 12, 17, 18, 22, 23, 27, 31], "simplify_factori": 22, "simplify_ful": [17, 22, 23], "simplify_hypergeometr": 22, "simplify_log": 22, "simplify_r": 22, "simplify_rectform": 22, "simplify_trig": 22, "sin": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32], "sin_integr": 30, "sinc": [1, 2, 4, 9, 11, 16, 18, 22, 23, 24, 27, 31, 32], "sine": [13, 22], "singl": [1, 16, 22, 23, 31], "singular": [2, 6, 22], "sinh": [1, 12, 17, 22, 23, 30, 31], "sinh_integr": 30, "situat": [27, 31], "size": [2, 6, 9, 10, 15, 22, 30], "skew": 10, "slice": [15, 22], "slightli": [13, 30], "slope": 2, "slope_field": 2, "slow": [9, 22, 30], "slowli": [1, 10], "small": [1, 10, 30, 31], "smaller": 22, "smallest": 22, "smooth": 6, "so": [1, 2, 4, 6, 9, 15, 18, 20, 22, 23, 24, 27, 30, 31, 32], "softwar": 2, "sol": [2, 22, 31], "soln": [18, 22, 31], "solni": 2, "solnx": 2, "solut": [1, 2, 9, 17, 18, 22, 31], "solution_dict": [22, 31], "solv": [0, 1, 17, 18, 22, 32], "solve_diophantin": [22, 31], "solve_ineq": 31, "solve_ineq_fouri": 31, "solve_ineq_r": 31, "solve_ineq_univar": 31, "solve_mod": 31, "solve_rat_ineq": 31, "solver": [2, 9, 22, 31], "some": [1, 2, 4, 9, 10, 11, 12, 13, 15, 16, 17, 18, 21, 22, 29, 31, 34], "some_funct": 30, "some_vari": 32, "someth": [18, 19, 22, 31], "sometim": [1, 2, 10, 18, 22, 27], "somewhat": [13, 17, 22], "sort": [7, 17, 18, 19, 20, 22, 25, 27, 30, 31], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "sourceforg": [12, 17, 31], "space": [3, 9, 10, 13, 16, 17, 22, 32], "spam": 1, "spars": 22, "special": [24, 32, 34], "specif": [1, 4, 10, 18, 22], "specifi": [1, 2, 6, 9, 10, 13, 14, 16, 18, 22, 23, 24, 25, 27, 29, 30, 32, 33], "speed": 8, "spherical_bessel_i": 30, "spherical_bessel_j": 30, "spherical_hankel1": 30, "spherical_hankel2": 30, "spherical_harmon": 30, "spiderweb": 10, "spkg": [2, 27], "spline": [7, 8, 9, 10, 13, 14], "split": [2, 22, 31], "spoke": 10, "spot": 10, "sqrt": [1, 2, 4, 6, 10, 12, 13, 17, 18, 19, 22, 23, 26, 27, 28, 31], "sqrt2": 22, "sqrt3": 17, "squar": [8, 10, 22, 34], "square_met": 34, "sr": [1, 3, 6, 12, 16, 17, 18, 20, 22, 23, 29, 30, 31, 32, 33], "sr_parser": 1, "srang": 2, "st": 1, "stabl": 1, "stack": 18, "stackabl": 18, "stai": 24, "standard": [1, 10, 12, 17, 22], "standard_devi": 17, "start": [2, 5, 9, 22, 24, 31, 32], "startup": 16, "stat": 13, "statement": [12, 18], "std": 30, "stein": [1, 6, 13, 15, 20, 22, 31, 34], "step": [1, 2, 9, 22], "stephan": 22, "stick": 17, "stieltj": 30, "stiff": 2, "still": [20, 22, 24, 27], "stoer": 9, "stop": 22, "store": [9, 22], "str": [18, 22], "str_to_unit": 34, "straight": 22, "straightforward": 22, "strang": 22, "stratifi": 6, "strict": 30, "strict_weak_ord": 30, "string": [1, 2, 9, 16, 18, 21, 22, 24, 28, 31, 32, 34], "string_length": [21, 22], "string_to_list_of_solut": 31, "structur": [3, 22], "struve_h": 30, "struve_l": 30, "style": 15, "sub": [1, 11, 14, 22, 23, 30, 31, 32], "subclass": [23, 24], "subexpress": 22, "subinterv": 1, "subject": 22, "sublist": 30, "subpart": 22, "subr": [0, 32], "subs_dict": [22, 23], "subsequ": [9, 18], "subset": [1, 22], "subsmap": 22, "substitut": [1, 2, 16, 18, 22, 32], "substitute_funct": [16, 22, 23, 25], "substitutefunct": 23, "substitution_delai": 22, "substitutionmap": 22, "subtract": [22, 31], "subtract_from_both_sid": 22, "subtre": 22, "succe": 24, "succeed": 22, "success": 23, "suffic": 22, "suffici": 23, "suffix": [1, 9], "suggest": 31, "sui": 16, "suitabl": [1, 22], "sum": [1, 4, 15, 16, 17, 18, 19, 22, 23, 25, 29, 30, 32], "sum_": [1, 13, 22], "sum_k": 22, "summabl": 22, "summand": 22, "summat": [1, 22], "super": 22, "superclass": 24, "supersin": [16, 23], "suppli": [9, 10, 22, 25], "support": [7, 8, 10, 16, 18, 22, 23, 24, 25, 31, 33], "suppos": [22, 30], "sure": [22, 24], "surpris": 22, "suspect": 31, "switch": [2, 7, 22, 31], "sy": 31, "sym": 1, "symbench": 19, "symbol": [2, 4, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19, 21, 26, 28, 29, 30, 34], "symbolic_express": [1, 2, 3, 4, 6, 10, 12, 16, 18, 19, 20, 22, 23, 26, 27, 31], "symbolic_expression_from_maxima_str": 1, "symbolic_expression_from_str": 1, "symbolic_i": 22, "symbolic_product": 1, "symbolic_sum": 1, "symbolicconstantssubr": 33, "symbolicequ": 2, "symbolicexpress": [1, 20], "symbolicfunct": [22, 24], "symbolicr": [20, 22, 32, 33], "symbolicseri": 22, "symbolicsubr": 33, "symbolicsubringacceptingvar": 33, "symbolicsubringacceptingvarsfunctor": 33, "symbolicsubringfactori": 33, "symbolicsubringrejectingvar": 33, "symbolicsubringrejectingvarsfunctor": 33, "symmetr": 18, "symmetricgroup": 13, "sympi": [1, 22, 26, 27, 31, 32], "sympifi": 11, "sympy_integr": 26, "synonym": 1, "synopsi": 22, "syntax": [1, 4, 17, 18, 22, 27], "system": [1, 2, 9, 16, 17, 18, 22, 23, 25, 31], "sz": 10, "sz0": 10, "sz1": 10, "szego": 10, "t": [1, 2, 4, 5, 8, 9, 10, 12, 13, 14, 16, 17, 18, 20, 22, 23, 24, 25, 28, 31, 32, 33, 34], "t0": [1, 2, 22, 32], "t0_2": [22, 32], "t1": [2, 10, 11, 22, 32], "t2": [10, 11, 22], "t_0": [2, 9], "t_1": [2, 9], "t_n": 9, "t_span": 9, "tab": [2, 28], "tabera": 15, "tabl": [2, 22, 34], "take": [1, 2, 9, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30], "taken": [2, 5, 9, 12, 13, 16, 22, 29], "tan": [4, 11, 12, 17, 22, 23, 30], "tangent": [22, 23], "tanh": [1, 22, 23, 30], "target": [22, 34], "taylor": [1, 2, 4, 10, 11, 17, 22], "tcrit": 2, "tderivative_func": [16, 23, 25], "techniqu": 31, "ted": 22, "temp_var": 32, "temperatur": [22, 34], "tempfil": [1, 9], "temporari": [18, 22, 23, 32], "temporarili": 18, "temporaryvari": 32, "tend": 22, "term": [1, 2, 4, 10, 16, 17, 22, 23], "termin": 22, "test": [0, 1, 2, 6, 9, 10, 11, 13, 17, 18, 19, 22, 24, 31], "test1": 24, "test2": 24, "test_binomi": 22, "test_rel": 22, "test_relation_maxima": 31, "test_symbolic_expression_ord": 30, "testyaca": 17, "text": [1, 22], "textrm": 22, "th": [2, 5, 7, 9, 13, 17, 22, 32], "than": [1, 2, 7, 10, 19, 22, 31], "thank": 20, "the_symbolicr": 32, "thei": [2, 6, 10, 12, 13, 17, 22, 23, 30, 31, 34], "them": [2, 5, 16, 17, 20, 22, 31, 34], "themselv": 32, "theorem": [1, 22, 27, 31], "theori": [6, 13], "therefor": [10, 18, 22], "thereof": [1, 22], "theta": [1, 2, 10, 12, 16, 18, 22], "theta2": 32, "thi": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34], "thick": [2, 4, 10, 22], "thing": [4, 10, 12, 17, 22], "think": 13, "third": [2, 22, 32], "those": [10, 18, 22, 24, 30], "though": [17, 22, 34], "three": [1, 2, 7, 16, 21, 24, 30], "through": [1, 4, 7, 9, 22, 24, 31], "throw": 22, "thu": [1, 2, 17, 22], "tide": 2, "time": [1, 2, 4, 9, 10, 12, 14, 15, 19, 22, 27, 30, 31, 34], "to_gamma": 22, "to_poly_solv": [17, 22, 31], "todo": [12, 19], "togeth": [20, 22], "toi": 31, "tol": [2, 6, 15, 22, 31], "tolab": 2, "toler": [2, 6, 9, 22], "tolerant_is_symbol": 22, "tolrel": 2, "tom": 1, "too": [1, 4], "top": [1, 22, 30], "toplevel": 22, "topmost": 22, "total": 9, "total_count": 30, "touch": [16, 23], "tp0": 10, "tp1": 10, "traceback": [1, 2, 4, 6, 7, 12, 16, 18, 22, 23, 24, 25, 27, 31, 33, 34], "tradit": 10, "trail": 22, "trailing_coeff": 22, "trailing_coeffici": 22, "transact": 2, "transcendent": 1, "transform": [0, 1, 2, 17, 22], "transit": 30, "translat": [18, 31], "travel": 34, "travers": 22, "treat": 22, "tree": 23, "tri": [22, 30], "trick": 31, "trig": [1, 11, 22], "trig_expand": [22, 23], "trig_reduc": 22, "trig_simplifi": [17, 22], "trigger": 22, "trigonometr": [22, 23, 27, 31], "tripl": 22, "trivial": [22, 31], "true": [1, 2, 3, 4, 10, 11, 13, 15, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "true_count": 30, "truediv": [23, 30], "truncat": [1, 2, 4, 22], "truth": [1, 18], "try": [1, 9, 18, 22, 23, 24, 31, 34], "tt": 22, "tukei": 15, "tupl": [1, 2, 3, 6, 8, 9, 10, 16, 19, 20, 22, 23, 27, 30, 31, 32, 33], "turn": [1, 2, 5, 12, 18, 22], "tutori": [2, 11, 22, 34], "twice": 29, "twinprim": 30, "two": [1, 2, 4, 5, 6, 7, 9, 13, 15, 16, 18, 22, 23, 24, 30, 31], "txy": 2, "ty": 2, "type": [0, 1, 2, 3, 9, 10, 11, 12, 13, 14, 15, 16, 18, 22, 24, 28, 29, 30, 31, 32, 34], "typeerror": [1, 16, 22, 23, 24, 25, 31], "typeset": [16, 22, 23], "typic": [18, 22, 23], "u": [1, 2, 3, 4, 5, 6, 9, 12, 16, 19, 22, 24, 28, 32], "ui": 9, "unabl": [1, 2, 22, 23, 27], "unbound": 22, "und": 1, "undefin": 1, "under": [13, 22], "underflow": 6, "underli": [1, 7, 22, 29, 31], "underneath": 7, "underscor": 2, "underscoresagemorph": 32, "understand": [1, 22], "unevalu": [4, 16, 22, 23, 24, 25], "unexpect": 22, "unfortun": [9, 17], "unhold": [1, 22], "unicod": 11, "uniform": 30, "uniformli": 30, "unify_argu": 20, "uniniti": 22, "uniqu": [18, 22, 32, 33], "uniquefactori": [20, 33], "uniquerepresent": 18, "unit": [0, 1, 10, 22, 32], "unit_content_primit": 22, "unit_derivations_expr": 34, "unit_doc": 34, "unit_step": [22, 30], "unitdict": 34, "unitdoc": 34, "unitexpress": 34, "uniti": 13, "univari": [17, 22, 23], "unknown": [22, 34], "unless": 18, "unmodifi": 22, "unnam": 1, "unpack_operand": 22, "unpickl": [24, 25, 32], "unpickle_funct": [24, 25], "unpickle_wrapp": 24, "unpredict": 22, "unsolv": 31, "unstabl": [22, 23], "unsupport": [16, 22, 23, 25], "until": 18, "unus": 15, "unusu": 10, "up": [1, 9, 13, 22, 24, 31, 32], "updat": [18, 22], "upgrad": 10, "upper": [1, 6, 7, 15, 22, 27], "us": [1, 2, 4, 5, 6, 9, 10, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34], "usabl": [2, 22], "usag": [10, 16, 24], "use_fake_div": 23, "use_grobn": 31, "useabl": 18, "user": [1, 2, 9, 17, 18, 22, 24, 27], "usual": [1, 10, 22, 27, 30], "util": 22, "uwu": 3, "ux": 9, "v": [1, 2, 3, 4, 6, 7, 17, 19, 22, 26, 27, 30, 32, 33, 34], "v1": 30, "v2": 30, "v3": 30, "v_0": 23, "v_1": 23, "vacuum": 34, "valid": [1, 6, 10, 13, 14, 16, 22, 31, 32, 33], "valu": [1, 2, 4, 6, 7, 8, 9, 10, 13, 15, 16, 17, 18, 22, 23, 24, 25, 27, 28, 30, 34], "valueerror": [1, 4, 6, 7, 12, 16, 18, 22, 23, 27, 30, 31, 34], "van": [8, 9, 10], "van_der_pol": 9, "vander": 9, "vandermond": 17, "vanish": [1, 13, 14], "var": [1, 2, 4, 5, 6, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34], "var1": 18, "var2": 18, "var_frac": 30, "variabl": [0, 1, 2, 4, 5, 6, 9, 12, 13, 18, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34], "variad": 22, "variant": 2, "variationofparamet": 2, "varieti": [9, 22], "variou": [1, 10, 17, 22], "vars_in_str": 34, "vastli": 4, "vector": [0, 2, 3, 9, 17, 22, 30], "vega": 6, "verbal": 18, "verbos": [22, 30], "veri": [1, 6, 10, 19, 22, 31], "verifi": [1, 12, 17, 18, 20], "versa": 20, "version": [1, 2, 6, 8, 10, 14, 17, 20, 22, 24, 31, 33], "via": [1, 2, 6, 9, 10, 22, 27, 33], "vice": 20, "view": [1, 22, 32], "viewvc": 31, "vincent": 6, "violat": [18, 22], "visual": 10, "volterra": 2, "volum": 34, "w": [1, 5, 16, 18, 19, 20, 22, 23, 25, 31], "w0": [22, 32], "w1": [22, 32], "w2": 22, "w3": 19, "wa": [1, 2, 9, 10, 16, 22], "wai": [1, 5, 9, 16, 18, 22, 31], "walk": 23, "walker": 23, "want": [1, 4, 5, 6, 9, 10, 21, 22, 30], "warn": [9, 22], "watt": 34, "wavelet": [0, 13], "wavelet_k": [13, 14], "wavelet_typ": 14, "wavelettransform": [13, 14], "we": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34], "weak": 30, "weight": 2, "well": [1, 6, 9, 18, 19, 22, 32, 34], "were": [1, 10, 22], "wester": 0, "what": [10, 22, 24], "when": [1, 6, 7, 13, 16, 17, 18, 20, 22, 23, 24, 25, 27, 31, 32, 34], "whenev": 31, "where": [1, 2, 5, 6, 7, 9, 10, 13, 14, 15, 18, 20, 22, 23, 27, 30, 31], "whether": [1, 2, 9, 18, 22, 30, 32, 33, 34], "which": [0, 1, 2, 4, 5, 6, 7, 9, 10, 13, 14, 17, 18, 20, 22, 23, 24, 27, 29, 30, 31, 32], "while": [0, 10, 22, 30], "who": 17, "whole": 22, "whose": [1, 6, 21, 22, 23, 33], "why": 1, "wiki": [11, 19], "wikipedia": [5, 30], "wild": [22, 32], "wildcard": [22, 32], "wilf": 22, "william": [1, 6, 13, 15, 20, 22, 31, 34], "window": 10, "withcolor": 10, "within": [6, 10, 22, 30], "without": [1, 9, 17, 22, 32, 33], "wolfram": 27, "women": 1, "won": [18, 22, 23, 34], "word": [10, 22], "work": [1, 9, 10, 11, 12, 13, 17, 18, 20, 22, 27, 28, 31, 34], "worthwhil": 31, "would": [2, 9, 10, 17, 18, 19, 21, 23, 34], "wrap": [9, 13, 14, 18, 22], "wrapper": [1, 2, 13, 15, 22, 24, 28], "write": [1, 2, 9, 16, 22, 23, 25], "written": [2, 13, 24], "wrong": [1, 17, 19, 22, 32, 34], "wronskian": 5, "wronskiandetermin": 5, "www": 22, "wz": 22, "wz_certif": 22, "x": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34], "x0": [2, 32], "x1": [1, 2, 6, 32], "x2": [6, 32], "x3": [6, 32], "x4": 6, "x_": 1, "x_0": 2, "x_1": 2, "x_point": 10, "xl": 6, "xmax": [10, 14, 15, 22], "xmin": [10, 14, 15, 22], "xrang": 2, "xstep": 10, "xt": 1, "xthru": 22, "xtol": 22, "xu": 6, "xx": 16, "xy": [2, 7, 22, 23], "y": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 25, 27, 29, 30, 31, 32, 33], "y0": [1, 2, 22], "y01": 2, "y02": 2, "y03": 2, "y1": [1, 2, 22], "y2": [1, 2], "y3": 2, "y_0": [2, 9], "y_1": [2, 9], "y_2": [2, 9], "y_direct": 10, "y_i": 9, "y_n": 9, "yaca": 17, "ye": 17, "year": 34, "yet": [4, 22], "yield": 4, "ymax": [4, 10, 22], "ymin": [4, 10, 14, 15, 22], "you": [1, 2, 4, 5, 9, 10, 16, 18, 20, 22, 23, 24, 25, 27, 30, 31, 34], "your": [1, 5, 6, 9, 22], "yrang": 2, "ystep": 10, "yt": 1, "yy": 16, "z": [1, 2, 3, 4, 6, 10, 12, 16, 17, 18, 19, 20, 22, 23, 25, 27, 30, 31, 32, 33], "z0": 2, "z1": 10, "z1p": 10, "z2": 10, "z2p": 10, "z3": 10, "z3p": 10, "z_valu": 10, "zeilberg": 22, "zero": [1, 4, 6, 13, 17, 18, 22, 30, 31], "zeta": [1, 6, 22, 30], "zeta_n": 13, "zetaderiv": 30, "zip": 2, "zoom": 10, "zval": 10, "zz": [4, 13, 16, 17, 22, 23, 32]}, "titles": ["Symbolic Calculus", "Symbolic Computation", "Solving ordinary differential equations", "Constructor for symbolic expressions", "Functional notation support for common calculus methods", "Calculus functions", "Numerical Integration", "Real Interpolation using GSL", "Complex Interpolation", "Solving ODE numerically by GSL", "Riemann Mapping", "A Sample Session using SymPy", "Calculus Tests and Examples", "Discrete Fourier Transforms", "Discrete Wavelet Transform", "Fast Fourier Transforms Using GSL", "Symbolic variables", "Further examples from Wester\u2019s paper", "Assumptions", "Benchmarks", "Callable Symbolic Expressions", "Complexity Measures", "Symbolic Expressions", "Conversion of symbolic expressions to other types", "Classes for symbolic functions", "Factory for symbolic functions", "TESTS::", "Symbolic Integration", "Access to Maxima methods", "Operators", "Randomized tests of GiNaC / PyNaC", "Symbolic Equations and Inequalities", "The symbolic ring", "Subrings of the Symbolic Ring", "Units of measurement"], "titleterms": {"": 17, "A": 11, "The": [31, 32], "access": 28, "arithmet": 31, "assumpt": [18, 31], "benchmark": 19, "calculu": [0, 4, 5, 12], "callabl": 20, "class": [24, 33], "common": 4, "complex": [8, 21], "comput": 1, "constructor": 3, "convers": 23, "differenti": 2, "discret": [13, 14], "equat": [2, 31], "exampl": [12, 17, 31], "express": [3, 20, 22, 23], "factori": 25, "fast": 15, "fourier": [13, 15], "from": 17, "function": [0, 4, 5, 24, 25], "further": 17, "ginac": 30, "gsl": [7, 9, 15], "hand": 31, "indic": 0, "inequ": 31, "integr": [6, 27], "intern": 0, "interpol": [7, 8], "left": 31, "map": 10, "maxima": 28, "measur": [21, 34], "method": [4, 28, 33], "miscellan": 31, "more": 31, "notat": 4, "numer": [6, 9], "od": 9, "oper": [29, 31], "ordinari": 2, "other": 23, "paper": 17, "pynac": 30, "random": 30, "real": 7, "riemann": 10, "right": 31, "ring": [32, 33], "sampl": 11, "session": 11, "side": 31, "solv": [2, 9, 31], "subr": 33, "substitut": 31, "support": [0, 4], "symbol": [0, 1, 3, 16, 20, 22, 23, 24, 25, 27, 31, 32, 33], "sympi": 11, "tabl": 0, "test": [12, 26, 30], "todo": 13, "transform": [13, 14, 15], "type": 23, "unit": 34, "us": [0, 7, 11, 15], "variabl": 16, "wavelet": 14, "wester": 17}})