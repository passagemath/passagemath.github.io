Search.setIndex({"alltitles": {"1-skeletons of Platonic solids": [[31, null]], "AUTHORS:": [[62, "authors"]], "Algorithm": [[2, "algorithm"], [70, "algorithm"]], "Asteroidal triples": [[2, null]], "Authors": [[43, "authors"], [50, "authors"], [69, "authors"]], "Backends for Sage (di)graphs": [[6, null]], "Bandwidth of undirected graphs": [[41, null]], "Basic graphs": [[25, null]], "Bipartite graphs": [[12, null]], "Branch and Bound algorithm for the vertex separation": [[50, "branch-and-bound-algorithm-for-the-vertex-separation"]], "CGraph and CGraphBackend": [[7, "cgraph-and-cgraphbackend"]], "Cartesian product of graphs \u2013 the recognition problem": [[45, "cartesian-product-of-graphs-the-recognition-problem"]], "Centrality": [[13, null]], "Certificates": [[17, "certificates"]], "Chessboard graphs": [[26, null]], "Chromatic polynomial": [[14, null]], "Classes": [[80, "classes"]], "Classes and methods": [[6, "classes-and-methods"], [10, "classes-and-methods"], [61, "classes-and-methods"]], "Cographs": [[16, null]], "Common digraphs": [[21, null]], "Common graphs": [[52, null]], "Common graphs and digraphs generators (Cython)": [[53, null]], "Compact structure for fast operations on less than 32 vertices": [[44, null]], "Comparability and permutation graphs": [[17, null]], "Connectivity related functions": [[18, null]], "Constructors and databases": [[0, "constructors-and-databases"]], "Convexity properties of graphs": [[19, null]], "Cutwidth": [[43, null]], "Cython functions": [[11, "cython-functions"]], "Data structure": [[4, "data-structure"], [11, "data-structure"]], "Data structures": [[7, "data-structures"]], "Database": [[38, "database"]], "Database of distance regular graphs": [[28, null]], "Database of strongly regular graphs": [[76, null]], "Decomposition by clique minimal separators": [[42, null]], "Definition": [[2, "definition"], [41, "definition"], [64, "definition"], [79, "definition"]], "Definitions": [[70, "definitions"]], "Descriptions": [[62, "descriptions"]], "Directed graphs": [[20, null]], "Distances/shortest paths between all pairs of vertices": [[22, null]], "Domination": [[23, null]], "Edge connectivity": [[24, null]], "Exponential algorithm for cutwidth": [[43, "exponential-algorithm-for-cutwidth"]], "Exponential algorithm for vertex separation": [[50, "exponential-algorithm-for-vertex-separation"]], "Families of graphs derived from classical geometries over finite fields": [[27, null]], "Fast compiled graphs": [[4, null]], "Fast dense graphs": [[5, null]], "Fast sparse graphs": [[8, null]], "Functions": [[2, "functions"], [3, "functions"], [9, "functions"], [13, "functions"], [22, "functions"], [41, "functions"], [54, "functions"], [58, "functions"], [64, "functions"], [65, "functions"], [70, "functions"], [71, "functions"], [76, "functions"], [79, "functions"]], "Functions and methods": [[21, "functions-and-methods"], [52, "functions-and-methods"], [60, "functions-and-methods"]], "Functions for reading/building graphs/digraphs": [[54, null]], "Generation of trees": [[78, null]], "Generators": [[38, "generators"]], "Generic graphs (common to directed/undirected)": [[35, null]], "GenericGraph Cython functions": [[36, null]], "Genus": [[37, null]], "Graph Format": [[38, "graph-format"]], "Graph Theory": [[0, null]], "Graph classes": [[17, "graph-classes"]], "Graph coloring": [[39, null]], "Graph database": [[40, null]], "Graph editor widget": [[51, null]], "Graph objects and methods": [[0, "graph-objects-and-methods"]], "Graph plotting": [[57, null]], "Graph plotting in Javascript with d3.js": [[58, null]], "Graph traversals": [[77, null]], "GraphLatex class and functions": [[55, "graphlatex-class-and-functions"]], "Graphs from the World Map": [[34, null]], "How to use it?": [[62, "how-to-use-it"]], "Hyperbolicity": [[59, null]], "Hypergraph generators": [[60, null]], "Hypergraphs": [[0, "hypergraphs"]], "ISGCI: Information System on Graph Classes and their Inclusions": [[62, null]], "Implementation details": [[17, "implementation-details"]], "Incidence structures (i.e. hypergraphs, i.e. set systems)": [[1, null]], "Inclusions": [[62, "inclusions"]], "Independent sets": [[61, null]], "Index": [[9, "index"]], "Indices and Tables": [[0, "indices-and-tables"]], "Information for developers": [[62, "information-for-developers"]], "Interface to run Boost algorithms": [[3, null]], "Interface with Cliquer (clique-related problems)": [[15, null]], "Intersection graphs": [[30, null]], "Isoperimetric inequalities": [[63, null]], "LaTeX Versions of Graphs": [[55, "latex-versions-of-graphs"]], "LaTeX options for graphs": [[55, null]], "Labels": [[38, "labels"]], "Libraries of algorithms": [[0, "libraries-of-algorithms"]], "Line graphs": [[64, null]], "Lists of graphs": [[56, null]], "Lov\u00e1sz theta-function of graphs": [[65, null]], "Low-level implementation": [[0, "low-level-implementation"]], "MILP formulation for the cutwidth": [[43, "milp-formulation-for-the-cutwidth"]], "MILP formulation for the vertex separation": [[50, "milp-formulation-for-the-vertex-separation"]], "Matching": [[66, null]], "Matching covered graphs": [[67, null]], "Matching polynomial": [[68, null]], "Methods": [[1, "methods"], [15, "methods"], [16, "methods"], [17, "methods"], [18, "methods"], [19, "methods"], [20, "methods"], [23, "methods"], [35, "methods"], [38, "methods"], [39, "methods"], [42, "methods"], [43, "methods"], [45, "methods"], [47, "methods"], [49, "methods"], [50, "methods"], [59, "methods"], [62, "methods"], [66, "methods"], [67, "methods"], [68, "methods"], [69, "methods"], [75, "methods"], [77, "methods"], [81, "methods"]], "Methods and functions": [[73, "methods-and-functions"]], "Modular Decomposition": [[46, null]], "Mutability": [[38, "mutability"]], "Observations": [[70, "observations"]], "Orientations": [[69, null]], "Overview of (di)graph data structures": [[7, null]], "PQ-Trees": [[73, null]], "Partial cubes": [[70, null]], "Path enumeration": [[71, null]], "Predefined classes": [[62, "predefined-classes"]], "Products of graphs": [[45, null]], "Python functions": [[11, "python-functions"]], "Random graphs": [[32, null]], "Rank Decompositions of graphs": [[47, null]], "Recognition algorithm": [[70, "recognition-algorithm"]], "Recognition algorithm for comparability graphs": [[17, "recognition-algorithm-for-comparability-graphs"]], "Recognition of graphs": [[62, "recognition-of-graphs"]], "Root graph": [[64, "root-graph"]], "Sage\u2019s view of ISGCI": [[62, "sage-s-view-of-isgci"]], "Satisfiability of a partial assignment": [[41, "satisfiability-of-a-partial-assignment"]], "Schnyder\u2019s algorithm for straight-line planar embeddings": [[74, null]], "Slice decomposition": [[48, null]], "Solving the matching problem": [[41, "solving-the-matching-problem"]], "Spanning trees": [[75, null]], "Static dense graphs": [[9, null]], "Static sparse graph backend": [[10, null]], "Static sparse graphs": [[11, null]], "Supported formats": [[38, "supported-formats"]], "Technical details": [[11, "technical-details"]], "The algorithm": [[41, "the-algorithm"], [45, "the-algorithm"]], "The backends": [[7, "the-backends"]], "The module\u2019s main function": [[22, "the-module-s-main-function"]], "This module contains the following methods": [[41, "this-module-contains-the-following-methods"]], "To Do": [[45, "to-do"]], "Todo": [[15, "id4"], [24, "id3"], [29, "id25"], [33, "id19"], [33, "id31"], [35, "id23"], [35, "id24"], [35, "id25"], [35, "id33"], [35, "id34"], [38, "id4"], [38, "id58"], [38, "id60"], [40, "id1"], [52, "id60"], [52, "id86"], [52, "id118"], [58, "id1"], [59, "id7"], [62, "id1"], [67, "id2"], [68, "id2"], [75, "id2"], [76, "id30"], [80, "id1"]], "Tree decompositions": [[49, null]], "Tutte polynomial": [[79, null]], "Two classes": [[10, "two-classes"]], "Underlying Data Structure": [[5, "underlying-data-structure"], [8, "underlying-data-structure"]], "Undirected graphs": [[38, null]], "Usage Introduction": [[5, "usage-introduction"], [8, "usage-introduction"]], "Various families of graphs": [[29, null]], "Various small graphs": [[33, null]], "Vertex separation": [[50, null]], "View classes": [[80, null]], "Visualization": [[38, "visualization"]], "Weakly chordal graphs": [[81, null]], "What is the point ?": [[11, "what-is-the-point"]], "What is this module used for ?": [[11, "what-is-this-module-used-for"]], "Wrapper for Boyer\u2019s (C) planarity algorithm": [[72, null]]}, "docnames": ["index", "sage/combinat/designs/incidence_structures", "sage/graphs/asteroidal_triples", "sage/graphs/base/boost_graph", "sage/graphs/base/c_graph", "sage/graphs/base/dense_graph", "sage/graphs/base/graph_backends", "sage/graphs/base/overview", "sage/graphs/base/sparse_graph", "sage/graphs/base/static_dense_graph", "sage/graphs/base/static_sparse_backend", "sage/graphs/base/static_sparse_graph", "sage/graphs/bipartite_graph", "sage/graphs/centrality", "sage/graphs/chrompoly", "sage/graphs/cliquer", "sage/graphs/cographs", "sage/graphs/comparability", "sage/graphs/connectivity", "sage/graphs/convexity_properties", "sage/graphs/digraph", "sage/graphs/digraph_generators", "sage/graphs/distances_all_pairs", "sage/graphs/domination", "sage/graphs/edge_connectivity", "sage/graphs/generators/basic", "sage/graphs/generators/chessboard", "sage/graphs/generators/classical_geometries", "sage/graphs/generators/distance_regular", "sage/graphs/generators/families", "sage/graphs/generators/intersection", "sage/graphs/generators/platonic_solids", "sage/graphs/generators/random", "sage/graphs/generators/smallgraphs", "sage/graphs/generators/world_map", "sage/graphs/generic_graph", "sage/graphs/generic_graph_pyx", "sage/graphs/genus", "sage/graphs/graph", "sage/graphs/graph_coloring", "sage/graphs/graph_database", "sage/graphs/graph_decompositions/bandwidth", "sage/graphs/graph_decompositions/clique_separators", "sage/graphs/graph_decompositions/cutwidth", "sage/graphs/graph_decompositions/fast_digraph", "sage/graphs/graph_decompositions/graph_products", "sage/graphs/graph_decompositions/modular_decomposition", "sage/graphs/graph_decompositions/rankwidth", "sage/graphs/graph_decompositions/slice_decomposition", "sage/graphs/graph_decompositions/tree_decomposition", "sage/graphs/graph_decompositions/vertex_separation", "sage/graphs/graph_editor", "sage/graphs/graph_generators", "sage/graphs/graph_generators_pyx", "sage/graphs/graph_input", "sage/graphs/graph_latex", "sage/graphs/graph_list", "sage/graphs/graph_plot", "sage/graphs/graph_plot_js", "sage/graphs/hyperbolicity", "sage/graphs/hypergraph_generators", "sage/graphs/independent_sets", "sage/graphs/isgci", "sage/graphs/isoperimetric_inequalities", "sage/graphs/line_graph", "sage/graphs/lovasz_theta", "sage/graphs/matching", "sage/graphs/matching_covered_graph", "sage/graphs/matchpoly", "sage/graphs/orientations", "sage/graphs/partial_cube", "sage/graphs/path_enumeration", "sage/graphs/planarity", "sage/graphs/pq_trees", "sage/graphs/schnyder", "sage/graphs/spanning_tree", "sage/graphs/strongly_regular_db", "sage/graphs/traversals", "sage/graphs/trees", "sage/graphs/tutte_polynomial", "sage/graphs/views", "sage/graphs/weakly_chordal"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2}, "filenames": ["index.rst", "sage/combinat/designs/incidence_structures.rst", "sage/graphs/asteroidal_triples.rst", "sage/graphs/base/boost_graph.rst", "sage/graphs/base/c_graph.rst", "sage/graphs/base/dense_graph.rst", "sage/graphs/base/graph_backends.rst", "sage/graphs/base/overview.rst", "sage/graphs/base/sparse_graph.rst", "sage/graphs/base/static_dense_graph.rst", "sage/graphs/base/static_sparse_backend.rst", "sage/graphs/base/static_sparse_graph.rst", "sage/graphs/bipartite_graph.rst", "sage/graphs/centrality.rst", "sage/graphs/chrompoly.rst", "sage/graphs/cliquer.rst", "sage/graphs/cographs.rst", "sage/graphs/comparability.rst", "sage/graphs/connectivity.rst", "sage/graphs/convexity_properties.rst", "sage/graphs/digraph.rst", "sage/graphs/digraph_generators.rst", "sage/graphs/distances_all_pairs.rst", "sage/graphs/domination.rst", "sage/graphs/edge_connectivity.rst", "sage/graphs/generators/basic.rst", "sage/graphs/generators/chessboard.rst", "sage/graphs/generators/classical_geometries.rst", "sage/graphs/generators/distance_regular.rst", "sage/graphs/generators/families.rst", "sage/graphs/generators/intersection.rst", "sage/graphs/generators/platonic_solids.rst", "sage/graphs/generators/random.rst", "sage/graphs/generators/smallgraphs.rst", "sage/graphs/generators/world_map.rst", "sage/graphs/generic_graph.rst", "sage/graphs/generic_graph_pyx.rst", "sage/graphs/genus.rst", "sage/graphs/graph.rst", "sage/graphs/graph_coloring.rst", "sage/graphs/graph_database.rst", "sage/graphs/graph_decompositions/bandwidth.rst", "sage/graphs/graph_decompositions/clique_separators.rst", "sage/graphs/graph_decompositions/cutwidth.rst", "sage/graphs/graph_decompositions/fast_digraph.rst", "sage/graphs/graph_decompositions/graph_products.rst", "sage/graphs/graph_decompositions/modular_decomposition.rst", "sage/graphs/graph_decompositions/rankwidth.rst", "sage/graphs/graph_decompositions/slice_decomposition.rst", "sage/graphs/graph_decompositions/tree_decomposition.rst", "sage/graphs/graph_decompositions/vertex_separation.rst", "sage/graphs/graph_editor.rst", "sage/graphs/graph_generators.rst", "sage/graphs/graph_generators_pyx.rst", "sage/graphs/graph_input.rst", "sage/graphs/graph_latex.rst", "sage/graphs/graph_list.rst", "sage/graphs/graph_plot.rst", "sage/graphs/graph_plot_js.rst", "sage/graphs/hyperbolicity.rst", "sage/graphs/hypergraph_generators.rst", "sage/graphs/independent_sets.rst", "sage/graphs/isgci.rst", "sage/graphs/isoperimetric_inequalities.rst", "sage/graphs/line_graph.rst", "sage/graphs/lovasz_theta.rst", "sage/graphs/matching.rst", "sage/graphs/matching_covered_graph.rst", "sage/graphs/matchpoly.rst", "sage/graphs/orientations.rst", "sage/graphs/partial_cube.rst", "sage/graphs/path_enumeration.rst", "sage/graphs/planarity.rst", "sage/graphs/pq_trees.rst", "sage/graphs/schnyder.rst", "sage/graphs/spanning_tree.rst", "sage/graphs/strongly_regular_db.rst", "sage/graphs/traversals.rst", "sage/graphs/trees.rst", "sage/graphs/tutte_polynomial.rst", "sage/graphs/views.rst", "sage/graphs/weakly_chordal.rst"], "indexentries": {"__eq__() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.__eq__", false]], "__getitem__() (sage.graphs.graph_decompositions.slice_decomposition.slicedecomposition method)": [[48, "sage.graphs.graph_decompositions.slice_decomposition.SliceDecomposition.__getitem__", false]], "active_edges() (sage.graphs.graph_decompositions.slice_decomposition.slicedecomposition method)": [[48, "sage.graphs.graph_decompositions.slice_decomposition.SliceDecomposition.active_edges", false]], "acyclic_edge_coloring() (in module sage.graphs.graph_coloring)": [[39, "sage.graphs.graph_coloring.acyclic_edge_coloring", false]], "acyclic_orientations() (in module sage.graphs.orientations)": [[69, "sage.graphs.orientations.acyclic_orientations", false]], "acyclic_orientations() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.acyclic_orientations", false]], "add_arc() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.add_arc", false]], "add_arc_label() (sage.graphs.base.sparse_graph.sparsegraph method)": [[8, "sage.graphs.base.sparse_graph.SparseGraph.add_arc_label", false]], "add_child() (sage.graphs.cographs.cotree method)": [[16, "sage.graphs.cographs.CoTree.add_child", false]], "add_clique() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.add_clique", false]], "add_cycle() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.add_cycle", false]], "add_edge() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.add_edge", false]], "add_edge() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.add_edge", false]], "add_edge() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.add_edge", false]], "add_edge() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.add_edge", false]], "add_edge() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.add_edge", false]], "add_edge() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.add_edge", false]], "add_edges() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.add_edges", false]], "add_edges() (sage.graphs.base.dense_graph.densegraphbackend method)": [[5, "sage.graphs.base.dense_graph.DenseGraphBackend.add_edges", false]], "add_edges() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.add_edges", false]], "add_edges() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.add_edges", false]], "add_edges() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.add_edges", false]], "add_edges() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.add_edges", false]], "add_edges() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.add_edges", false]], "add_path() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.add_path", false]], "add_vertex() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.add_vertex", false]], "add_vertex() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.add_vertex", false]], "add_vertex() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.add_vertex", false]], "add_vertex() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.add_vertex", false]], "add_vertex() (sage.graphs.base.static_sparse_backend.staticsparsecgraph method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseCGraph.add_vertex", false]], "add_vertex() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.add_vertex", false]], "add_vertex() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.add_vertex", false]], "add_vertex() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.add_vertex", false]], "add_vertices() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.add_vertices", false]], "add_vertices() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.add_vertices", false]], "add_vertices() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.add_vertices", false]], "add_vertices() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.add_vertices", false]], "add_vertices() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.add_vertices", false]], "add_vertices() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.add_vertices", false]], "add_vertices() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.add_vertices", false]], "adjacency_matrix() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.adjacency_matrix", false]], "affineorthogonalpolargraph() (in module sage.graphs.generators.classical_geometries)": [[27, "sage.graphs.generators.classical_geometries.AffineOrthogonalPolarGraph", false]], "affineorthogonalpolargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.AffineOrthogonalPolarGraph", false]], "africamap() (in module sage.graphs.generators.world_map)": [[34, "sage.graphs.generators.world_map.AfricaMap", false]], "africamap() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.AfricaMap", false]], "ahrensszekeresgeneralizedquadranglegraph() (in module sage.graphs.generators.classical_geometries)": [[27, "sage.graphs.generators.classical_geometries.AhrensSzekeresGeneralizedQuadrangleGraph", false]], "ahrensszekeresgeneralizedquadranglegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.AhrensSzekeresGeneralizedQuadrangleGraph", false]], "all_arcs() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.all_arcs", false]], "all_cliques() (in module sage.graphs.cliquer)": [[15, "sage.graphs.cliquer.all_cliques", false]], "all_cliques() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.all_cliques", false]], "all_cycles_iterator() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.all_cycles_iterator", false]], "all_graph_colorings() (in module sage.graphs.graph_coloring)": [[39, "sage.graphs.graph_coloring.all_graph_colorings", false]], "all_max_clique() (in module sage.graphs.cliquer)": [[15, "sage.graphs.cliquer.all_max_clique", false]], "all_paths() (in module sage.graphs.path_enumeration)": [[71, "sage.graphs.path_enumeration.all_paths", false]], "all_paths() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.all_paths", false]], "all_paths_iterator() (in module sage.graphs.path_enumeration)": [[71, "sage.graphs.path_enumeration.all_paths_iterator", false]], "all_paths_iterator() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.all_paths_iterator", false]], "all_simple_cycles() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.all_simple_cycles", false]], "all_simple_paths() (in module sage.graphs.path_enumeration)": [[71, "sage.graphs.path_enumeration.all_simple_paths", false]], "all_simple_paths() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.all_simple_paths", false]], "allow_loops() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.allow_loops", false]], "allow_loops() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.allow_loops", false]], "allow_loops() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.allow_loops", false]], "allow_multiple_edges() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.allow_multiple_edges", false]], "allows_loops() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.allows_loops", false]], "allows_loops() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.allows_loops", false]], "allows_loops() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.allows_loops", false]], "allows_multiple_edges() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.allows_multiple_edges", false]], "alternatingformsgraph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.AlternatingFormsGraph", false]], "alternatingformsgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.AlternatingFormsGraph", false]], "am() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.am", false]], "antipodal_graph() (in module sage.graphs.distances_all_pairs)": [[22, "sage.graphs.distances_all_pairs.antipodal_graph", false]], "antipodal_graph() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.antipodal_graph", false]], "antisymmetric() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.antisymmetric", false]], "apex_vertices() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.apex_vertices", false]], "apparently_feasible_parameters() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.apparently_feasible_parameters", false]], "append_child() (sage.graphs.schnyder.treenode method)": [[74, "sage.graphs.schnyder.TreeNode.append_child", false]], "arboricity() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.arboricity", false]], "arc_label() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.arc_label", false]], "atoms_and_clique_separators() (in module sage.graphs.graph_decompositions.clique_separators)": [[42, "sage.graphs.graph_decompositions.clique_separators.atoms_and_clique_separators", false]], "atoms_and_clique_separators() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.atoms_and_clique_separators", false]], "auslander_reiten_quiver() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.auslander_reiten_quiver", false]], "automorphism_group() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.automorphism_group", false]], "automorphism_group() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.automorphism_group", false]], "average_degree() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.average_degree", false]], "average_distance() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.average_distance", false]], "aztecdiamondgraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.AztecDiamondGraph", false]], "aztecdiamondgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.AztecDiamondGraph", false]], "b_coloring() (in module sage.graphs.graph_coloring)": [[39, "sage.graphs.graph_coloring.b_coloring", false]], "balaban10cage() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.Balaban10Cage", false]], "balaban10cage() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.Balaban10Cage", false]], "balaban11cage() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.Balaban11Cage", false]], "balaban11cage() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.Balaban11Cage", false]], "balancedtree() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.BalancedTree", false]], "balancedtree() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.BalancedTree", false]], "bandwidth() (in module sage.graphs.graph_decompositions.bandwidth)": [[41, "sage.graphs.graph_decompositions.bandwidth.bandwidth", false]], "bandwidth() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.bandwidth", false]], "bandwidth_heuristics() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.bandwidth_heuristics", false]], "barbellgraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.BarbellGraph", false]], "barbellgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.BarbellGraph", false]], "basic (sage.graphs.graph_generators.graphgenerators attribute)": [[52, "sage.graphs.graph_generators.GraphGenerators.basic", false]], "bidiakiscube() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.BidiakisCube", false]], "bidiakiscube() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.BidiakisCube", false]], "bidirectional_dijkstra() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.bidirectional_dijkstra", false]], "bidirectional_dijkstra_special() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.bidirectional_dijkstra_special", false]], "biggssmithgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.BiggsSmithGraph", false]], "biggssmithgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.BiggsSmithGraph", false]], "bilinearformsgraph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.BilinearFormsGraph", false]], "bilinearformsgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.BilinearFormsGraph", false]], "binary_string_from_dig6() (in module sage.graphs.generic_graph_pyx)": [[36, "sage.graphs.generic_graph_pyx.binary_string_from_dig6", false]], "binary_string_from_graph6() (in module sage.graphs.generic_graph_pyx)": [[36, "sage.graphs.generic_graph_pyx.binary_string_from_graph6", false]], "binary_string_to_graph6() (in module sage.graphs.generic_graph_pyx)": [[36, "sage.graphs.generic_graph_pyx.binary_string_to_graph6", false]], "binomialrandomuniform() (sage.graphs.hypergraph_generators.hypergraphgenerators method)": [[60, "sage.graphs.hypergraph_generators.HypergraphGenerators.BinomialRandomUniform", false]], "bipartite_color() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.bipartite_color", false]], "bipartite_double() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.bipartite_double", false]], "bipartite_sets() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.bipartite_sets", false]], "bipartitegraph (class in sage.graphs.bipartite_graph)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph", false]], "bipartition() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.bipartition", false]], "bishopgraph() (in module sage.graphs.generators.chessboard)": [[26, "sage.graphs.generators.chessboard.BishopGraph", false]], "bishopgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.BishopGraph", false]], "biwheelgraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.BiwheelGraph", false]], "biwheelgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.BiwheelGraph", false]], "blanusafirstsnarkgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.BlanusaFirstSnarkGraph", false]], "blanusafirstsnarkgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.BlanusaFirstSnarkGraph", false]], "blanusasecondsnarkgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.BlanusaSecondSnarkGraph", false]], "blanusasecondsnarkgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.BlanusaSecondSnarkGraph", false]], "block_sizes() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.block_sizes", false]], "blocks() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.blocks", false]], "blocks_and_cut_vertices() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.blocks_and_cut_vertices", false]], "blocks_and_cut_vertices() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.blocks_and_cut_vertices", false]], "blocks_and_cut_vertices() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.blocks_and_cut_vertices", false]], "blocks_and_cuts_tree() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.blocks_and_cuts_tree", false]], "blocks_and_cuts_tree() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.blocks_and_cuts_tree", false]], "blossoming_contour() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.blossoming_contour", false]], "boruvka() (in module sage.graphs.spanning_tree)": [[75, "sage.graphs.spanning_tree.boruvka", false]], "bounded_outdegree_orientation() (in module sage.graphs.orientations)": [[69, "sage.graphs.orientations.bounded_outdegree_orientation", false]], "bounded_outdegree_orientation() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.bounded_outdegree_orientation", false]], "breadth_first_level_search() (in module sage.graphs.partial_cube)": [[70, "sage.graphs.partial_cube.breadth_first_level_search", false]], "breadth_first_search() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.breadth_first_search", false]], "breadth_first_search() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.breadth_first_search", false]], "bridges() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.bridges", false]], "bridges() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.bridges", false]], "brinkmanngraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.BrinkmannGraph", false]], "brinkmanngraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.BrinkmannGraph", false]], "brouwerhaemersgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.BrouwerHaemersGraph", false]], "brouwerhaemersgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.BrouwerHaemersGraph", false]], "bubblesortgraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.BubbleSortGraph", false]], "bubblesortgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.BubbleSortGraph", false]], "buckyball() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.BuckyBall", false]], "buckyball() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.BuckyBall", false]], "bullgraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.BullGraph", false]], "bullgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.BullGraph", false]], "butterflygraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.ButterflyGraph", false]], "butterflygraph() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.ButterflyGraph", false]], "butterflygraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.ButterflyGraph", false]], "c_graph() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.c_graph", false]], "caifurerimmermangraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.CaiFurerImmermanGraph", false]], "caifurerimmermangraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.CaiFurerImmermanGraph", false]], "camerongraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.CameronGraph", false]], "camerongraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.CameronGraph", false]], "canaug_traverse_edge() (in module sage.graphs.graph_generators)": [[52, "sage.graphs.graph_generators.canaug_traverse_edge", false]], "canaug_traverse_vert() (in module sage.graphs.graph_generators)": [[52, "sage.graphs.graph_generators.canaug_traverse_vert", false]], "canonical_label() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.canonical_label", false]], "canonical_label() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.canonical_label", false]], "canonical_label() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.canonical_label", false]], "canonical_partition() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.canonical_partition", false]], "cardinality() (sage.graphs.generic_graph_pyx.subgraphsearch method)": [[36, "sage.graphs.generic_graph_pyx.SubgraphSearch.cardinality", false]], "cardinality() (sage.graphs.independent_sets.independentsets method)": [[61, "sage.graphs.independent_sets.IndependentSets.cardinality", false]], "cardinality() (sage.graphs.pq_trees.p method)": [[73, "sage.graphs.pq_trees.P.cardinality", false]], "cardinality() (sage.graphs.pq_trees.q method)": [[73, "sage.graphs.pq_trees.Q.cardinality", false]], "cartesian_product() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.cartesian_product", false]], "categorical_product() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.categorical_product", false]], "cell120() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.Cell120", false]], "cell120() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.Cell120", false]], "cell600() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.Cell600", false]], "cell600() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.Cell600", false]], "center() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.center", false]], "center() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.center", false]], "centrality_betweenness() (in module sage.graphs.centrality)": [[13, "sage.graphs.centrality.centrality_betweenness", false]], "centrality_betweenness() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.centrality_betweenness", false]], "centrality_closeness() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.centrality_closeness", false]], "centrality_closeness_random_k() (in module sage.graphs.centrality)": [[13, "sage.graphs.centrality.centrality_closeness_random_k", false]], "centrality_closeness_top_k() (in module sage.graphs.centrality)": [[13, "sage.graphs.centrality.centrality_closeness_top_k", false]], "centrality_degree() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.centrality_degree", false]], "cgraph (class in sage.graphs.base.c_graph)": [[4, "sage.graphs.base.c_graph.CGraph", false]], "cgraphbackend (class in sage.graphs.base.c_graph)": [[4, "sage.graphs.base.c_graph.CGraphBackend", false]], "chang_graphs() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.chang_graphs", false]], "chang_graphs() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.chang_graphs", false]], "change_label() (in module sage.graphs.cographs)": [[16, "sage.graphs.cographs.change_label", false]], "characteristic_polynomial() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.characteristic_polynomial", false]], "charpoly() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.charpoly", false]], "check_algos_are_equivalent() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.check_algos_are_equivalent", false]], "check_aut() (in module sage.graphs.graph_generators)": [[52, "sage.graphs.graph_generators.check_aut", false]], "check_aut_edge() (in module sage.graphs.graph_generators)": [[52, "sage.graphs.graph_generators.check_aut_edge", false]], "check_tkz_graph() (in module sage.graphs.graph_latex)": [[55, "sage.graphs.graph_latex.check_tkz_graph", false]], "check_vertex() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.check_vertex", false]], "cheeger_constant() (in module sage.graphs.isoperimetric_inequalities)": [[63, "sage.graphs.isoperimetric_inequalities.cheeger_constant", false]], "cheeger_constant() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.cheeger_constant", false]], "chessboard (sage.graphs.graph_generators.graphgenerators attribute)": [[52, "sage.graphs.graph_generators.GraphGenerators.chessboard", false]], "chessboardgraphgenerator() (in module sage.graphs.generators.chessboard)": [[26, "sage.graphs.generators.chessboard.ChessboardGraphGenerator", false]], "chessboardgraphgenerator() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.ChessboardGraphGenerator", false]], "children_node_type() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.children_node_type", false]], "chromatic_index() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.chromatic_index", false]], "chromatic_number() (in module sage.graphs.graph_coloring)": [[39, "sage.graphs.graph_coloring.chromatic_number", false]], "chromatic_number() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.chromatic_number", false]], "chromatic_polynomial() (in module sage.graphs.chrompoly)": [[14, "sage.graphs.chrompoly.chromatic_polynomial", false]], "chromatic_polynomial() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.chromatic_polynomial", false]], "chromatic_polynomial_with_cache() (in module sage.graphs.chrompoly)": [[14, "sage.graphs.chrompoly.chromatic_polynomial_with_cache", false]], "chromatic_quasisymmetric_function() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.chromatic_quasisymmetric_function", false]], "chromatic_symmetric_function() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.chromatic_symmetric_function", false]], "chvatalgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.ChvatalGraph", false]], "chvatalgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.ChvatalGraph", false]], "circuit() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.Circuit", false]], "circulant() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.Circulant", false]], "circulantgraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.CirculantGraph", false]], "circulantgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.CirculantGraph", false]], "circularladdergraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.CircularLadderGraph", false]], "circularladdergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.CircularLadderGraph", false]], "classes() (sage.graphs.isgci.graphclasses method)": [[62, "sage.graphs.isgci.GraphClasses.classes", false]], "classical_geometries (sage.graphs.graph_generators.graphgenerators attribute)": [[52, "sage.graphs.graph_generators.GraphGenerators.classical_geometries", false]], "clawgraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.ClawGraph", false]], "clawgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.ClawGraph", false]], "clear() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.clear", false]], "cleave() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.cleave", false]], "cleave() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.cleave", false]], "clebschgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.ClebschGraph", false]], "clebschgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.ClebschGraph", false]], "clique_complex() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.clique_complex", false]], "clique_maximum() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.clique_maximum", false]], "clique_number() (in module sage.graphs.cliquer)": [[15, "sage.graphs.cliquer.clique_number", false]], "clique_number() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.clique_number", false]], "clique_polynomial() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.clique_polynomial", false]], "cliques_containing_vertex() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.cliques_containing_vertex", false]], "cliques_get_clique_bipartite() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.cliques_get_clique_bipartite", false]], "cliques_get_max_clique_graph() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.cliques_get_max_clique_graph", false]], "cliques_maximal() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.cliques_maximal", false]], "cliques_maximum() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.cliques_maximum", false]], "cliques_number_of() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.cliques_number_of", false]], "cliques_vertex_clique_number() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.cliques_vertex_clique_number", false]], "cluster_transitivity() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.cluster_transitivity", false]], "cluster_triangles() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.cluster_triangles", false]], "clustering_average() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.clustering_average", false]], "clustering_coeff() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.clustering_coeff", false]], "clustering_coeff() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.clustering_coeff", false]], "coarsest_equitable_refinement() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.coarsest_equitable_refinement", false]], "cocliques_hoffmannsingleton() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.cocliques_HoffmannSingleton", false]], "cocliques_hoffmannsingleton() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.cocliques_HoffmannSingleton", false]], "cographs() (in module sage.graphs.cographs)": [[16, "sage.graphs.cographs.cographs", false]], "cographs() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.cographs", false]], "cographs_module (sage.graphs.graph_generators.graphgenerators attribute)": [[52, "sage.graphs.graph_generators.GraphGenerators.cographs_module", false]], "coloring() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.coloring", false]], "coloring() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.coloring", false]], "common_neighbors_matrix() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.common_neighbors_matrix", false]], "complement() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.complement", false]], "complement() (sage.graphs.base.dense_graph.densegraph method)": [[5, "sage.graphs.base.dense_graph.DenseGraph.complement", false]], "complement() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.complement", false]], "complement() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.complement", false]], "complement_bipartite() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.complement_bipartite", false]], "complete() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.Complete", false]], "complete_poly() (in module sage.graphs.matchpoly)": [[68, "sage.graphs.matchpoly.complete_poly", false]], "completebipartitegraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.CompleteBipartiteGraph", false]], "completebipartitegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.CompleteBipartiteGraph", false]], "completegraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.CompleteGraph", false]], "completegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.CompleteGraph", false]], "completemultipartitegraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.CompleteMultipartiteGraph", false]], "completemultipartitegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.CompleteMultipartiteGraph", false]], "completeuniform() (sage.graphs.hypergraph_generators.hypergraphgenerators method)": [[60, "sage.graphs.hypergraph_generators.HypergraphGenerators.CompleteUniform", false]], "compute_depth_of_self_and_children() (sage.graphs.schnyder.treenode method)": [[74, "sage.graphs.schnyder.TreeNode.compute_depth_of_self_and_children", false]], "compute_number_of_descendants() (sage.graphs.schnyder.treenode method)": [[74, "sage.graphs.schnyder.TreeNode.compute_number_of_descendants", false]], "connected_component_containing_vertex() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.connected_component_containing_vertex", false]], "connected_component_containing_vertex() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.connected_component_containing_vertex", false]], "connected_components() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.connected_components", false]], "connected_components() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.connected_components", false]], "connected_components_number() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.connected_components_number", false]], "connected_components_number() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.connected_components_number", false]], "connected_components_sizes() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.connected_components_sizes", false]], "connected_components_sizes() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.connected_components_sizes", false]], "connected_components_subgraphs() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.connected_components_subgraphs", false]], "connected_components_subgraphs() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.connected_components_subgraphs", false]], "connected_full_subgraphs() (in module sage.graphs.base.static_dense_graph)": [[9, "sage.graphs.base.static_dense_graph.connected_full_subgraphs", false]], "connected_subgraph_iterator() (in module sage.graphs.base.static_dense_graph)": [[9, "sage.graphs.base.static_dense_graph.connected_subgraph_iterator", false]], "connected_subgraph_iterator() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.connected_subgraph_iterator", false]], "connecting_nodes() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.connecting_nodes", false]], "contract_edge() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.contract_edge", false]], "contract_edges() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.contract_edges", false]], "contracted_edge() (in module sage.graphs.tutte_polynomial)": [[79, "sage.graphs.tutte_polynomial.contracted_edge", false]], "convexity_properties() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.convexity_properties", false]], "convexityproperties (class in sage.graphs.convexity_properties)": [[19, "sage.graphs.convexity_properties.ConvexityProperties", false]], "conwaysmith_for_3s7() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.ConwaySmith_for_3S7", false]], "conwaysmith_for_3s7() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.ConwaySmith_for_3S7", false]], "copy() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.copy", false]], "copy() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.copy", false]], "copy_tree() (sage.graphs.cographs.cotree method)": [[16, "sage.graphs.cographs.CoTree.copy_tree", false]], "cores() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.cores", false]], "corneil_habib_paul_tedder_algorithm() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.corneil_habib_paul_tedder_algorithm", false]], "correlationgraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.CorrelationGraph", false]], "correlationgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.CorrelationGraph", false]], "cospectral_graphs() (sage.graphs.graph_generators.graphgenerators method)": [[52, "sage.graphs.graph_generators.GraphGenerators.cospectral_graphs", false]], "cossidentepenttilagraph() (in module sage.graphs.generators.classical_geometries)": [[27, "sage.graphs.generators.classical_geometries.CossidentePenttilaGraph", false]], "cossidentepenttilagraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.CossidentePenttilaGraph", false]], "cotree (class in sage.graphs.cographs)": [[16, "sage.graphs.cographs.CoTree", false]], "coxetergraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.CoxeterGraph", false]], "coxetergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.CoxeterGraph", false]], "create_leaf() (sage.graphs.graph_decompositions.modular_decomposition.node class method)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.Node.create_leaf", false]], "crossing_number() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.crossing_number", false]], "cubeconnectedcycle() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.CubeConnectedCycle", false]], "cubeconnectedcycle() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.CubeConnectedCycle", false]], "cubegraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.CubeGraph", false]], "cubegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.CubeGraph", false]], "cubeplexgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.CubeplexGraph", false]], "cubeplexgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.CubeplexGraph", false]], "current_allocation() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.current_allocation", false]], "cutwidth() (in module sage.graphs.graph_decompositions.cutwidth)": [[43, "sage.graphs.graph_decompositions.cutwidth.cutwidth", false]], "cutwidth() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.cutwidth", false]], "cutwidth_dyn() (in module sage.graphs.graph_decompositions.cutwidth)": [[43, "sage.graphs.graph_decompositions.cutwidth.cutwidth_dyn", false]], "cutwidth_milp() (in module sage.graphs.graph_decompositions.cutwidth)": [[43, "sage.graphs.graph_decompositions.cutwidth.cutwidth_MILP", false]], "cycle_basis() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.cycle_basis", false]], "cyclegraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.CycleGraph", false]], "cyclegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.CycleGraph", false]], "dartgraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.DartGraph", false]], "dartgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.DartGraph", false]], "data_to_degseq() (in module sage.graphs.graph_database)": [[40, "sage.graphs.graph_database.data_to_degseq", false]], "debruijn() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.DeBruijn", false]], "degree() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.degree", false]], "degree() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.degree", false]], "degree() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.degree", false]], "degree() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.degree", false]], "degree() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.degree", false]], "degree_constrained_subgraph() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.degree_constrained_subgraph", false]], "degree_histogram() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.degree_histogram", false]], "degree_iterator() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.degree_iterator", false]], "degree_polynomial() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.degree_polynomial", false]], "degree_sequence (sage.graphs.graph_generators.graphgenerators attribute)": [[52, "sage.graphs.graph_generators.GraphGenerators.degree_sequence", false]], "degree_sequence() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.degree_sequence", false]], "degree_to_cell() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.degree_to_cell", false]], "degrees() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.degrees", false]], "degreesequence() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.DegreeSequence", false]], "degreesequencebipartite() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.DegreeSequenceBipartite", false]], "degreesequenceconfigurationmodel() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.DegreeSequenceConfigurationModel", false]], "degreesequenceexpected() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.DegreeSequenceExpected", false]], "degreesequencetree() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.DegreeSequenceTree", false]], "degseq_to_data() (in module sage.graphs.graph_database)": [[40, "sage.graphs.graph_database.degseq_to_data", false]], "dejtergraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.DejterGraph", false]], "dejtergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.DejterGraph", false]], "del_all_arcs() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.del_all_arcs", false]], "del_arc_label() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.del_arc_label", false]], "del_edge() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.del_edge", false]], "del_edge() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.del_edge", false]], "del_edge() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.del_edge", false]], "del_edges() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.del_edges", false]], "del_edges() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.del_edges", false]], "del_vertex() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.del_vertex", false]], "del_vertex() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.del_vertex", false]], "del_vertex() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.del_vertex", false]], "del_vertex() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.del_vertex", false]], "del_vertex() (sage.graphs.base.static_sparse_backend.staticsparsecgraph method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseCGraph.del_vertex", false]], "del_vertices() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.del_vertices", false]], "del_vertices() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.del_vertices", false]], "del_vertices() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.del_vertices", false]], "delete_edge() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.delete_edge", false]], "delete_edges() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.delete_edges", false]], "delete_multiedge() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.delete_multiedge", false]], "delete_vertex() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.delete_vertex", false]], "delete_vertex() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.delete_vertex", false]], "delete_vertex() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.delete_vertex", false]], "delete_vertices() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.delete_vertices", false]], "delete_vertices() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.delete_vertices", false]], "delete_vertices() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.delete_vertices", false]], "densegraph (class in sage.graphs.base.dense_graph)": [[5, "sage.graphs.base.dense_graph.DenseGraph", false]], "densegraphbackend (class in sage.graphs.base.dense_graph)": [[5, "sage.graphs.base.dense_graph.DenseGraphBackend", false]], "density() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.density", false]], "depth_first_search() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.depth_first_search", false]], "depth_first_search() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.depth_first_search", false]], "depth_first_traversal() (in module sage.graphs.partial_cube)": [[70, "sage.graphs.partial_cube.depth_first_traversal", false]], "desarguesgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.DesarguesGraph", false]], "desarguesgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.DesarguesGraph", false]], "description() (sage.graphs.isgci.graphclass method)": [[62, "sage.graphs.isgci.GraphClass.description", false]], "diameter() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.diameter", false]], "diameter() (in module sage.graphs.distances_all_pairs)": [[22, "sage.graphs.distances_all_pairs.diameter", false]], "diameter() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.diameter", false]], "diameter() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.diameter", false]], "diameter_dhv() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.diameter_DHV", false]], "diamondgraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.DiamondGraph", false]], "diamondgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.DiamondGraph", false]], "dig6_string() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.dig6_string", false]], "digraph (class in sage.graphs.digraph)": [[20, "sage.graphs.digraph.DiGraph", false]], "digraphgenerators (class in sage.graphs.digraph_generators)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators", false]], "dipolegraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.DipoleGraph", false]], "dipolegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.DipoleGraph", false]], "disjoint_routed_paths() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.disjoint_routed_paths", false]], "disjoint_union() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.disjoint_union", false]], "disjunctive_product() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.disjunctive_product", false]], "distance() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.distance", false]], "distance_3_doubly_truncated_golay_code_graph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.distance_3_doubly_truncated_Golay_code_graph", false]], "distance_3_doubly_truncated_golay_code_graph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.distance_3_doubly_truncated_Golay_code_graph", false]], "distance_all_pairs() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.distance_all_pairs", false]], "distance_graph() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.distance_graph", false]], "distance_matrix() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.distance_matrix", false]], "distance_regular (sage.graphs.graph_generators.graphgenerators attribute)": [[52, "sage.graphs.graph_generators.GraphGenerators.distance_regular", false]], "distance_regular_graph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.distance_regular_graph", false]], "distance_regular_graph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.distance_regular_graph", false]], "distances_all_pairs() (in module sage.graphs.distances_all_pairs)": [[22, "sage.graphs.distances_all_pairs.distances_all_pairs", false]], "distances_and_predecessors_all_pairs() (in module sage.graphs.distances_all_pairs)": [[22, "sage.graphs.distances_all_pairs.distances_and_predecessors_all_pairs", false]], "distances_distribution() (in module sage.graphs.distances_all_pairs)": [[22, "sage.graphs.distances_all_pairs.distances_distribution", false]], "distances_distribution() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.distances_distribution", false]], "dodecahedralgraph() (in module sage.graphs.generators.platonic_solids)": [[31, "sage.graphs.generators.platonic_solids.DodecahedralGraph", false]], "dodecahedralgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.DodecahedralGraph", false]], "dominating_set() (in module sage.graphs.domination)": [[23, "sage.graphs.domination.dominating_set", false]], "dominating_set() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.dominating_set", false]], "dominating_sets() (in module sage.graphs.domination)": [[23, "sage.graphs.domination.dominating_sets", false]], "dominating_sets() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.dominating_sets", false]], "dominator_tree() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.dominator_tree", false]], "dominator_tree() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.dominator_tree", false]], "dorogovtsevgoltsevmendesgraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.DorogovtsevGoltsevMendesGraph", false]], "dorogovtsevgoltsevmendesgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.DorogovtsevGoltsevMendesGraph", false]], "dot2tex_picture() (sage.graphs.graph_latex.graphlatex method)": [[55, "sage.graphs.graph_latex.GraphLatex.dot2tex_picture", false]], "doublegeneralizedpetersengraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.DoubleGeneralizedPetersenGraph", false]], "doublegeneralizedpetersengraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.DoubleGeneralizedPetersenGraph", false]], "doublegrassmanngraph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.DoubleGrassmannGraph", false]], "doublegrassmanngraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.DoubleGrassmannGraph", false]], "doubleoddgraph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.DoubleOddGraph", false]], "doubleoddgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.DoubleOddGraph", false]], "doublestarsnark() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.DoubleStarSnark", false]], "doublestarsnark() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.DoubleStarSnark", false]], "doublytruncatedwittgraph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.DoublyTruncatedWittGraph", false]], "doublytruncatedwittgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.DoublyTruncatedWittGraph", false]], "dual() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.dual", false]], "durergraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.DurerGraph", false]], "durergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.DurerGraph", false]], "dyckgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.DyckGraph", false]], "dyckgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.DyckGraph", false]], "ear (class in sage.graphs.tutte_polynomial)": [[79, "sage.graphs.tutte_polynomial.Ear", false]], "ear_decomposition() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.ear_decomposition", false]], "eccentricity() (in module sage.graphs.distances_all_pairs)": [[22, "sage.graphs.distances_all_pairs.eccentricity", false]], "eccentricity() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.eccentricity", false]], "eccentricity() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.eccentricity", false]], "eccentricity_dhv() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.eccentricity_DHV", false]], "edge_boundary() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.edge_boundary", false]], "edge_coloring() (in module sage.graphs.graph_coloring)": [[39, "sage.graphs.graph_coloring.edge_coloring", false]], "edge_coloring() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.edge_coloring", false]], "edge_connectivity() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.edge_connectivity", false]], "edge_connectivity() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.edge_connectivity", false]], "edge_connectivity() (sage.graphs.edge_connectivity.gabowedgeconnectivity method)": [[24, "sage.graphs.edge_connectivity.GabowEdgeConnectivity.edge_connectivity", false]], "edge_connectivity() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.edge_connectivity", false]], "edge_cut() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.edge_cut", false]], "edge_disjoint_paths() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.edge_disjoint_paths", false]], "edge_disjoint_spanning_trees() (in module sage.graphs.spanning_tree)": [[75, "sage.graphs.spanning_tree.edge_disjoint_spanning_trees", false]], "edge_disjoint_spanning_trees() (sage.graphs.edge_connectivity.gabowedgeconnectivity method)": [[24, "sage.graphs.edge_connectivity.GabowEdgeConnectivity.edge_disjoint_spanning_trees", false]], "edge_disjoint_spanning_trees() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.edge_disjoint_spanning_trees", false]], "edge_isoperimetric_number() (in module sage.graphs.isoperimetric_inequalities)": [[63, "sage.graphs.isoperimetric_inequalities.edge_isoperimetric_number", false]], "edge_isoperimetric_number() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.edge_isoperimetric_number", false]], "edge_iterator() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.edge_iterator", false]], "edge_label() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.edge_label", false]], "edge_labels() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.edge_labels", false]], "edge_multiplicities() (in module sage.graphs.tutte_polynomial)": [[79, "sage.graphs.tutte_polynomial.edge_multiplicities", false]], "edge_polytope() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.edge_polytope", false]], "edges() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.edges", false]], "edges_incident() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.edges_incident", false]], "edgeselection (class in sage.graphs.tutte_polynomial)": [[79, "sage.graphs.tutte_polynomial.EdgeSelection", false]], "edgesview (class in sage.graphs.views)": [[80, "sage.graphs.views.EdgesView", false]], "effective_resistance() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.effective_resistance", false]], "effective_resistance_matrix() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.effective_resistance_matrix", false]], "egawagraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.EgawaGraph", false]], "egawagraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.EgawaGraph", false]], "eigenmatrix() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.eigenmatrix", false]], "eigenspaces() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.eigenspaces", false]], "eigenvectors() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.eigenvectors", false]], "either_connected_or_not_connected() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.either_connected_or_not_connected", false]], "ellinghamhorton54graph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.EllinghamHorton54Graph", false]], "ellinghamhorton54graph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.EllinghamHorton54Graph", false]], "ellinghamhorton78graph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.EllinghamHorton78Graph", false]], "ellinghamhorton78graph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.EllinghamHorton78Graph", false]], "empty (sage.graphs.graph_decompositions.modular_decomposition.nodetype attribute)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.NodeType.EMPTY", false]], "emptygraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.EmptyGraph", false]], "emptygraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.EmptyGraph", false]], "equivalent_trees() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.equivalent_trees", false]], "erreragraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.ErreraGraph", false]], "erreragraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.ErreraGraph", false]], "eulerian_circuit() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.eulerian_circuit", false]], "eulerian_orientation() (in module sage.graphs.orientations)": [[69, "sage.graphs.orientations.eulerian_orientation", false]], "eulerian_orientation() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.eulerian_orientation", false]], "europemap() (in module sage.graphs.generators.world_map)": [[34, "sage.graphs.generators.world_map.EuropeMap", false]], "europemap() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.EuropeMap", false]], "export_to_file() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.export_to_file", false]], "f26agraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.F26AGraph", false]], "f26agraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.F26AGraph", false]], "faces() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.faces", false]], "families (sage.graphs.graph_generators.graphgenerators attribute)": [[52, "sage.graphs.graph_generators.GraphGenerators.families", false]], "fastdigraph (class in sage.graphs.graph_decompositions.fast_digraph)": [[44, "sage.graphs.graph_decompositions.fast_digraph.FastDigraph", false]], "feedback_edge_set() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.feedback_edge_set", false]], "feedback_vertex_set() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.feedback_vertex_set", false]], "feng_k_shortest_simple_paths() (in module sage.graphs.path_enumeration)": [[71, "sage.graphs.path_enumeration.feng_k_shortest_simple_paths", false]], "fibonaccitree() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.FibonacciTree", false]], "fibonaccitree() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.FibonacciTree", false]], "filter_kruskal() (in module sage.graphs.spanning_tree)": [[75, "sage.graphs.spanning_tree.filter_kruskal", false]], "filter_kruskal_iterator() (in module sage.graphs.spanning_tree)": [[75, "sage.graphs.spanning_tree.filter_kruskal_iterator", false]], "find_ear() (sage.graphs.tutte_polynomial.ear static method)": [[79, "sage.graphs.tutte_polynomial.Ear.find_ear", false]], "find_hamiltonian() (in module sage.graphs.generic_graph_pyx)": [[36, "sage.graphs.generic_graph_pyx.find_hamiltonian", false]], "find_pivot() (in module sage.graphs.cographs)": [[16, "sage.graphs.cographs.find_pivot", false]], "first_coloring() (in module sage.graphs.graph_coloring)": [[39, "sage.graphs.graph_coloring.first_coloring", false]], "flatten() (sage.graphs.pq_trees.pq method)": [[73, "sage.graphs.pq_trees.PQ.flatten", false]], "flow() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.flow", false]], "flow_polytope() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.flow_polytope", false]], "flowersnark() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.FlowerSnark", false]], "flowersnark() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.FlowerSnark", false]], "floyd_warshall() (in module sage.graphs.distances_all_pairs)": [[22, "sage.graphs.distances_all_pairs.floyd_warshall", false]], "floyd_warshall_shortest_paths() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.floyd_warshall_shortest_paths", false]], "folded_graph() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.folded_graph", false]], "foldedcubegraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.FoldedCubeGraph", false]], "foldedcubegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.FoldedCubeGraph", false]], "folkmangraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.FolkmanGraph", false]], "folkmangraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.FolkmanGraph", false]], "forbidden_subgraphs() (sage.graphs.isgci.graphclass method)": [[62, "sage.graphs.isgci.GraphClass.forbidden_subgraphs", false]], "forkgraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.ForkGraph", false]], "forkgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.ForkGraph", false]], "form_module() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.form_module", false]], "format_coloring() (in module sage.graphs.graph_coloring)": [[39, "sage.graphs.graph_coloring.format_coloring", false]], "fostergraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.FosterGraph", false]], "fostergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.FosterGraph", false]], "fostergraph3s6() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.FosterGraph3S6", false]], "fostergraph3s6() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.FosterGraph3S6", false]], "fractional_chromatic_index() (in module sage.graphs.graph_coloring)": [[39, "sage.graphs.graph_coloring.fractional_chromatic_index", false]], "fractional_chromatic_index() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.fractional_chromatic_index", false]], "fractional_chromatic_number() (in module sage.graphs.graph_coloring)": [[39, "sage.graphs.graph_coloring.fractional_chromatic_number", false]], "fractional_chromatic_number() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.fractional_chromatic_number", false]], "fractional_clique_number() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.fractional_clique_number", false]], "franklingraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.FranklinGraph", false]], "franklingraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.FranklinGraph", false]], "friendshipgraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.FriendshipGraph", false]], "friendshipgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.FriendshipGraph", false]], "from_adjacency_matrix() (in module sage.graphs.graph_input)": [[54, "sage.graphs.graph_input.from_adjacency_matrix", false]], "from_dict_of_dicts() (in module sage.graphs.graph_input)": [[54, "sage.graphs.graph_input.from_dict_of_dicts", false]], "from_dict_of_lists() (in module sage.graphs.graph_input)": [[54, "sage.graphs.graph_input.from_dict_of_lists", false]], "from_dig6() (in module sage.graphs.graph_input)": [[54, "sage.graphs.graph_input.from_dig6", false]], "from_graph6() (in module sage.graphs.graph_input)": [[54, "sage.graphs.graph_input.from_graph6", false]], "from_graph6() (in module sage.graphs.graph_list)": [[56, "sage.graphs.graph_list.from_graph6", false]], "from_incidence_matrix() (in module sage.graphs.graph_input)": [[54, "sage.graphs.graph_input.from_incidence_matrix", false]], "from_networkx_graph() (in module sage.graphs.graph_input)": [[54, "sage.graphs.graph_input.from_networkx_graph", false]], "from_oriented_incidence_matrix() (in module sage.graphs.graph_input)": [[54, "sage.graphs.graph_input.from_oriented_incidence_matrix", false]], "from_seidel_adjacency_matrix() (in module sage.graphs.graph_input)": [[54, "sage.graphs.graph_input.from_seidel_adjacency_matrix", false]], "from_sparse6() (in module sage.graphs.graph_input)": [[54, "sage.graphs.graph_input.from_sparse6", false]], "from_sparse6() (in module sage.graphs.graph_list)": [[56, "sage.graphs.graph_list.from_sparse6", false]], "from_whatever() (in module sage.graphs.graph_list)": [[56, "sage.graphs.graph_list.from_whatever", false]], "fruchtgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.FruchtGraph", false]], "fruchtgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.FruchtGraph", false]], "fullerenes() (sage.graphs.graph_generators.graphgenerators method)": [[52, "sage.graphs.graph_generators.GraphGenerators.fullerenes", false]], "furergadget() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.FurerGadget", false]], "furergadget() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.FurerGadget", false]], "fusenes() (sage.graphs.graph_generators.graphgenerators method)": [[52, "sage.graphs.graph_generators.GraphGenerators.fusenes", false]], "fuzzyballgraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.FuzzyBallGraph", false]], "fuzzyballgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.FuzzyBallGraph", false]], "g (sage.graphs.edge_connectivity.gabowedgeconnectivity attribute)": [[24, "sage.graphs.edge_connectivity.GabowEdgeConnectivity.G", false]], "gabowedgeconnectivity (class in sage.graphs.edge_connectivity)": [[24, "sage.graphs.edge_connectivity.GabowEdgeConnectivity", false]], "gamma_classes() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.gamma_classes", false]], "gemgraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.GemGraph", false]], "gemgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.GemGraph", false]], "gen_html_code() (in module sage.graphs.graph_plot_js)": [[58, "sage.graphs.graph_plot_js.gen_html_code", false]], "generaliseddodecagongraph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.GeneralisedDodecagonGraph", false]], "generaliseddodecagongraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.GeneralisedDodecagonGraph", false]], "generalisedhexagongraph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.GeneralisedHexagonGraph", false]], "generalisedhexagongraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.GeneralisedHexagonGraph", false]], "generalisedoctagongraph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.GeneralisedOctagonGraph", false]], "generalisedoctagongraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.GeneralisedOctagonGraph", false]], "generalizeddebruijn() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.GeneralizedDeBruijn", false]], "generalizedpetersengraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.GeneralizedPetersenGraph", false]], "generalizedpetersengraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.GeneralizedPetersenGraph", false]], "generalizedsierpinskigraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.GeneralizedSierpinskiGraph", false]], "generalizedsierpinskigraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.GeneralizedSierpinskiGraph", false]], "genericgraph (class in sage.graphs.generic_graph)": [[35, "sage.graphs.generic_graph.GenericGraph", false]], "genericgraph_pyx (class in sage.graphs.generic_graph_pyx)": [[36, "sage.graphs.generic_graph_pyx.GenericGraph_pyx", false]], "genericgraphbackend (class in sage.graphs.base.graph_backends)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend", false]], "genericgraphquery (class in sage.graphs.graph_database)": [[40, "sage.graphs.graph_database.GenericGraphQuery", false]], "genus() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.genus", false]], "genus() (sage.graphs.genus.simple_connected_genus_backtracker method)": [[37, "sage.graphs.genus.simple_connected_genus_backtracker.genus", false]], "geodetic_closure() (in module sage.graphs.convexity_properties)": [[19, "sage.graphs.convexity_properties.geodetic_closure", false]], "geodetic_closure() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.geodetic_closure", false]], "get_class() (sage.graphs.isgci.graphclasses method)": [[62, "sage.graphs.isgci.GraphClasses.get_class", false]], "get_edge_label() (sage.graphs.base.dense_graph.densegraphbackend method)": [[5, "sage.graphs.base.dense_graph.DenseGraphBackend.get_edge_label", false]], "get_edge_label() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.get_edge_label", false]], "get_edge_label() (sage.graphs.base.sparse_graph.sparsegraphbackend method)": [[8, "sage.graphs.base.sparse_graph.SparseGraphBackend.get_edge_label", false]], "get_edge_label() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.get_edge_label", false]], "get_embedding() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.get_embedding", false]], "get_embedding() (sage.graphs.genus.simple_connected_genus_backtracker method)": [[37, "sage.graphs.genus.simple_connected_genus_backtracker.get_embedding", false]], "get_graphs_list() (sage.graphs.graph_database.graphquery method)": [[40, "sage.graphs.graph_database.GraphQuery.get_graphs_list", false]], "get_length() (sage.graphs.graph_decompositions.tree_decomposition.treelengthconnected method)": [[49, "sage.graphs.graph_decompositions.tree_decomposition.TreelengthConnected.get_length", false]], "get_matching() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.get_matching", false]], "get_module_type() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.get_module_type", false]], "get_option() (sage.graphs.graph_latex.graphlatex method)": [[55, "sage.graphs.graph_latex.GraphLatex.get_option", false]], "get_pos() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.get_pos", false]], "get_spqr_tree() (sage.graphs.connectivity.triconnectivityspqr method)": [[18, "sage.graphs.connectivity.TriconnectivitySPQR.get_spqr_tree", false]], "get_tree_decomposition() (sage.graphs.graph_decompositions.tree_decomposition.treelengthconnected method)": [[49, "sage.graphs.graph_decompositions.tree_decomposition.TreelengthConnected.get_tree_decomposition", false]], "get_triconnected_components() (sage.graphs.connectivity.triconnectivityspqr method)": [[18, "sage.graphs.connectivity.TriconnectivitySPQR.get_triconnected_components", false]], "get_vertex() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.get_vertex", false]], "get_vertices() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.get_vertices", false]], "get_vertices() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.get_vertices", false]], "girth() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.girth", false]], "goethalsseidelgraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.GoethalsSeidelGraph", false]], "goethalsseidelgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.GoethalsSeidelGraph", false]], "goldnerhararygraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.GoldnerHararyGraph", false]], "goldnerhararygraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.GoldnerHararyGraph", false]], "golombgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.GolombGraph", false]], "golombgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.GolombGraph", false]], "gomory_hu_tree() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.gomory_hu_tree", false]], "gossetgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.GossetGraph", false]], "gossetgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.GossetGraph", false]], "graph (class in sage.graphs.graph)": [[38, "sage.graphs.graph.Graph", false]], "graph6_string() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.graph6_string", false]], "graph6_to_plot() (in module sage.graphs.graph_database)": [[40, "sage.graphs.graph_database.graph6_to_plot", false]], "graph_3o73() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.graph_3O73", false]], "graph_3o73() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.graph_3O73", false]], "graph_db_info() (in module sage.graphs.graph_database)": [[40, "sage.graphs.graph_database.graph_db_info", false]], "graph_editor() (in module sage.graphs.graph_editor)": [[51, "sage.graphs.graph_editor.graph_editor", false]], "graph_from_gq_spread() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.graph_from_GQ_spread", false]], "graph_isom_equivalent_non_edge_labeled_graph() (in module sage.graphs.generic_graph)": [[35, "sage.graphs.generic_graph.graph_isom_equivalent_non_edge_labeled_graph", false]], "graph_with_classical_parameters() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.graph_with_classical_parameters", false]], "graphclass (class in sage.graphs.isgci)": [[62, "sage.graphs.isgci.GraphClass", false]], "graphclasses (class in sage.graphs.isgci)": [[62, "sage.graphs.isgci.GraphClasses", false]], "graphdatabase (class in sage.graphs.graph_database)": [[40, "sage.graphs.graph_database.GraphDatabase", false]], "graphgenerators (class in sage.graphs.graph_generators)": [[52, "sage.graphs.graph_generators.GraphGenerators", false]], "graphics_array_defaults (sage.graphs.generic_graph.genericgraph attribute)": [[35, "sage.graphs.generic_graph.GenericGraph.graphics_array_defaults", false]], "graphlatex (class in sage.graphs.graph_latex)": [[55, "sage.graphs.graph_latex.GraphLatex", false]], "graphplot (class in sage.graphs.graph_plot)": [[57, "sage.graphs.graph_plot.GraphPlot", false]], "graphplot() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.graphplot", false]], "graphquery (class in sage.graphs.graph_database)": [[40, "sage.graphs.graph_database.GraphQuery", false]], "graphviz_string() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.graphviz_string", false]], "graphviz_to_file_named() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.graphviz_to_file_named", false]], "grassmanngraph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.GrassmannGraph", false]], "grassmanngraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.GrassmannGraph", false]], "graygraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.GrayGraph", false]], "graygraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.GrayGraph", false]], "greedy_dominating_set() (in module sage.graphs.domination)": [[23, "sage.graphs.domination.greedy_dominating_set", false]], "greedy_dominating_set() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.greedy_dominating_set", false]], "greedy_is_comparability() (in module sage.graphs.comparability)": [[17, "sage.graphs.comparability.greedy_is_comparability", false]], "greedy_is_comparability_with_certificate() (in module sage.graphs.comparability)": [[17, "sage.graphs.comparability.greedy_is_comparability_with_certificate", false]], "grid2dgraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.Grid2dGraph", false]], "grid2dgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.Grid2dGraph", false]], "gridgraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.GridGraph", false]], "gridgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.GridGraph", false]], "gritsenkograph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.GritsenkoGraph", false]], "gritsenkograph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.GritsenkoGraph", false]], "grotzschgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.GrotzschGraph", false]], "grotzschgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.GrotzschGraph", false]], "ground_set() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.ground_set", false]], "growing_subtrees() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.growing_subtrees", false]], "grundy_coloring() (in module sage.graphs.graph_coloring)": [[39, "sage.graphs.graph_coloring.grundy_coloring", false]], "habib_maurer_algorithm() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.habib_maurer_algorithm", false]], "haemersgraph() (in module sage.graphs.generators.classical_geometries)": [[27, "sage.graphs.generators.classical_geometries.HaemersGraph", false]], "haemersgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HaemersGraph", false]], "halfcube() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.HalfCube", false]], "halfcube() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HalfCube", false]], "halljankograph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.HallJankoGraph", false]], "halljankograph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HallJankoGraph", false]], "hamiltonian_cycle() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.hamiltonian_cycle", false]], "hamiltonian_path() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.hamiltonian_path", false]], "hamminggraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.HammingGraph", false]], "hamminggraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HammingGraph", false]], "hanoitowergraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.HanoiTowerGraph", false]], "hanoitowergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HanoiTowerGraph", false]], "hararygraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.HararyGraph", false]], "hararygraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HararyGraph", false]], "harborthgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.HarborthGraph", false]], "harborthgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HarborthGraph", false]], "harriesgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.HarriesGraph", false]], "harriesgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HarriesGraph", false]], "harrieswonggraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.HarriesWongGraph", false]], "harrieswonggraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HarriesWongGraph", false]], "has_arc() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.has_arc", false]], "has_arc() (sage.graphs.base.static_sparse_backend.staticsparsecgraph method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseCGraph.has_arc", false]], "has_arc_label() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.has_arc_label", false]], "has_edge() (sage.graphs.base.dense_graph.densegraphbackend method)": [[5, "sage.graphs.base.dense_graph.DenseGraphBackend.has_edge", false]], "has_edge() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.has_edge", false]], "has_edge() (sage.graphs.base.sparse_graph.sparsegraphbackend method)": [[8, "sage.graphs.base.sparse_graph.SparseGraphBackend.has_edge", false]], "has_edge() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.has_edge", false]], "has_edge() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.has_edge", false]], "has_homomorphism_to() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.has_homomorphism_to", false]], "has_loops() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.has_loops", false]], "has_loops() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.has_loops", false]], "has_multiple_edges() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.has_multiple_edges", false]], "has_perfect_matching() (in module sage.graphs.matching)": [[66, "sage.graphs.matching.has_perfect_matching", false]], "has_perfect_matching() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.has_perfect_matching", false]], "has_perfect_matching() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.has_perfect_matching", false]], "has_vertex() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.has_vertex", false]], "has_vertex() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.has_vertex", false]], "has_vertex() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.has_vertex", false]], "has_vertex() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.has_vertex", false]], "has_vertex() (sage.graphs.base.static_sparse_backend.staticsparsecgraph method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseCGraph.has_vertex", false]], "has_vertex() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.has_vertex", false]], "have_tkz_graph() (in module sage.graphs.graph_latex)": [[55, "sage.graphs.graph_latex.have_tkz_graph", false]], "heawoodgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.HeawoodGraph", false]], "heawoodgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HeawoodGraph", false]], "hermitianformsgraph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.HermitianFormsGraph", false]], "hermitianformsgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HermitianFormsGraph", false]], "herschelgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.HerschelGraph", false]], "herschelgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HerschelGraph", false]], "hexahedralgraph() (in module sage.graphs.generators.platonic_solids)": [[31, "sage.graphs.generators.platonic_solids.HexahedralGraph", false]], "hexahedralgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HexahedralGraph", false]], "higmansimsgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.HigmanSimsGraph", false]], "higmansimsgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HigmanSimsGraph", false]], "hoffmangraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.HoffmanGraph", false]], "hoffmangraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HoffmanGraph", false]], "hoffmansingletongraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.HoffmanSingletonGraph", false]], "hoffmansingletongraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HoffmanSingletonGraph", false]], "holtgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.HoltGraph", false]], "holtgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HoltGraph", false]], "hortongraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.HortonGraph", false]], "hortongraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HortonGraph", false]], "housegraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.HouseGraph", false]], "housegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HouseGraph", false]], "housexgraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.HouseXGraph", false]], "housexgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HouseXGraph", false]], "hull() (sage.graphs.convexity_properties.convexityproperties method)": [[19, "sage.graphs.convexity_properties.ConvexityProperties.hull", false]], "hull_number() (sage.graphs.convexity_properties.convexityproperties method)": [[19, "sage.graphs.convexity_properties.ConvexityProperties.hull_number", false]], "hyperbolicity() (in module sage.graphs.hyperbolicity)": [[59, "sage.graphs.hyperbolicity.hyperbolicity", false]], "hyperbolicity() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.hyperbolicity", false]], "hyperbolicity_distribution() (in module sage.graphs.hyperbolicity)": [[59, "sage.graphs.hyperbolicity.hyperbolicity_distribution", false]], "hypergraphgenerators (class in sage.graphs.hypergraph_generators)": [[60, "sage.graphs.hypergraph_generators.HypergraphGenerators", false]], "hyperstargraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.HyperStarGraph", false]], "hyperstargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.HyperStarGraph", false]], "icosahedralgraph() (in module sage.graphs.generators.platonic_solids)": [[31, "sage.graphs.generators.platonic_solids.IcosahedralGraph", false]], "icosahedralgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.IcosahedralGraph", false]], "igraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.IGraph", false]], "igraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.IGraph", false]], "igraph_graph() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.igraph_graph", false]], "ihara_zeta_function_inverse() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.ihara_zeta_function_inverse", false]], "imaseitoh() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.ImaseItoh", false]], "in_branchings() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.in_branchings", false]], "in_degree() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.in_degree", false]], "in_degree() (sage.graphs.base.dense_graph.densegraph method)": [[5, "sage.graphs.base.dense_graph.DenseGraph.in_degree", false]], "in_degree() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.in_degree", false]], "in_degree() (sage.graphs.base.sparse_graph.sparsegraph method)": [[8, "sage.graphs.base.sparse_graph.SparseGraph.in_degree", false]], "in_degree() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.in_degree", false]], "in_degree() (sage.graphs.base.static_sparse_backend.staticsparsecgraph method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseCGraph.in_degree", false]], "in_degree() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.in_degree", false]], "in_degree_iterator() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.in_degree_iterator", false]], "in_degree_sequence() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.in_degree_sequence", false]], "in_neighbors() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.in_neighbors", false]], "in_neighbors() (sage.graphs.base.static_sparse_backend.staticsparsecgraph method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseCGraph.in_neighbors", false]], "incidence_graph() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.incidence_graph", false]], "incidence_matrix() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.incidence_matrix", false]], "incidence_matrix() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.incidence_matrix", false]], "incidencestructure (class in sage.combinat.designs.incidence_structures)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure", false]], "inclusion_digraph() (sage.graphs.isgci.graphclasses method)": [[62, "sage.graphs.isgci.GraphClasses.inclusion_digraph", false]], "inclusions() (sage.graphs.isgci.graphclasses method)": [[62, "sage.graphs.isgci.GraphClasses.inclusions", false]], "incoming_edge_iterator() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.incoming_edge_iterator", false]], "incoming_edges() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.incoming_edges", false]], "independent_set() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.independent_set", false]], "independent_set_of_representatives() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.independent_set_of_representatives", false]], "independentsets (class in sage.graphs.independent_sets)": [[61, "sage.graphs.independent_sets.IndependentSets", false]], "induced_substructure() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.induced_substructure", false]], "int_to_binary_string() (in module sage.graphs.generic_graph_pyx)": [[36, "sage.graphs.generic_graph_pyx.int_to_binary_string", false]], "interactive_query() (sage.graphs.graph_database.graphdatabase method)": [[40, "sage.graphs.graph_database.GraphDatabase.interactive_query", false]], "intersection (sage.graphs.graph_generators.graphgenerators attribute)": [[52, "sage.graphs.graph_generators.GraphGenerators.intersection", false]], "intersection_graph() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.intersection_graph", false]], "intersectiongraph() (in module sage.graphs.generators.intersection)": [[30, "sage.graphs.generators.intersection.IntersectionGraph", false]], "intersectiongraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.IntersectionGraph", false]], "intervalgraph() (in module sage.graphs.generators.intersection)": [[30, "sage.graphs.generators.intersection.IntervalGraph", false]], "intervalgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.IntervalGraph", false]], "ioninkharaghani765graph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.IoninKharaghani765Graph", false]], "ioninkharaghani765graph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.IoninKharaghani765Graph", false]], "is_affine_polar() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_affine_polar", false]], "is_antipodal() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_antipodal", false]], "is_aperiodic() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.is_aperiodic", false]], "is_apex() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_apex", false]], "is_arc_transitive() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_arc_transitive", false]], "is_asteroidal_triple_free() (in module sage.graphs.asteroidal_triples)": [[2, "sage.graphs.asteroidal_triples.is_asteroidal_triple_free", false]], "is_asteroidal_triple_free() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_asteroidal_triple_free", false]], "is_berge_cyclic() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_berge_cyclic", false]], "is_biconnected() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_biconnected", false]], "is_bicritical() (in module sage.graphs.matching)": [[66, "sage.graphs.matching.is_bicritical", false]], "is_bicritical() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_bicritical", false]], "is_bipartite() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.is_bipartite", false]], "is_bipartite() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_bipartite", false]], "is_block_graph() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_block_graph", false]], "is_brace() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.is_brace", false]], "is_brick() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.is_brick", false]], "is_cactus() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_cactus", false]], "is_cartesian_product() (in module sage.graphs.graph_decompositions.graph_products)": [[45, "sage.graphs.graph_decompositions.graph_products.is_cartesian_product", false]], "is_cartesian_product() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_cartesian_product", false]], "is_cayley() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_cayley", false]], "is_chordal() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_chordal", false]], "is_chordal_bipartite() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_chordal_bipartite", false]], "is_circulant() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_circulant", false]], "is_circular_planar() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_circular_planar", false]], "is_circumscribable() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_circumscribable", false]], "is_classical_parameters_graph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.is_classical_parameters_graph", false]], "is_clique() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_clique", false]], "is_cograph() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_cograph", false]], "is_comparability() (in module sage.graphs.comparability)": [[17, "sage.graphs.comparability.is_comparability", false]], "is_comparability() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_comparability", false]], "is_comparability_milp() (in module sage.graphs.comparability)": [[17, "sage.graphs.comparability.is_comparability_MILP", false]], "is_complete_multipartite() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_complete_multipartite", false]], "is_connected() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.is_connected", false]], "is_connected() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_connected", false]], "is_connected() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.is_connected", false]], "is_connected() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_connected", false]], "is_cossidente_penttila() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_cossidente_penttila", false]], "is_cut_edge() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.is_cut_edge", false]], "is_cut_edge() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_cut_edge", false]], "is_cut_vertex() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.is_cut_vertex", false]], "is_cut_vertex() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_cut_vertex", false]], "is_cycle() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_cycle", false]], "is_directed() (sage.graphs.base.sparse_graph.sparsegraph method)": [[8, "sage.graphs.base.sparse_graph.SparseGraph.is_directed", false]], "is_directed() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.is_directed", false]], "is_directed() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_directed", false]], "is_directed_acyclic() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.is_directed_acyclic", false]], "is_directed_acyclic() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.is_directed_acyclic", false]], "is_distance_regular() (in module sage.graphs.distances_all_pairs)": [[22, "sage.graphs.distances_all_pairs.is_distance_regular", false]], "is_distance_regular() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_distance_regular", false]], "is_dominating() (in module sage.graphs.domination)": [[23, "sage.graphs.domination.is_dominating", false]], "is_dominating() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_dominating", false]], "is_drawn_free_of_edge_crossings() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_drawn_free_of_edge_crossings", false]], "is_edge_cut() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.is_edge_cut", false]], "is_edge_cut() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_edge_cut", false]], "is_edge_transitive() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_edge_transitive", false]], "is_empty() (sage.graphs.graph_decompositions.modular_decomposition.node method)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.Node.is_empty", false]], "is_equitable() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_equitable", false]], "is_eulerian() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_eulerian", false]], "is_even_hole_free() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_even_hole_free", false]], "is_factor_critical() (in module sage.graphs.matching)": [[66, "sage.graphs.matching.is_factor_critical", false]], "is_factor_critical() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_factor_critical", false]], "is_forest() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_forest", false]], "is_from_gq_spread() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.is_from_GQ_spread", false]], "is_gallai_tree() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_gallai_tree", false]], "is_generalized_quadrangle() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_generalized_quadrangle", false]], "is_geodetic() (in module sage.graphs.convexity_properties)": [[19, "sage.graphs.convexity_properties.is_geodetic", false]], "is_geodetic() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_geodetic", false]], "is_goethals_seidel() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_goethals_seidel", false]], "is_gqqmqp() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_GQqmqp", false]], "is_haemers() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_haemers", false]], "is_half_transitive() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_half_transitive", false]], "is_hamiltonian() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_hamiltonian", false]], "is_immutable() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_immutable", false]], "is_independent_set() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_independent_set", false]], "is_inscribable() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_inscribable", false]], "is_interval() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_interval", false]], "is_isomorphic() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_isomorphic", false]], "is_isomorphic() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_isomorphic", false]], "is_johnson() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_johnson", false]], "is_leaf() (sage.graphs.graph_decompositions.modular_decomposition.node method)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.Node.is_leaf", false]], "is_less_than_k() (sage.graphs.graph_decompositions.tree_decomposition.treelengthconnected method)": [[49, "sage.graphs.graph_decompositions.tree_decomposition.TreelengthConnected.is_less_than_k", false]], "is_line_graph() (in module sage.graphs.line_graph)": [[64, "sage.graphs.line_graph.is_line_graph", false]], "is_line_graph() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_line_graph", false]], "is_long_antihole_free() (in module sage.graphs.weakly_chordal)": [[81, "sage.graphs.weakly_chordal.is_long_antihole_free", false]], "is_long_antihole_free() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_long_antihole_free", false]], "is_long_hole_free() (in module sage.graphs.weakly_chordal)": [[81, "sage.graphs.weakly_chordal.is_long_hole_free", false]], "is_long_hole_free() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_long_hole_free", false]], "is_matching_covered() (in module sage.graphs.matching)": [[66, "sage.graphs.matching.is_matching_covered", false]], "is_matching_covered() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_matching_covered", false]], "is_mathon_pc_srg() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_mathon_PC_srg", false]], "is_module() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_module", false]], "is_muzychuk_s6() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_muzychuk_S6", false]], "is_near_polygon() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.is_near_polygon", false]], "is_no_f2() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_NO_F2", false]], "is_no_f3() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_NO_F3", false]], "is_noodd() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_NOodd", false]], "is_noperp_f5() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_NOperp_F5", false]], "is_nowhere0_twoweight() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_nowhere0_twoweight", false]], "is_nu() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_NU", false]], "is_odd_hole_free() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_odd_hole_free", false]], "is_orthogonal_array_block_graph() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_orthogonal_array_block_graph", false]], "is_orthogonal_polar() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_orthogonal_polar", false]], "is_overfull() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_overfull", false]], "is_paley() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_paley", false]], "is_partial_cube() (in module sage.graphs.partial_cube)": [[70, "sage.graphs.partial_cube.is_partial_cube", false]], "is_partial_cube() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_partial_cube", false]], "is_path() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_path", false]], "is_perfect() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_perfect", false]], "is_permutation() (in module sage.graphs.comparability)": [[17, "sage.graphs.comparability.is_permutation", false]], "is_permutation() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_permutation", false]], "is_planar() (in module sage.graphs.planarity)": [[72, "sage.graphs.planarity.is_planar", false]], "is_planar() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_planar", false]], "is_polhill() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_polhill", false]], "is_polyhedral() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_polyhedral", false]], "is_prime() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_prime", false]], "is_prime() (sage.graphs.graph_decompositions.modular_decomposition.node method)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.Node.is_prime", false]], "is_pseudo_partition_graph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.is_pseudo_partition_graph", false]], "is_redundant() (in module sage.graphs.domination)": [[23, "sage.graphs.domination.is_redundant", false]], "is_redundant() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_redundant", false]], "is_regular() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_regular", false]], "is_regular() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_regular", false]], "is_resolvable() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_resolvable", false]], "is_rshcd() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_RSHCD", false]], "is_self_complementary() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_self_complementary", false]], "is_semi_symmetric() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_semi_symmetric", false]], "is_series() (sage.graphs.graph_decompositions.modular_decomposition.node method)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.Node.is_series", false]], "is_simple() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_simple", false]], "is_split() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_split", false]], "is_spread() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_spread", false]], "is_steiner() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_steiner", false]], "is_strongly_connected() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.is_strongly_connected", false]], "is_strongly_connected() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.is_strongly_connected", false]], "is_strongly_connected() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.is_strongly_connected", false]], "is_strongly_regular() (in module sage.graphs.base.static_dense_graph)": [[9, "sage.graphs.base.static_dense_graph.is_strongly_regular", false]], "is_strongly_regular() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_strongly_regular", false]], "is_subgraph() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.is_subgraph", false]], "is_subgraph() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_subgraph", false]], "is_switch_oa_srg() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_switch_OA_srg", false]], "is_switch_skewhad() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_switch_skewhad", false]], "is_t_design() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_t_design", false]], "is_taylor_twograph_srg() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_taylor_twograph_srg", false]], "is_tournament() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.is_tournament", false]], "is_transitive() (in module sage.graphs.comparability)": [[17, "sage.graphs.comparability.is_transitive", false]], "is_transitive() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.is_transitive", false]], "is_transitively_reduced() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_transitively_reduced", false]], "is_tree() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_tree", false]], "is_triangle_free() (in module sage.graphs.base.static_dense_graph)": [[9, "sage.graphs.base.static_dense_graph.is_triangle_free", false]], "is_triangle_free() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_triangle_free", false]], "is_triconnected() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.is_triconnected", false]], "is_triconnected() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_triconnected", false]], "is_twograph_descendant_of_srg() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_twograph_descendant_of_srg", false]], "is_uniform() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_uniform", false]], "is_unitary_dual_polar() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_unitary_dual_polar", false]], "is_unitary_polar() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.is_unitary_polar", false]], "is_valid_lex_m_order() (in module sage.graphs.traversals)": [[77, "sage.graphs.traversals.is_valid_lex_M_order", false]], "is_valid_ordering() (in module sage.graphs.graph_decompositions.vertex_separation)": [[50, "sage.graphs.graph_decompositions.vertex_separation.is_valid_ordering", false]], "is_valid_tree_decomposition() (in module sage.graphs.graph_decompositions.tree_decomposition)": [[49, "sage.graphs.graph_decompositions.tree_decomposition.is_valid_tree_decomposition", false]], "is_vertex_cut() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.is_vertex_cut", false]], "is_vertex_cut() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_vertex_cut", false]], "is_vertex_transitive() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.is_vertex_transitive", false]], "is_weakly_chordal() (in module sage.graphs.weakly_chordal)": [[81, "sage.graphs.weakly_chordal.is_weakly_chordal", false]], "is_weakly_chordal() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.is_weakly_chordal", false]], "isomorphic_substructures_iterator() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.isomorphic_substructures_iterator", false]], "iterator_edges() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.iterator_edges", false]], "iterator_edges() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.iterator_edges", false]], "iterator_edges() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.iterator_edges", false]], "iterator_in_edges() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.iterator_in_edges", false]], "iterator_in_edges() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.iterator_in_edges", false]], "iterator_in_edges() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.iterator_in_edges", false]], "iterator_in_nbrs() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.iterator_in_nbrs", false]], "iterator_in_nbrs() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.iterator_in_nbrs", false]], "iterator_in_nbrs() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.iterator_in_nbrs", false]], "iterator_nbrs() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.iterator_nbrs", false]], "iterator_nbrs() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.iterator_nbrs", false]], "iterator_nbrs() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.iterator_nbrs", false]], "iterator_out_edges() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.iterator_out_edges", false]], "iterator_out_edges() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.iterator_out_edges", false]], "iterator_out_edges() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.iterator_out_edges", false]], "iterator_out_nbrs() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.iterator_out_nbrs", false]], "iterator_out_nbrs() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.iterator_out_nbrs", false]], "iterator_out_nbrs() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.iterator_out_nbrs", false]], "iterator_unsorted_edges() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.iterator_unsorted_edges", false]], "iterator_unsorted_edges() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.iterator_unsorted_edges", false]], "iterator_verts() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.iterator_verts", false]], "iterator_verts() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.iterator_verts", false]], "iterator_verts() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.iterator_verts", false]], "ivanovivanovfaradjevgraph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.IvanovIvanovFaradjevGraph", false]], "ivanovivanovfaradjevgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.IvanovIvanovFaradjevGraph", false]], "j2graph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.J2Graph", false]], "j2graph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.J2Graph", false]], "jankokharaghanigraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.JankoKharaghaniGraph", false]], "jankokharaghanigraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.JankoKharaghaniGraph", false]], "jankokharaghanitonchevgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.JankoKharaghaniTonchevGraph", false]], "jankokharaghanitonchevgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.JankoKharaghaniTonchevGraph", false]], "johnson_closeness_centrality() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.johnson_closeness_centrality", false]], "johnson_shortest_paths() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.johnson_shortest_paths", false]], "johnsongraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.JohnsonGraph", false]], "johnsongraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.JohnsonGraph", false]], "join() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.join", false]], "katz_centrality() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.katz_centrality", false]], "katz_matrix() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.katz_matrix", false]], "kautz() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.Kautz", false]], "kinggraph() (in module sage.graphs.generators.chessboard)": [[26, "sage.graphs.generators.chessboard.KingGraph", false]], "kinggraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.KingGraph", false]], "kirchhoff_matrix() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.kirchhoff_matrix", false]], "kirchhoff_symanzik_polynomial() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.kirchhoff_symanzik_polynomial", false]], "kittellgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.KittellGraph", false]], "kittellgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.KittellGraph", false]], "klein3regulargraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.Klein3RegularGraph", false]], "klein3regulargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.Klein3RegularGraph", false]], "klein7regulargraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.Klein7RegularGraph", false]], "klein7regulargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.Klein7RegularGraph", false]], "knesergraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.KneserGraph", false]], "knesergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.KneserGraph", false]], "knightgraph() (in module sage.graphs.generators.chessboard)": [[26, "sage.graphs.generators.chessboard.KnightGraph", false]], "knightgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.KnightGraph", false]], "krackhardtkitegraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.KrackhardtKiteGraph", false]], "krackhardtkitegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.KrackhardtKiteGraph", false]], "kronecker_product() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.kronecker_product", false]], "kruskal() (in module sage.graphs.spanning_tree)": [[75, "sage.graphs.spanning_tree.kruskal", false]], "kruskal_iterator() (in module sage.graphs.spanning_tree)": [[75, "sage.graphs.spanning_tree.kruskal_iterator", false]], "kruskal_iterator_from_edges() (in module sage.graphs.spanning_tree)": [[75, "sage.graphs.spanning_tree.kruskal_iterator_from_edges", false]], "label_nice_tree_decomposition() (in module sage.graphs.graph_decompositions.tree_decomposition)": [[49, "sage.graphs.graph_decompositions.tree_decomposition.label_nice_tree_decomposition", false]], "laddergraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.LadderGraph", false]], "laddergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.LadderGraph", false]], "laplacian_matrix() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.laplacian_matrix", false]], "largewittgraph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.LargeWittGraph", false]], "largewittgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.LargeWittGraph", false]], "latex() (sage.graphs.graph_latex.graphlatex method)": [[55, "sage.graphs.graph_latex.GraphLatex.latex", false]], "latex_options() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.latex_options", false]], "latin_squares_graph_parameters() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.latin_squares_graph_parameters", false]], "layout() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.layout", false]], "layout_acyclic() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.layout_acyclic", false]], "layout_acyclic_dummy() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.layout_acyclic_dummy", false]], "layout_circular() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.layout_circular", false]], "layout_default() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.layout_default", false]], "layout_extend_randomly() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.layout_extend_randomly", false]], "layout_forest() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.layout_forest", false]], "layout_graphviz() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.layout_graphviz", false]], "layout_planar() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.layout_planar", false]], "layout_ranked() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.layout_ranked", false]], "layout_split() (in module sage.graphs.generic_graph_pyx)": [[36, "sage.graphs.generic_graph_pyx.layout_split", false]], "layout_spring() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.layout_spring", false]], "layout_tree() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.layout_tree", false]], "layout_tree() (sage.graphs.graph_plot.graphplot method)": [[57, "sage.graphs.graph_plot.GraphPlot.layout_tree", false]], "layout_tutte() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.layout_tutte", false]], "lcfgraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.LCFGraph", false]], "lcfgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.LCFGraph", false]], "least_effective_resistance() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.least_effective_resistance", false]], "length_and_string_from_graph6() (in module sage.graphs.generic_graph_pyx)": [[36, "sage.graphs.generic_graph_pyx.length_and_string_from_graph6", false]], "length_of_tree_decomposition() (in module sage.graphs.graph_decompositions.tree_decomposition)": [[49, "sage.graphs.graph_decompositions.tree_decomposition.length_of_tree_decomposition", false]], "leonardgraph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.LeonardGraph", false]], "leonardgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.LeonardGraph", false]], "level_sets() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.level_sets", false]], "lex_bfs() (in module sage.graphs.traversals)": [[77, "sage.graphs.traversals.lex_BFS", false]], "lex_bfs() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.lex_BFS", false]], "lex_dfs() (in module sage.graphs.traversals)": [[77, "sage.graphs.traversals.lex_DFS", false]], "lex_dfs() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.lex_DFS", false]], "lex_down() (in module sage.graphs.traversals)": [[77, "sage.graphs.traversals.lex_DOWN", false]], "lex_down() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.lex_DOWN", false]], "lex_m() (in module sage.graphs.traversals)": [[77, "sage.graphs.traversals.lex_M", false]], "lex_m() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.lex_M", false]], "lex_m_fast() (in module sage.graphs.traversals)": [[77, "sage.graphs.traversals.lex_M_fast", false]], "lex_m_slow() (in module sage.graphs.traversals)": [[77, "sage.graphs.traversals.lex_M_slow", false]], "lex_up() (in module sage.graphs.traversals)": [[77, "sage.graphs.traversals.lex_UP", false]], "lex_up() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.lex_UP", false]], "lexbfs_order() (sage.graphs.graph_decompositions.slice_decomposition.slicedecomposition method)": [[48, "sage.graphs.graph_decompositions.slice_decomposition.SliceDecomposition.lexBFS_order", false]], "lexicographic_label() (sage.graphs.graph_decompositions.slice_decomposition.slicedecomposition method)": [[48, "sage.graphs.graph_decompositions.slice_decomposition.SliceDecomposition.lexicographic_label", false]], "lexicographic_product() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.lexicographic_product", false]], "line_graph() (in module sage.graphs.line_graph)": [[64, "sage.graphs.line_graph.line_graph", false]], "line_graph() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.line_graph", false]], "line_graph_forbidden_subgraphs() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.line_graph_forbidden_subgraphs", false]], "line_graph_forbidden_subgraphs() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.line_graph_forbidden_subgraphs", false]], "linear_arboricity() (in module sage.graphs.graph_coloring)": [[39, "sage.graphs.graph_coloring.linear_arboricity", false]], "linear_ordering_to_path_decomposition() (in module sage.graphs.graph_decompositions.vertex_separation)": [[50, "sage.graphs.graph_decompositions.vertex_separation.linear_ordering_to_path_decomposition", false]], "livingstonegraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.LivingstoneGraph", false]], "livingstonegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.LivingstoneGraph", false]], "ljubljanagraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.LjubljanaGraph", false]], "ljubljanagraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.LjubljanaGraph", false]], "load_afile() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.load_afile", false]], "locally_gq42_distance_transitive_graph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.locally_GQ42_distance_transitive_graph", false]], "locally_gq42_distance_transitive_graph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.locally_GQ42_distance_transitive_graph", false]], "localmclaughlingraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.LocalMcLaughlinGraph", false]], "localmclaughlingraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.LocalMcLaughlinGraph", false]], "lollipopgraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.LollipopGraph", false]], "lollipopgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.LollipopGraph", false]], "longest_cycle() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.longest_cycle", false]], "longest_path() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.longest_path", false]], "loop_edges() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.loop_edges", false]], "loop_edges() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.loop_edges", false]], "loop_vertices() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.loop_vertices", false]], "loop_vertices() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.loop_vertices", false]], "loops() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.loops", false]], "loops() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.loops", false]], "loops() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.loops", false]], "loops() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.loops", false]], "lovasz_theta() (in module sage.graphs.lovasz_theta)": [[65, "sage.graphs.lovasz_theta.lovasz_theta", false]], "lovasz_theta() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.lovasz_theta", false]], "lower_bound() (in module sage.graphs.graph_decompositions.vertex_separation)": [[50, "sage.graphs.graph_decompositions.vertex_separation.lower_bound", false]], "m22graph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.M22Graph", false]], "m22graph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.M22Graph", false]], "m_alternating_even_mark() (in module sage.graphs.matching)": [[66, "sage.graphs.matching.M_alternating_even_mark", false]], "magnitude_function() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.magnitude_function", false]], "make_labelled_rooted_tree() (in module sage.graphs.graph_decompositions.clique_separators)": [[42, "sage.graphs.graph_decompositions.clique_separators.make_labelled_rooted_tree", false]], "make_nice_tree_decomposition() (in module sage.graphs.graph_decompositions.tree_decomposition)": [[49, "sage.graphs.graph_decompositions.tree_decomposition.make_nice_tree_decomposition", false]], "make_tree() (in module sage.graphs.graph_decompositions.clique_separators)": [[42, "sage.graphs.graph_decompositions.clique_separators.make_tree", false]], "markstroemgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.MarkstroemGraph", false]], "markstroemgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.MarkstroemGraph", false]], "matching() (in module sage.graphs.matching)": [[66, "sage.graphs.matching.matching", false]], "matching() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.matching", false]], "matching() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.matching", false]], "matching_polynomial() (in module sage.graphs.matchpoly)": [[68, "sage.graphs.matchpoly.matching_polynomial", false]], "matching_polynomial() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.matching_polynomial", false]], "matching_polynomial() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.matching_polynomial", false]], "matchingcoveredgraph (class in sage.graphs.matching_covered_graph)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph", false]], "mathonpseudocyclicmerginggraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.MathonPseudocyclicMergingGraph", false]], "mathonpseudocyclicmerginggraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.MathonPseudocyclicMergingGraph", false]], "mathonpseudocyclicstronglyregulargraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.MathonPseudocyclicStronglyRegularGraph", false]], "mathonpseudocyclicstronglyregulargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.MathonPseudocyclicStronglyRegularGraph", false]], "mathonstronglyregulargraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.MathonStronglyRegularGraph", false]], "mathonstronglyregulargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.MathonStronglyRegularGraph", false]], "max_clique() (in module sage.graphs.cliquer)": [[15, "sage.graphs.cliquer.max_clique", false]], "max_cut() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.max_cut", false]], "maximal_barrier() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.maximal_barrier", false]], "maximizedegree (class in sage.graphs.tutte_polynomial)": [[79, "sage.graphs.tutte_polynomial.MaximizeDegree", false]], "maximum_average_degree() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.maximum_average_degree", false]], "maximum_cardinality_search() (in module sage.graphs.traversals)": [[77, "sage.graphs.traversals.maximum_cardinality_search", false]], "maximum_cardinality_search() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.maximum_cardinality_search", false]], "maximum_cardinality_search_m() (in module sage.graphs.traversals)": [[77, "sage.graphs.traversals.maximum_cardinality_search_M", false]], "maximum_cardinality_search_m() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.maximum_cardinality_search_M", false]], "maximum_leaf_number() (in module sage.graphs.domination)": [[23, "sage.graphs.domination.maximum_leaf_number", false]], "maximum_leaf_number() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.maximum_leaf_number", false]], "mcgeegraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.McGeeGraph", false]], "mcgeegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.McGeeGraph", false]], "mclaughlingraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.McLaughlinGraph", false]], "mclaughlingraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.McLaughlinGraph", false]], "md_tree_to_graph() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.md_tree_to_graph", false]], "meredithgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.MeredithGraph", false]], "meredithgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.MeredithGraph", false]], "merge_vertices() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.merge_vertices", false]], "min_cycle_basis() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.min_cycle_basis", false]], "min_spanning_tree() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.min_spanning_tree", false]], "min_spanning_tree() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.min_spanning_tree", false]], "minimal_dominating_sets() (in module sage.graphs.domination)": [[23, "sage.graphs.domination.minimal_dominating_sets", false]], "minimal_dominating_sets() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.minimal_dominating_sets", false]], "minimal_schnyder_wood() (in module sage.graphs.schnyder)": [[74, "sage.graphs.schnyder.minimal_schnyder_wood", false]], "minimal_separators() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.minimal_separators", false]], "minimal_separators() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.minimal_separators", false]], "minimizedegree (class in sage.graphs.tutte_polynomial)": [[79, "sage.graphs.tutte_polynomial.MinimizeDegree", false]], "minimizesingledegree (class in sage.graphs.tutte_polynomial)": [[79, "sage.graphs.tutte_polynomial.MinimizeSingleDegree", false]], "minimum_cycle_basis() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.minimum_cycle_basis", false]], "minimum_outdegree_orientation() (in module sage.graphs.orientations)": [[69, "sage.graphs.orientations.minimum_outdegree_orientation", false]], "minimum_outdegree_orientation() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.minimum_outdegree_orientation", false]], "minor() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.minor", false]], "mkgraph() (in module sage.graphs.graph_decompositions.rankwidth)": [[47, "sage.graphs.graph_decompositions.rankwidth.mkgraph", false]], "modular_decomposition() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.modular_decomposition", false]], "modular_decomposition() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.modular_decomposition", false]], "module": [[1, "module-sage.combinat.designs.incidence_structures", false], [2, "module-sage.graphs.asteroidal_triples", false], [3, "module-sage.graphs.base.boost_graph", false], [4, "module-sage.graphs.base.c_graph", false], [5, "module-sage.graphs.base.dense_graph", false], [6, "module-sage.graphs.base.graph_backends", false], [7, "module-sage.graphs.base.overview", false], [8, "module-sage.graphs.base.sparse_graph", false], [9, "module-sage.graphs.base.static_dense_graph", false], [10, "module-sage.graphs.base.static_sparse_backend", false], [11, "module-sage.graphs.base.static_sparse_graph", false], [12, "module-sage.graphs.bipartite_graph", false], [13, "module-sage.graphs.centrality", false], [14, "module-sage.graphs.chrompoly", false], [15, "module-sage.graphs.cliquer", false], [16, "module-sage.graphs.cographs", false], [17, "module-sage.graphs.comparability", false], [18, "module-sage.graphs.connectivity", false], [19, "module-sage.graphs.convexity_properties", false], [20, "module-sage.graphs.digraph", false], [21, "module-sage.graphs.digraph_generators", false], [22, "module-sage.graphs.distances_all_pairs", false], [23, "module-sage.graphs.domination", false], [24, "module-sage.graphs.edge_connectivity", false], [25, "module-sage.graphs.generators.basic", false], [26, "module-sage.graphs.generators.chessboard", false], [27, "module-sage.graphs.generators.classical_geometries", false], [28, "module-sage.graphs.generators.distance_regular", false], [29, "module-sage.graphs.generators.families", false], [30, "module-sage.graphs.generators.intersection", false], [31, "module-sage.graphs.generators.platonic_solids", false], [32, "module-sage.graphs.generators.random", false], [33, "module-sage.graphs.generators.smallgraphs", false], [34, "module-sage.graphs.generators.world_map", false], [35, "module-sage.graphs.generic_graph", false], [36, "module-sage.graphs.generic_graph_pyx", false], [37, "module-sage.graphs.genus", false], [38, "module-sage.graphs.graph", false], [39, "module-sage.graphs.graph_coloring", false], [40, "module-sage.graphs.graph_database", false], [41, "module-sage.graphs.graph_decompositions.bandwidth", false], [42, "module-sage.graphs.graph_decompositions.clique_separators", false], [43, "module-sage.graphs.graph_decompositions.cutwidth", false], [44, "module-sage.graphs.graph_decompositions.fast_digraph", false], [45, "module-sage.graphs.graph_decompositions.graph_products", false], [46, "module-sage.graphs.graph_decompositions.modular_decomposition", false], [47, "module-sage.graphs.graph_decompositions.rankwidth", false], [48, "module-sage.graphs.graph_decompositions.slice_decomposition", false], [49, "module-sage.graphs.graph_decompositions.tree_decomposition", false], [50, "module-sage.graphs.graph_decompositions.vertex_separation", false], [51, "module-sage.graphs.graph_editor", false], [52, "module-sage.graphs.graph_generators", false], [53, "module-sage.graphs.graph_generators_pyx", false], [54, "module-sage.graphs.graph_input", false], [55, "module-sage.graphs.graph_latex", false], [56, "module-sage.graphs.graph_list", false], [57, "module-sage.graphs.graph_plot", false], [58, "module-sage.graphs.graph_plot_js", false], [59, "module-sage.graphs.hyperbolicity", false], [60, "module-sage.graphs.hypergraph_generators", false], [61, "module-sage.graphs.independent_sets", false], [62, "module-sage.graphs.isgci", false], [63, "module-sage.graphs.isoperimetric_inequalities", false], [64, "module-sage.graphs.line_graph", false], [65, "module-sage.graphs.lovasz_theta", false], [66, "module-sage.graphs.matching", false], [67, "module-sage.graphs.matching_covered_graph", false], [68, "module-sage.graphs.matchpoly", false], [69, "module-sage.graphs.orientations", false], [70, "module-sage.graphs.partial_cube", false], [71, "module-sage.graphs.path_enumeration", false], [72, "module-sage.graphs.planarity", false], [73, "module-sage.graphs.pq_trees", false], [74, "module-sage.graphs.schnyder", false], [75, "module-sage.graphs.spanning_tree", false], [76, "module-sage.graphs.strongly_regular_db", false], [77, "module-sage.graphs.traversals", false], [78, "module-sage.graphs.trees", false], [79, "module-sage.graphs.tutte_polynomial", false], [80, "module-sage.graphs.views", false], [81, "module-sage.graphs.weakly_chordal", false]], "moebiuskantorgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.MoebiusKantorGraph", false]], "moebiuskantorgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.MoebiusKantorGraph", false]], "moebiusladdergraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.MoebiusLadderGraph", false]], "moebiusladdergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.MoebiusLadderGraph", false]], "moserspindle() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.MoserSpindle", false]], "moserspindle() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.MoserSpindle", false]], "most_common_neighbors() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.most_common_neighbors", false]], "multicommodity_flow() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.multicommodity_flow", false]], "multiple_edges() (sage.graphs.base.dense_graph.densegraphbackend method)": [[5, "sage.graphs.base.dense_graph.DenseGraphBackend.multiple_edges", false]], "multiple_edges() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.multiple_edges", false]], "multiple_edges() (sage.graphs.base.sparse_graph.sparsegraphbackend method)": [[8, "sage.graphs.base.sparse_graph.SparseGraphBackend.multiple_edges", false]], "multiple_edges() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.multiple_edges", false]], "multiple_edges() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.multiple_edges", false]], "multiway_cut() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.multiway_cut", false]], "murtygraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.MurtyGraph", false]], "murtygraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.MurtyGraph", false]], "muzychuks6graph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.MuzychukS6Graph", false]], "muzychuks6graph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.MuzychukS6Graph", false]], "mycielskigraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.MycielskiGraph", false]], "mycielskigraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.MycielskiGraph", false]], "mycielskistep() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.MycielskiStep", false]], "mycielskistep() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.MycielskiStep", false]], "name() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.name", false]], "name() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.name", false]], "naurugraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.NauruGraph", false]], "naurugraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.NauruGraph", false]], "nauty() (sage.graphs.hypergraph_generators.hypergraphgenerators method)": [[60, "sage.graphs.hypergraph_generators.HypergraphGenerators.nauty", false]], "nauty_directg() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.nauty_directg", false]], "nauty_genbg() (sage.graphs.graph_generators.graphgenerators method)": [[52, "sage.graphs.graph_generators.GraphGenerators.nauty_genbg", false]], "nauty_geng() (sage.graphs.graph_generators.graphgenerators method)": [[52, "sage.graphs.graph_generators.GraphGenerators.nauty_geng", false]], "nauty_genktreeg() (sage.graphs.graph_generators.graphgenerators method)": [[52, "sage.graphs.graph_generators.GraphGenerators.nauty_genktreeg", false]], "nauty_gentreeg() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.nauty_gentreeg", false]], "nauty_gentreeg() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.nauty_gentreeg", false]], "nauty_posetg() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.nauty_posetg", false]], "near_polygon_graph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.near_polygon_graph", false]], "neighbor_in_iterator() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.neighbor_in_iterator", false]], "neighbor_iterator() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.neighbor_iterator", false]], "neighbor_out_iterator() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.neighbor_out_iterator", false]], "neighbors() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.neighbors", false]], "neighbors_in() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.neighbors_in", false]], "neighbors_out() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.neighbors_out", false]], "nested_tuple_to_tree() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.nested_tuple_to_tree", false]], "networkx_graph() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.networkx_graph", false]], "next_tree() (in module sage.graphs.cographs)": [[16, "sage.graphs.cographs.next_tree", false]], "nkstargraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.NKStarGraph", false]], "nkstargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.NKStarGraph", false]], "node (class in sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.Node", false]], "nodetype (class in sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.NodeType", false]], "nonisotropicorthogonalpolargraph() (in module sage.graphs.generators.classical_geometries)": [[27, "sage.graphs.generators.classical_geometries.NonisotropicOrthogonalPolarGraph", false]], "nonisotropicorthogonalpolargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.NonisotropicOrthogonalPolarGraph", false]], "nonisotropicunitarypolargraph() (in module sage.graphs.generators.classical_geometries)": [[27, "sage.graphs.generators.classical_geometries.NonisotropicUnitaryPolarGraph", false]], "nonisotropicunitarypolargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.NonisotropicUnitaryPolarGraph", false]], "normal (sage.graphs.graph_decompositions.modular_decomposition.nodetype attribute)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.NodeType.NORMAL", false]], "nowhere0wordstwoweightcodegraph() (in module sage.graphs.generators.classical_geometries)": [[27, "sage.graphs.generators.classical_geometries.Nowhere0WordsTwoWeightCodeGraph", false]], "nowhere0wordstwoweightcodegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.Nowhere0WordsTwoWeightCodeGraph", false]], "nowhere_zero_flow() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.nowhere_zero_flow", false]], "nstargraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.NStarGraph", false]], "nstargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.NStarGraph", false]], "num_blocks() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.num_blocks", false]], "num_edges() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.num_edges", false]], "num_edges() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.num_edges", false]], "num_edges() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.num_edges", false]], "num_edges() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.num_edges", false]], "num_faces() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.num_faces", false]], "num_points() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.num_points", false]], "num_verts() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.num_verts", false]], "num_verts() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.num_verts", false]], "num_verts() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.num_verts", false]], "num_verts() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.num_verts", false]], "number_of() (sage.graphs.graph_database.graphquery method)": [[40, "sage.graphs.graph_database.GraphQuery.number_of", false]], "number_of_children() (sage.graphs.pq_trees.pq method)": [[73, "sage.graphs.pq_trees.PQ.number_of_children", false]], "number_of_loops() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.number_of_loops", false]], "number_of_loops() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.number_of_loops", false]], "number_of_n_colorings() (in module sage.graphs.graph_coloring)": [[39, "sage.graphs.graph_coloring.number_of_n_colorings", false]], "numbers_of_colorings() (in module sage.graphs.graph_coloring)": [[39, "sage.graphs.graph_coloring.numbers_of_colorings", false]], "octahedralgraph() (in module sage.graphs.generators.platonic_solids)": [[31, "sage.graphs.generators.platonic_solids.OctahedralGraph", false]], "octahedralgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.OctahedralGraph", false]], "odd_girth() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.odd_girth", false]], "oddgraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.OddGraph", false]], "oddgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.OddGraph", false]], "order() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.order", false]], "ordering() (sage.graphs.pq_trees.pq method)": [[73, "sage.graphs.pq_trees.PQ.ordering", false]], "orderings() (sage.graphs.pq_trees.p method)": [[73, "sage.graphs.pq_trees.P.orderings", false]], "orderings() (sage.graphs.pq_trees.q method)": [[73, "sage.graphs.pq_trees.Q.orderings", false]], "orient() (in module sage.graphs.orientations)": [[69, "sage.graphs.orientations.orient", false]], "orient() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.orient", false]], "orientations() (in module sage.graphs.orientations)": [[69, "sage.graphs.orientations.orientations", false]], "orientations() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.orientations", false]], "orthogonalarrayblockgraph() (in module sage.graphs.generators.intersection)": [[30, "sage.graphs.generators.intersection.OrthogonalArrayBlockGraph", false]], "orthogonalarrayblockgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.OrthogonalArrayBlockGraph", false]], "orthogonaldualpolargraph() (in module sage.graphs.generators.classical_geometries)": [[27, "sage.graphs.generators.classical_geometries.OrthogonalDualPolarGraph", false]], "orthogonaldualpolargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.OrthogonalDualPolarGraph", false]], "orthogonalpolargraph() (in module sage.graphs.generators.classical_geometries)": [[27, "sage.graphs.generators.classical_geometries.OrthogonalPolarGraph", false]], "orthogonalpolargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.OrthogonalPolarGraph", false]], "out_branchings() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.out_branchings", false]], "out_degree() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.out_degree", false]], "out_degree() (sage.graphs.base.dense_graph.densegraph method)": [[5, "sage.graphs.base.dense_graph.DenseGraph.out_degree", false]], "out_degree() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.out_degree", false]], "out_degree() (sage.graphs.base.sparse_graph.sparsegraph method)": [[8, "sage.graphs.base.sparse_graph.SparseGraph.out_degree", false]], "out_degree() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.out_degree", false]], "out_degree() (sage.graphs.base.static_sparse_backend.staticsparsecgraph method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseCGraph.out_degree", false]], "out_degree() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.out_degree", false]], "out_degree_iterator() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.out_degree_iterator", false]], "out_degree_sequence() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.out_degree_sequence", false]], "out_neighbors() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.out_neighbors", false]], "out_neighbors() (sage.graphs.base.static_sparse_backend.staticsparsecgraph method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseCGraph.out_neighbors", false]], "outgoing_edge_iterator() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.outgoing_edge_iterator", false]], "outgoing_edges() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.outgoing_edges", false]], "p (class in sage.graphs.pq_trees)": [[73, "sage.graphs.pq_trees.P", false]], "packing() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.packing", false]], "pagerank() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.pagerank", false]], "paley() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.Paley", false]], "paleygraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.PaleyGraph", false]], "paleygraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.PaleyGraph", false]], "pappusgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.PappusGraph", false]], "pappusgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.PappusGraph", false]], "parallel (sage.graphs.graph_decompositions.modular_decomposition.nodetype attribute)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.NodeType.PARALLEL", false]], "pasechnikgraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.PasechnikGraph", false]], "pasechnikgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.PasechnikGraph", false]], "path() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.Path", false]], "path_decomposition() (in module sage.graphs.graph_decompositions.vertex_separation)": [[50, "sage.graphs.graph_decompositions.vertex_separation.path_decomposition", false]], "path_semigroup() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.path_semigroup", false]], "pathgraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.PathGraph", false]], "pathgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.PathGraph", false]], "pathwidth() (in module sage.graphs.graph_decompositions.vertex_separation)": [[50, "sage.graphs.graph_decompositions.vertex_separation.pathwidth", false]], "pathwidth() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.pathwidth", false]], "perfect_matchings() (in module sage.graphs.matching)": [[66, "sage.graphs.matching.perfect_matchings", false]], "perfect_matchings() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.perfect_matchings", false]], "perfect_matchings() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.perfect_matchings", false]], "period() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.period", false]], "periphery() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.periphery", false]], "periphery() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.periphery", false]], "perkelgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.PerkelGraph", false]], "perkelgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.PerkelGraph", false]], "permutationgraph() (in module sage.graphs.generators.intersection)": [[30, "sage.graphs.generators.intersection.PermutationGraph", false]], "permutationgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.PermutationGraph", false]], "permute_decomposition() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.permute_decomposition", false]], "petersen_family() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.petersen_family", false]], "petersen_family() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.petersen_family", false]], "petersengraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.PetersenGraph", false]], "petersengraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.PetersenGraph", false]], "planar_dual() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.planar_dual", false]], "planar_graphs() (sage.graphs.graph_generators.graphgenerators method)": [[52, "sage.graphs.graph_generators.GraphGenerators.planar_graphs", false]], "plantri_gen() (sage.graphs.graph_generators.graphgenerators method)": [[52, "sage.graphs.graph_generators.GraphGenerators.plantri_gen", false]], "platonic_solids (sage.graphs.graph_generators.graphgenerators attribute)": [[52, "sage.graphs.graph_generators.GraphGenerators.platonic_solids", false]], "plot() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.plot", false]], "plot() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.plot", false]], "plot() (sage.graphs.graph_plot.graphplot method)": [[57, "sage.graphs.graph_plot.GraphPlot.plot", false]], "plot3d() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.plot3d", false]], "poussingraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.PoussinGraph", false]], "poussingraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.PoussinGraph", false]], "power() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.power", false]], "pq (class in sage.graphs.pq_trees)": [[73, "sage.graphs.pq_trees.PQ", false]], "prime (sage.graphs.graph_decompositions.modular_decomposition.nodetype attribute)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.NodeType.PRIME", false]], "print_adjacency_matrix() (sage.graphs.graph_decompositions.fast_digraph.fastdigraph method)": [[44, "sage.graphs.graph_decompositions.fast_digraph.FastDigraph.print_adjacency_matrix", false]], "print_md_tree() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.print_md_tree", false]], "print_triconnected_components() (sage.graphs.connectivity.triconnectivityspqr method)": [[18, "sage.graphs.connectivity.TriconnectivitySPQR.print_triconnected_components", false]], "private_neighbors() (in module sage.graphs.domination)": [[23, "sage.graphs.domination.private_neighbors", false]], "private_neighbors() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.private_neighbors", false]], "project_left() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.project_left", false]], "project_right() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.project_right", false]], "pruned_tree() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.pruned_tree", false]], "pseudo_partition_graph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.pseudo_partition_graph", false]], "q (class in sage.graphs.pq_trees)": [[73, "sage.graphs.pq_trees.Q", false]], "quadrangulations() (sage.graphs.graph_generators.graphgenerators method)": [[52, "sage.graphs.graph_generators.GraphGenerators.quadrangulations", false]], "queengraph() (in module sage.graphs.generators.chessboard)": [[26, "sage.graphs.generators.chessboard.QueenGraph", false]], "queengraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.QueenGraph", false]], "query() (sage.graphs.graph_database.graphdatabase method)": [[40, "sage.graphs.graph_database.GraphDatabase.query", false]], "query_iterator() (sage.graphs.graph_database.graphquery method)": [[40, "sage.graphs.graph_database.GraphQuery.query_iterator", false]], "radius() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.radius", false]], "radius() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.radius", false]], "radius_dhv() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.radius_DHV", false]], "radius_dhv() (in module sage.graphs.distances_all_pairs)": [[22, "sage.graphs.distances_all_pairs.radius_DHV", false]], "random (sage.graphs.graph_generators.graphgenerators attribute)": [[52, "sage.graphs.graph_generators.GraphGenerators.random", false]], "random() (sage.graphs.graph_coloring.test method)": [[39, "sage.graphs.graph_coloring.Test.random", false]], "random_all_graph_colorings() (sage.graphs.graph_coloring.test method)": [[39, "sage.graphs.graph_coloring.Test.random_all_graph_colorings", false]], "random_edge() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.random_edge", false]], "random_edge_iterator() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.random_edge_iterator", false]], "random_md_tree() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.random_md_tree", false]], "random_orientation() (in module sage.graphs.orientations)": [[69, "sage.graphs.orientations.random_orientation", false]], "random_orientation() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.random_orientation", false]], "random_spanning_tree() (in module sage.graphs.spanning_tree)": [[75, "sage.graphs.spanning_tree.random_spanning_tree", false]], "random_spanning_tree() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.random_spanning_tree", false]], "random_subgraph() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.random_subgraph", false]], "random_vertex() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.random_vertex", false]], "random_vertex_iterator() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.random_vertex_iterator", false]], "randombarabasialbert() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomBarabasiAlbert", false]], "randombarabasialbert() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomBarabasiAlbert", false]], "randombicubicplanar() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomBicubicPlanar", false]], "randombicubicplanar() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomBicubicPlanar", false]], "randombipartite() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomBipartite", false]], "randombipartite() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomBipartite", false]], "randomblockgraph() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomBlockGraph", false]], "randomblockgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomBlockGraph", false]], "randomboundedtolerancegraph() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomBoundedToleranceGraph", false]], "randomboundedtolerancegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomBoundedToleranceGraph", false]], "randomchordalgraph() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomChordalGraph", false]], "randomchordalgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomChordalGraph", false]], "randomdirectedacyclicgraph() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.RandomDirectedAcyclicGraph", false]], "randomdirectedgn() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.RandomDirectedGN", false]], "randomdirectedgnc() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.RandomDirectedGNC", false]], "randomdirectedgnm() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.RandomDirectedGNM", false]], "randomdirectedgnp() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.RandomDirectedGNP", false]], "randomdirectedgnr() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.RandomDirectedGNR", false]], "randomgnm() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomGNM", false]], "randomgnm() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomGNM", false]], "randomgnp() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomGNP", false]], "randomgnp() (in module sage.graphs.graph_generators_pyx)": [[53, "sage.graphs.graph_generators_pyx.RandomGNP", false]], "randomgnp() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomGNP", false]], "randomholmekim() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomHolmeKim", false]], "randomholmekim() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomHolmeKim", false]], "randomintervalgraph() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomIntervalGraph", false]], "randomintervalgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomIntervalGraph", false]], "randomktree() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomKTree", false]], "randomktree() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomKTree", false]], "randomlobster() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomLobster", false]], "randomlobster() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomLobster", false]], "randomnewmanwattsstrogatz() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomNewmanWattsStrogatz", false]], "randomnewmanwattsstrogatz() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomNewmanWattsStrogatz", false]], "randompartialktree() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomPartialKTree", false]], "randompartialktree() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomPartialKTree", false]], "randomproperintervalgraph() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomProperIntervalGraph", false]], "randomproperintervalgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomProperIntervalGraph", false]], "randomregular() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomRegular", false]], "randomregular() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomRegular", false]], "randomregularbipartite() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomRegularBipartite", false]], "randomregularbipartite() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomRegularBipartite", false]], "randomsemicomplete() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.RandomSemiComplete", false]], "randomshell() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomShell", false]], "randomshell() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomShell", false]], "randomtolerancegraph() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomToleranceGraph", false]], "randomtolerancegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomToleranceGraph", false]], "randomtournament() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.RandomTournament", false]], "randomtree() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomTree", false]], "randomtree() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomTree", false]], "randomtreepowerlaw() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomTreePowerlaw", false]], "randomtreepowerlaw() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomTreePowerlaw", false]], "randomtriangulation() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomTriangulation", false]], "randomtriangulation() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomTriangulation", false]], "randomunitdiskgraph() (in module sage.graphs.generators.random)": [[32, "sage.graphs.generators.random.RandomUnitDiskGraph", false]], "randomunitdiskgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RandomUnitDiskGraph", false]], "rank() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.rank", false]], "rank_decomposition() (in module sage.graphs.graph_decompositions.rankwidth)": [[47, "sage.graphs.graph_decompositions.rankwidth.rank_decomposition", false]], "rank_decomposition() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.rank_decomposition", false]], "realloc() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.realloc", false]], "realloc() (sage.graphs.base.dense_graph.densegraph method)": [[5, "sage.graphs.base.dense_graph.DenseGraph.realloc", false]], "realloc() (sage.graphs.base.sparse_graph.sparsegraph method)": [[8, "sage.graphs.base.sparse_graph.SparseGraph.realloc", false]], "rebuild_node() (in module sage.graphs.cographs)": [[16, "sage.graphs.cographs.rebuild_node", false]], "recreate_decomposition() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.recreate_decomposition", false]], "reduced_adjacency_matrix() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.reduced_adjacency_matrix", false]], "reduced_tree_decomposition() (in module sage.graphs.graph_decompositions.tree_decomposition)": [[49, "sage.graphs.graph_decompositions.tree_decomposition.reduced_tree_decomposition", false]], "relabel() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.relabel", false]], "relabel() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.relabel", false]], "relabel() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.relabel", false]], "relabel() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.relabel", false]], "relabel() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.relabel", false]], "relabel_tree() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.relabel_tree", false]], "remove_loops() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.remove_loops", false]], "remove_loops() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.remove_loops", false]], "remove_multiple_edges() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.remove_multiple_edges", false]], "removed_edge() (in module sage.graphs.tutte_polynomial)": [[79, "sage.graphs.tutte_polynomial.removed_edge", false]], "removed_from() (sage.graphs.tutte_polynomial.ear method)": [[79, "sage.graphs.tutte_polynomial.Ear.removed_from", false]], "removed_loops() (in module sage.graphs.tutte_polynomial)": [[79, "sage.graphs.tutte_polynomial.removed_loops", false]], "removed_multiedge() (in module sage.graphs.tutte_polynomial)": [[79, "sage.graphs.tutte_polynomial.removed_multiedge", false]], "reorder_sets() (in module sage.graphs.pq_trees)": [[73, "sage.graphs.pq_trees.reorder_sets", false]], "reset_info() (sage.graphs.cographs.cotree method)": [[16, "sage.graphs.cographs.CoTree.reset_info", false]], "reverse() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.reverse", false]], "reverse() (sage.graphs.pq_trees.pq method)": [[73, "sage.graphs.pq_trees.PQ.reverse", false]], "reverse_edge() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.reverse_edge", false]], "reverse_edges() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.reverse_edges", false]], "ringedtree() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.RingedTree", false]], "ringedtree() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RingedTree", false]], "robertsongraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.RobertsonGraph", false]], "robertsongraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RobertsonGraph", false]], "rookgraph() (in module sage.graphs.generators.chessboard)": [[26, "sage.graphs.generators.chessboard.RookGraph", false]], "rookgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RookGraph", false]], "root_graph() (in module sage.graphs.line_graph)": [[64, "sage.graphs.line_graph.root_graph", false]], "rooted_product() (in module sage.graphs.graph_decompositions.graph_products)": [[45, "sage.graphs.graph_decompositions.graph_products.rooted_product", false]], "rooted_product() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.rooted_product", false]], "rosewindowgraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.RoseWindowGraph", false]], "rosewindowgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.RoseWindowGraph", false]], "round_robin() (in module sage.graphs.graph_coloring)": [[39, "sage.graphs.graph_coloring.round_robin", false]], "s (sage.graphs.tutte_polynomial.ear property)": [[79, "sage.graphs.tutte_polynomial.Ear.s", false]], "sage.combinat.designs.incidence_structures": [[1, "module-sage.combinat.designs.incidence_structures", false]], "sage.graphs.asteroidal_triples": [[2, "module-sage.graphs.asteroidal_triples", false]], "sage.graphs.base.boost_graph": [[3, "module-sage.graphs.base.boost_graph", false]], "sage.graphs.base.c_graph": [[4, "module-sage.graphs.base.c_graph", false]], "sage.graphs.base.dense_graph": [[5, "module-sage.graphs.base.dense_graph", false]], "sage.graphs.base.graph_backends": [[6, "module-sage.graphs.base.graph_backends", false]], "sage.graphs.base.overview": [[7, "module-sage.graphs.base.overview", false]], "sage.graphs.base.sparse_graph": [[8, "module-sage.graphs.base.sparse_graph", false]], "sage.graphs.base.static_dense_graph": [[9, "module-sage.graphs.base.static_dense_graph", false]], "sage.graphs.base.static_sparse_backend": [[10, "module-sage.graphs.base.static_sparse_backend", false]], "sage.graphs.base.static_sparse_graph": [[11, "module-sage.graphs.base.static_sparse_graph", false]], "sage.graphs.bipartite_graph": [[12, "module-sage.graphs.bipartite_graph", false]], "sage.graphs.centrality": [[13, "module-sage.graphs.centrality", false]], "sage.graphs.chrompoly": [[14, "module-sage.graphs.chrompoly", false]], "sage.graphs.cliquer": [[15, "module-sage.graphs.cliquer", false]], "sage.graphs.cographs": [[16, "module-sage.graphs.cographs", false]], "sage.graphs.comparability": [[17, "module-sage.graphs.comparability", false]], "sage.graphs.connectivity": [[18, "module-sage.graphs.connectivity", false]], "sage.graphs.convexity_properties": [[19, "module-sage.graphs.convexity_properties", false]], "sage.graphs.digraph": [[20, "module-sage.graphs.digraph", false]], "sage.graphs.digraph_generators": [[21, "module-sage.graphs.digraph_generators", false]], "sage.graphs.distances_all_pairs": [[22, "module-sage.graphs.distances_all_pairs", false]], "sage.graphs.domination": [[23, "module-sage.graphs.domination", false]], "sage.graphs.edge_connectivity": [[24, "module-sage.graphs.edge_connectivity", false]], "sage.graphs.generators.basic": [[25, "module-sage.graphs.generators.basic", false]], "sage.graphs.generators.chessboard": [[26, "module-sage.graphs.generators.chessboard", false]], "sage.graphs.generators.classical_geometries": [[27, "module-sage.graphs.generators.classical_geometries", false]], "sage.graphs.generators.distance_regular": [[28, "module-sage.graphs.generators.distance_regular", false]], "sage.graphs.generators.families": [[29, "module-sage.graphs.generators.families", false]], "sage.graphs.generators.intersection": [[30, "module-sage.graphs.generators.intersection", false]], "sage.graphs.generators.platonic_solids": [[31, "module-sage.graphs.generators.platonic_solids", false]], "sage.graphs.generators.random": [[32, "module-sage.graphs.generators.random", false]], "sage.graphs.generators.smallgraphs": [[33, "module-sage.graphs.generators.smallgraphs", false]], "sage.graphs.generators.world_map": [[34, "module-sage.graphs.generators.world_map", false]], "sage.graphs.generic_graph": [[35, "module-sage.graphs.generic_graph", false]], "sage.graphs.generic_graph_pyx": [[36, "module-sage.graphs.generic_graph_pyx", false]], "sage.graphs.genus": [[37, "module-sage.graphs.genus", false]], "sage.graphs.graph": [[38, "module-sage.graphs.graph", false]], "sage.graphs.graph_coloring": [[39, "module-sage.graphs.graph_coloring", false]], "sage.graphs.graph_database": [[40, "module-sage.graphs.graph_database", false]], "sage.graphs.graph_decompositions.bandwidth": [[41, "module-sage.graphs.graph_decompositions.bandwidth", false]], "sage.graphs.graph_decompositions.clique_separators": [[42, "module-sage.graphs.graph_decompositions.clique_separators", false]], "sage.graphs.graph_decompositions.cutwidth": [[43, "module-sage.graphs.graph_decompositions.cutwidth", false]], "sage.graphs.graph_decompositions.fast_digraph": [[44, "module-sage.graphs.graph_decompositions.fast_digraph", false]], "sage.graphs.graph_decompositions.graph_products": [[45, "module-sage.graphs.graph_decompositions.graph_products", false]], "sage.graphs.graph_decompositions.modular_decomposition": [[46, "module-sage.graphs.graph_decompositions.modular_decomposition", false]], "sage.graphs.graph_decompositions.rankwidth": [[47, "module-sage.graphs.graph_decompositions.rankwidth", false]], "sage.graphs.graph_decompositions.slice_decomposition": [[48, "module-sage.graphs.graph_decompositions.slice_decomposition", false]], "sage.graphs.graph_decompositions.tree_decomposition": [[49, "module-sage.graphs.graph_decompositions.tree_decomposition", false]], "sage.graphs.graph_decompositions.vertex_separation": [[50, "module-sage.graphs.graph_decompositions.vertex_separation", false]], "sage.graphs.graph_editor": [[51, "module-sage.graphs.graph_editor", false]], "sage.graphs.graph_generators": [[52, "module-sage.graphs.graph_generators", false]], "sage.graphs.graph_generators_pyx": [[53, "module-sage.graphs.graph_generators_pyx", false]], "sage.graphs.graph_input": [[54, "module-sage.graphs.graph_input", false]], "sage.graphs.graph_latex": [[55, "module-sage.graphs.graph_latex", false]], "sage.graphs.graph_list": [[56, "module-sage.graphs.graph_list", false]], "sage.graphs.graph_plot": [[57, "module-sage.graphs.graph_plot", false]], "sage.graphs.graph_plot_js": [[58, "module-sage.graphs.graph_plot_js", false]], "sage.graphs.hyperbolicity": [[59, "module-sage.graphs.hyperbolicity", false]], "sage.graphs.hypergraph_generators": [[60, "module-sage.graphs.hypergraph_generators", false]], "sage.graphs.independent_sets": [[61, "module-sage.graphs.independent_sets", false]], "sage.graphs.isgci": [[62, "module-sage.graphs.isgci", false]], "sage.graphs.isoperimetric_inequalities": [[63, "module-sage.graphs.isoperimetric_inequalities", false]], "sage.graphs.line_graph": [[64, "module-sage.graphs.line_graph", false]], "sage.graphs.lovasz_theta": [[65, "module-sage.graphs.lovasz_theta", false]], "sage.graphs.matching": [[66, "module-sage.graphs.matching", false]], "sage.graphs.matching_covered_graph": [[67, "module-sage.graphs.matching_covered_graph", false]], "sage.graphs.matchpoly": [[68, "module-sage.graphs.matchpoly", false]], "sage.graphs.orientations": [[69, "module-sage.graphs.orientations", false]], "sage.graphs.partial_cube": [[70, "module-sage.graphs.partial_cube", false]], "sage.graphs.path_enumeration": [[71, "module-sage.graphs.path_enumeration", false]], "sage.graphs.planarity": [[72, "module-sage.graphs.planarity", false]], "sage.graphs.pq_trees": [[73, "module-sage.graphs.pq_trees", false]], "sage.graphs.schnyder": [[74, "module-sage.graphs.schnyder", false]], "sage.graphs.spanning_tree": [[75, "module-sage.graphs.spanning_tree", false]], "sage.graphs.strongly_regular_db": [[76, "module-sage.graphs.strongly_regular_db", false]], "sage.graphs.traversals": [[77, "module-sage.graphs.traversals", false]], "sage.graphs.trees": [[78, "module-sage.graphs.trees", false]], "sage.graphs.tutte_polynomial": [[79, "module-sage.graphs.tutte_polynomial", false]], "sage.graphs.views": [[80, "module-sage.graphs.views", false]], "sage.graphs.weakly_chordal": [[81, "module-sage.graphs.weakly_chordal", false]], "save_afile() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.save_afile", false]], "schlaefligraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.SchlaefliGraph", false]], "schlaefligraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.SchlaefliGraph", false]], "search_iterator (class in sage.graphs.base.c_graph)": [[4, "sage.graphs.base.c_graph.Search_iterator", false]], "seidel_adjacency_matrix() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.seidel_adjacency_matrix", false]], "seidel_switching() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.seidel_switching", false]], "series (sage.graphs.graph_decompositions.modular_decomposition.nodetype attribute)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.NodeType.SERIES", false]], "set_contiguous() (sage.graphs.pq_trees.p method)": [[73, "sage.graphs.pq_trees.P.set_contiguous", false]], "set_contiguous() (sage.graphs.pq_trees.q method)": [[73, "sage.graphs.pq_trees.Q.set_contiguous", false]], "set_edge_label() (sage.graphs.base.dense_graph.densegraphbackend method)": [[5, "sage.graphs.base.dense_graph.DenseGraphBackend.set_edge_label", false]], "set_edge_label() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.set_edge_label", false]], "set_edge_label() (sage.graphs.base.sparse_graph.sparsegraphbackend method)": [[8, "sage.graphs.base.sparse_graph.SparseGraphBackend.set_edge_label", false]], "set_edge_label() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.set_edge_label", false]], "set_edge_label() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.set_edge_label", false]], "set_edges() (sage.graphs.graph_plot.graphplot method)": [[57, "sage.graphs.graph_plot.GraphPlot.set_edges", false]], "set_embedding() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.set_embedding", false]], "set_latex_options() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.set_latex_options", false]], "set_option() (sage.graphs.graph_latex.graphlatex method)": [[55, "sage.graphs.graph_latex.GraphLatex.set_option", false]], "set_options() (sage.graphs.graph_latex.graphlatex method)": [[55, "sage.graphs.graph_latex.GraphLatex.set_options", false]], "set_pos() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.set_pos", false]], "set_pos() (sage.graphs.graph_plot.graphplot method)": [[57, "sage.graphs.graph_plot.GraphPlot.set_pos", false]], "set_vertex() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.set_vertex", false]], "set_vertices() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.set_vertices", false]], "set_vertices() (sage.graphs.graph_plot.graphplot method)": [[57, "sage.graphs.graph_plot.GraphPlot.set_vertices", false]], "setup_latex_preamble() (in module sage.graphs.graph_latex)": [[55, "sage.graphs.graph_latex.setup_latex_preamble", false]], "shortened_000_111_extended_binary_golay_code_graph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.shortened_000_111_extended_binary_Golay_code_graph", false]], "shortened_000_111_extended_binary_golay_code_graph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.shortened_000_111_extended_binary_Golay_code_graph", false]], "shortened_00_11_binary_golay_code_graph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.shortened_00_11_binary_Golay_code_graph", false]], "shortened_00_11_binary_golay_code_graph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.shortened_00_11_binary_Golay_code_graph", false]], "shortest_path() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.shortest_path", false]], "shortest_path() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.shortest_path", false]], "shortest_path_all_pairs() (in module sage.graphs.distances_all_pairs)": [[22, "sage.graphs.distances_all_pairs.shortest_path_all_pairs", false]], "shortest_path_all_pairs() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.shortest_path_all_pairs", false]], "shortest_path_all_vertices() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.shortest_path_all_vertices", false]], "shortest_path_length() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.shortest_path_length", false]], "shortest_path_lengths() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.shortest_path_lengths", false]], "shortest_path_special() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.shortest_path_special", false]], "shortest_paths() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.shortest_paths", false]], "shortest_paths() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.shortest_paths", false]], "shortest_paths_from_vertices() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.shortest_paths_from_vertices", false]], "shortest_simple_paths() (in module sage.graphs.path_enumeration)": [[71, "sage.graphs.path_enumeration.shortest_simple_paths", false]], "shortest_simple_paths() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.shortest_simple_paths", false]], "show() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.show", false]], "show() (sage.graphs.graph_database.graphquery method)": [[40, "sage.graphs.graph_database.GraphQuery.show", false]], "show() (sage.graphs.graph_plot.graphplot method)": [[57, "sage.graphs.graph_plot.GraphPlot.show", false]], "show3d() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.show3d", false]], "show_all() (sage.graphs.isgci.graphclasses method)": [[62, "sage.graphs.isgci.GraphClasses.show_all", false]], "show_graphs() (in module sage.graphs.graph_list)": [[56, "sage.graphs.graph_list.show_graphs", false]], "shrikhandegraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.ShrikhandeGraph", false]], "shrikhandegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.ShrikhandeGraph", false]], "sierpinskigasketgraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.SierpinskiGasketGraph", false]], "sierpinskigasketgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.SierpinskiGasketGraph", false]], "simple_connected_genus_backtracker (class in sage.graphs.genus)": [[37, "sage.graphs.genus.simple_connected_genus_backtracker", false]], "simple_connected_graph_genus() (in module sage.graphs.genus)": [[37, "sage.graphs.genus.simple_connected_graph_genus", false]], "simplify() (sage.graphs.pq_trees.pq method)": [[73, "sage.graphs.pq_trees.PQ.simplify", false]], "simsgewirtzgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.SimsGewirtzGraph", false]], "simsgewirtzgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.SimsGewirtzGraph", false]], "sinks() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.sinks", false]], "size() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.size", false]], "slice() (sage.graphs.graph_decompositions.slice_decomposition.slicedecomposition method)": [[48, "sage.graphs.graph_decompositions.slice_decomposition.SliceDecomposition.slice", false]], "slice_decomposition() (in module sage.graphs.graph_decompositions.slice_decomposition)": [[48, "sage.graphs.graph_decompositions.slice_decomposition.slice_decomposition", false]], "slice_decomposition() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.slice_decomposition", false]], "slicedecomposition (class in sage.graphs.graph_decompositions.slice_decomposition)": [[48, "sage.graphs.graph_decompositions.slice_decomposition.SliceDecomposition", false]], "small_integer_to_graph6() (in module sage.graphs.generic_graph_pyx)": [[36, "sage.graphs.generic_graph_pyx.small_integer_to_graph6", false]], "smallgraphs (sage.graphs.graph_generators.graphgenerators attribute)": [[52, "sage.graphs.graph_generators.GraphGenerators.smallgraphs", false]], "smallgraphs() (sage.graphs.isgci.graphclasses method)": [[62, "sage.graphs.isgci.GraphClasses.smallgraphs", false]], "sources() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.sources", false]], "sousseliergraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.SousselierGraph", false]], "sousseliergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.SousselierGraph", false]], "spanning_trees() (in module sage.graphs.spanning_tree)": [[75, "sage.graphs.spanning_tree.spanning_trees", false]], "spanning_trees() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.spanning_trees", false]], "spanning_trees_count() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.spanning_trees_count", false]], "sparse6_string() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.sparse6_string", false]], "sparsegraph (class in sage.graphs.base.sparse_graph)": [[8, "sage.graphs.base.sparse_graph.SparseGraph", false]], "sparsegraphbackend (class in sage.graphs.base.sparse_graph)": [[8, "sage.graphs.base.sparse_graph.SparseGraphBackend", false]], "spectral_radius() (in module sage.graphs.base.static_sparse_graph)": [[11, "sage.graphs.base.static_sparse_graph.spectral_radius", false]], "spectral_radius() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.spectral_radius", false]], "spectrum() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.spectrum", false]], "spqr_tree() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.spqr_tree", false]], "spqr_tree() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.spqr_tree", false]], "spqr_tree_to_graph() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.spqr_tree_to_graph", false]], "spring_layout_fast() (in module sage.graphs.generic_graph_pyx)": [[36, "sage.graphs.generic_graph_pyx.spring_layout_fast", false]], "squaredskewhadamardmatrixgraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.SquaredSkewHadamardMatrixGraph", false]], "squaredskewhadamardmatrixgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.SquaredSkewHadamardMatrixGraph", false]], "srg_100_44_18_20() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_100_44_18_20", false]], "srg_100_45_20_20() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_100_45_20_20", false]], "srg_105_32_4_12() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_105_32_4_12", false]], "srg_120_63_30_36() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_120_63_30_36", false]], "srg_120_77_52_44() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_120_77_52_44", false]], "srg_126_25_8_4() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_126_25_8_4", false]], "srg_126_50_13_24() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_126_50_13_24", false]], "srg_1288_792_476_504() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_1288_792_476_504", false]], "srg_144_39_6_12() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_144_39_6_12", false]], "srg_175_72_20_36() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_175_72_20_36", false]], "srg_176_105_68_54() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_176_105_68_54", false]], "srg_176_49_12_14() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_176_49_12_14", false]], "srg_176_90_38_54() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_176_90_38_54", false]], "srg_196_91_42_42() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_196_91_42_42", false]], "srg_210_99_48_45() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_210_99_48_45", false]], "srg_220_84_38_28() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_220_84_38_28", false]], "srg_243_110_37_60() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_243_110_37_60", false]], "srg_253_140_87_65() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_253_140_87_65", false]], "srg_276_140_58_84() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_276_140_58_84", false]], "srg_280_117_44_52() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_280_117_44_52", false]], "srg_280_135_70_60() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_280_135_70_60", false]], "srg_416_100_36_20() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_416_100_36_20", false]], "srg_560_208_72_80() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_560_208_72_80", false]], "srg_630_85_20_10() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_630_85_20_10", false]], "srg_from_rshcd() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.SRG_from_RSHCD", false]], "staircasegraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.StaircaseGraph", false]], "staircasegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.StaircaseGraph", false]], "stargraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.StarGraph", false]], "stargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.StarGraph", false]], "staticsparsebackend (class in sage.graphs.base.static_sparse_backend)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend", false]], "staticsparsecgraph (class in sage.graphs.base.static_sparse_backend)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseCGraph", false]], "steiner_tree() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.steiner_tree", false]], "strong_articulation_points() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.strong_articulation_points", false]], "strong_articulation_points() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.strong_articulation_points", false]], "strong_orientation() (in module sage.graphs.orientations)": [[69, "sage.graphs.orientations.strong_orientation", false]], "strong_orientation() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.strong_orientation", false]], "strong_orientations_iterator() (in module sage.graphs.orientations)": [[69, "sage.graphs.orientations.strong_orientations_iterator", false]], "strong_orientations_iterator() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.strong_orientations_iterator", false]], "strong_product() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.strong_product", false]], "strongly_connected_component_containing_vertex() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.strongly_connected_component_containing_vertex", false]], "strongly_connected_component_containing_vertex() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.strongly_connected_component_containing_vertex", false]], "strongly_connected_component_containing_vertex() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.strongly_connected_component_containing_vertex", false]], "strongly_connected_components() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.strongly_connected_components", false]], "strongly_connected_components_digraph() (in module sage.graphs.base.static_sparse_graph)": [[11, "sage.graphs.base.static_sparse_graph.strongly_connected_components_digraph", false]], "strongly_connected_components_digraph() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.strongly_connected_components_digraph", false]], "strongly_connected_components_digraph() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.strongly_connected_components_digraph", false]], "strongly_connected_components_subgraphs() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.strongly_connected_components_subgraphs", false]], "strongly_connected_components_subgraphs() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.strongly_connected_components_subgraphs", false]], "strongly_regular_db (sage.graphs.graph_generators.graphgenerators attribute)": [[52, "sage.graphs.graph_generators.GraphGenerators.strongly_regular_db", false]], "strongly_regular_from_two_intersection_set() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.strongly_regular_from_two_intersection_set", false]], "strongly_regular_from_two_weight_code() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.strongly_regular_from_two_weight_code", false]], "strongly_regular_graph() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.strongly_regular_graph", false]], "strongly_regular_graph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.strongly_regular_graph", false]], "strongly_regular_graph_lazy() (in module sage.graphs.strongly_regular_db)": [[76, "sage.graphs.strongly_regular_db.strongly_regular_graph_lazy", false]], "stronglyregular() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.StronglyRegular", false]], "subdivide_edge() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.subdivide_edge", false]], "subdivide_edges() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.subdivide_edges", false]], "subgraph() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.subgraph", false]], "subgraph_decompositions() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.subgraph_decompositions", false]], "subgraph_given_vertices() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.subgraph_given_vertices", false]], "subgraph_search() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.subgraph_search", false]], "subgraph_search_count() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.subgraph_search_count", false]], "subgraph_search_iterator() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.subgraph_search_iterator", false]], "subgraphs_to_query() (in module sage.graphs.graph_database)": [[40, "sage.graphs.graph_database.subgraphs_to_query", false]], "subgraphsearch (class in sage.graphs.generic_graph_pyx)": [[36, "sage.graphs.generic_graph_pyx.SubgraphSearch", false]], "suzukigraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.SuzukiGraph", false]], "suzukigraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.SuzukiGraph", false]], "switchedsquaredskewhadamardmatrixgraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.SwitchedSquaredSkewHadamardMatrixGraph", false]], "switchedsquaredskewhadamardmatrixgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.SwitchedSquaredSkewHadamardMatrixGraph", false]], "sylvestergraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.SylvesterGraph", false]], "sylvestergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.SylvesterGraph", false]], "symmetric_edge_polytope() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.symmetric_edge_polytope", false]], "symplecticdualpolargraph() (in module sage.graphs.generators.classical_geometries)": [[27, "sage.graphs.generators.classical_geometries.SymplecticDualPolarGraph", false]], "symplecticdualpolargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.SymplecticDualPolarGraph", false]], "symplecticpolargraph() (in module sage.graphs.generators.classical_geometries)": [[27, "sage.graphs.generators.classical_geometries.SymplecticPolarGraph", false]], "symplecticpolargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.SymplecticPolarGraph", false]], "szeged_index() (in module sage.graphs.distances_all_pairs)": [[22, "sage.graphs.distances_all_pairs.szeged_index", false]], "szeged_index() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.szeged_index", false]], "szekeressnarkgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.SzekeresSnarkGraph", false]], "szekeressnarkgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.SzekeresSnarkGraph", false]], "t2stargeneralizedquadranglegraph() (in module sage.graphs.generators.classical_geometries)": [[27, "sage.graphs.generators.classical_geometries.T2starGeneralizedQuadrangleGraph", false]], "t2stargeneralizedquadranglegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.T2starGeneralizedQuadrangleGraph", false]], "tabacjngraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.TabacjnGraph", false]], "tabacjngraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.TabacjnGraph", false]], "tachyon_vertex_plot() (in module sage.graphs.generic_graph)": [[35, "sage.graphs.generic_graph.tachyon_vertex_plot", false]], "tadpolegraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.TadpoleGraph", false]], "tadpolegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.TadpoleGraph", false]], "tarjan_strongly_connected_components() (in module sage.graphs.base.static_sparse_graph)": [[11, "sage.graphs.base.static_sparse_graph.tarjan_strongly_connected_components", false]], "taylortwographdescendantsrg() (in module sage.graphs.generators.classical_geometries)": [[27, "sage.graphs.generators.classical_geometries.TaylorTwographDescendantSRG", false]], "taylortwographdescendantsrg() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.TaylorTwographDescendantSRG", false]], "taylortwographsrg() (in module sage.graphs.generators.classical_geometries)": [[27, "sage.graphs.generators.classical_geometries.TaylorTwographSRG", false]], "taylortwographsrg() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.TaylorTwographSRG", false]], "tensor_product() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.tensor_product", false]], "test (class in sage.graphs.graph_coloring)": [[39, "sage.graphs.graph_coloring.Test", false]], "test_gamma_modules() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.test_gamma_modules", false]], "test_maximal_modules() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.test_maximal_modules", false]], "test_modular_decomposition() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.test_modular_decomposition", false]], "test_module() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.test_module", false]], "test_popcount() (in module sage.graphs.graph_decompositions.fast_digraph)": [[44, "sage.graphs.graph_decompositions.fast_digraph.test_popcount", false]], "tetrahedralgraph() (in module sage.graphs.generators.platonic_solids)": [[31, "sage.graphs.generators.platonic_solids.TetrahedralGraph", false]], "tetrahedralgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.TetrahedralGraph", false]], "thomsengraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.ThomsenGraph", false]], "thomsengraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.ThomsenGraph", false]], "tietzegraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.TietzeGraph", false]], "tietzegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.TietzeGraph", false]], "tikz() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.tikz", false]], "tkz_picture() (sage.graphs.graph_latex.graphlatex method)": [[55, "sage.graphs.graph_latex.GraphLatex.tkz_picture", false]], "to_dictionary() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.to_dictionary", false]], "to_directed() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.to_directed", false]], "to_directed() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.to_directed", false]], "to_graph6() (in module sage.graphs.graph_list)": [[56, "sage.graphs.graph_list.to_graph6", false]], "to_graphics_array() (in module sage.graphs.graph_list)": [[56, "sage.graphs.graph_list.to_graphics_array", false]], "to_simple() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.to_simple", false]], "to_sparse6() (in module sage.graphs.graph_list)": [[56, "sage.graphs.graph_list.to_sparse6", false]], "to_undirected() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.to_undirected", false]], "to_undirected() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.to_undirected", false]], "to_undirected() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.to_undirected", false]], "tolerancegraph() (in module sage.graphs.generators.intersection)": [[30, "sage.graphs.generators.intersection.ToleranceGraph", false]], "tolerancegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.ToleranceGraph", false]], "topological_minor() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.topological_minor", false]], "topological_sort() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.topological_sort", false]], "topological_sort_generator() (sage.graphs.digraph.digraph method)": [[20, "sage.graphs.digraph.DiGraph.topological_sort_generator", false]], "toroidal6regulargrid2dgraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.Toroidal6RegularGrid2dGraph", false]], "toroidal6regulargrid2dgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.Toroidal6RegularGrid2dGraph", false]], "toroidalgrid2dgraph() (in module sage.graphs.generators.basic)": [[25, "sage.graphs.generators.basic.ToroidalGrid2dGraph", false]], "toroidalgrid2dgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.ToroidalGrid2dGraph", false]], "tournaments_nauty() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.tournaments_nauty", false]], "trace() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.trace", false]], "transitive_closure() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.transitive_closure", false]], "transitive_reduction() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.transitive_reduction", false]], "transitive_reduction_acyclic() (in module sage.graphs.generic_graph_pyx)": [[36, "sage.graphs.generic_graph_pyx.transitive_reduction_acyclic", false]], "transitivetournament() (sage.graphs.digraph_generators.digraphgenerators method)": [[21, "sage.graphs.digraph_generators.DiGraphGenerators.TransitiveTournament", false]], "traveling_salesman_problem() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.traveling_salesman_problem", false]], "tree_to_graph() (in module sage.graphs.cographs)": [[16, "sage.graphs.cographs.tree_to_graph", false]], "tree_to_nested_tuple() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[46, "sage.graphs.graph_decompositions.modular_decomposition.tree_to_nested_tuple", false]], "treeiterator (class in sage.graphs.trees)": [[78, "sage.graphs.trees.TreeIterator", false]], "treelength() (in module sage.graphs.graph_decompositions.tree_decomposition)": [[49, "sage.graphs.graph_decompositions.tree_decomposition.treelength", false]], "treelength() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.treelength", false]], "treelength_lowerbound() (in module sage.graphs.graph_decompositions.tree_decomposition)": [[49, "sage.graphs.graph_decompositions.tree_decomposition.treelength_lowerbound", false]], "treelengthconnected (class in sage.graphs.graph_decompositions.tree_decomposition)": [[49, "sage.graphs.graph_decompositions.tree_decomposition.TreelengthConnected", false]], "treenode (class in sage.graphs.schnyder)": [[74, "sage.graphs.schnyder.TreeNode", false]], "trees() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.trees", false]], "trees() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.trees", false]], "treewidth() (in module sage.graphs.graph_decompositions.tree_decomposition)": [[49, "sage.graphs.graph_decompositions.tree_decomposition.treewidth", false]], "treewidth() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.treewidth", false]], "triangles_count() (in module sage.graphs.base.static_dense_graph)": [[9, "sage.graphs.base.static_dense_graph.triangles_count", false]], "triangles_count() (in module sage.graphs.base.static_sparse_graph)": [[11, "sage.graphs.base.static_sparse_graph.triangles_count", false]], "triangles_count() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.triangles_count", false]], "triangulations() (sage.graphs.graph_generators.graphgenerators method)": [[52, "sage.graphs.graph_generators.GraphGenerators.triangulations", false]], "triconnectivityspqr (class in sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.TriconnectivitySPQR", false]], "tricorngraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.TricornGraph", false]], "tricorngraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.TricornGraph", false]], "truncatedbiwheelgraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.TruncatedBiwheelGraph", false]], "truncatedbiwheelgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.TruncatedBiwheelGraph", false]], "truncatedicosidodecahedralgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.TruncatedIcosidodecahedralGraph", false]], "truncatedicosidodecahedralgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.TruncatedIcosidodecahedralGraph", false]], "truncatedtetrahedralgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.TruncatedTetrahedralGraph", false]], "truncatedtetrahedralgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.TruncatedTetrahedralGraph", false]], "truncatedwittgraph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.TruncatedWittGraph", false]], "truncatedwittgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.TruncatedWittGraph", false]], "turangraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.TuranGraph", false]], "turangraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.TuranGraph", false]], "tutte12cage() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.Tutte12Cage", false]], "tutte12cage() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.Tutte12Cage", false]], "tutte_polynomial() (in module sage.graphs.tutte_polynomial)": [[79, "sage.graphs.tutte_polynomial.tutte_polynomial", false]], "tutte_polynomial() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.tutte_polynomial", false]], "tutte_symmetric_function() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.tutte_symmetric_function", false]], "tuttecoxetergraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.TutteCoxeterGraph", false]], "tuttecoxetergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.TutteCoxeterGraph", false]], "tuttegraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.TutteGraph", false]], "tuttegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.TutteGraph", false]], "twinplexgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.TwinplexGraph", false]], "twinplexgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.TwinplexGraph", false]], "two_factor_petersen() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.two_factor_petersen", false]], "twograph() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.twograph", false]], "u42graph216() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.U42Graph216", false]], "u42graph216() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.U42Graph216", false]], "u42graph540() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.U42Graph540", false]], "u42graph540() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.U42Graph540", false]], "underlying_graph() (in module sage.graphs.tutte_polynomial)": [[79, "sage.graphs.tutte_polynomial.underlying_graph", false]], "underlying_graph() (sage.graphs.graph_decompositions.slice_decomposition.slicedecomposition method)": [[48, "sage.graphs.graph_decompositions.slice_decomposition.SliceDecomposition.underlying_graph", false]], "uniformrandomuniform() (sage.graphs.hypergraph_generators.hypergraphgenerators method)": [[60, "sage.graphs.hypergraph_generators.HypergraphGenerators.UniformRandomUniform", false]], "union() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.union", false]], "unitarydualpolargraph() (in module sage.graphs.generators.classical_geometries)": [[27, "sage.graphs.generators.classical_geometries.UnitaryDualPolarGraph", false]], "unitarydualpolargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.UnitaryDualPolarGraph", false]], "unitarypolargraph() (in module sage.graphs.generators.classical_geometries)": [[27, "sage.graphs.generators.classical_geometries.UnitaryPolarGraph", false]], "unitarypolargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.UnitaryPolarGraph", false]], "unlabeled_edges() (sage.graphs.tutte_polynomial.ear method)": [[79, "sage.graphs.tutte_polynomial.Ear.unlabeled_edges", false]], "unpickle_graph_backend() (in module sage.graphs.base.graph_backends)": [[6, "sage.graphs.base.graph_backends.unpickle_graph_backend", false]], "update_db() (sage.graphs.isgci.graphclasses method)": [[62, "sage.graphs.isgci.GraphClasses.update_db", false]], "update_matching() (sage.graphs.matching_covered_graph.matchingcoveredgraph method)": [[67, "sage.graphs.matching_covered_graph.MatchingCoveredGraph.update_matching", false]], "usamap() (in module sage.graphs.generators.world_map)": [[34, "sage.graphs.generators.world_map.USAMap", false]], "usamap() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.USAMap", false]], "ustimenkograph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.UstimenkoGraph", false]], "ustimenkograph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.UstimenkoGraph", false]], "vanlintschrijvergraph() (in module sage.graphs.generators.distance_regular)": [[28, "sage.graphs.generators.distance_regular.vanLintSchrijverGraph", false]], "vanlintschrijvergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.vanLintSchrijverGraph", false]], "vertex_boundary() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.vertex_boundary", false]], "vertex_coloring() (in module sage.graphs.graph_coloring)": [[39, "sage.graphs.graph_coloring.vertex_coloring", false]], "vertex_connectivity() (in module sage.graphs.connectivity)": [[18, "sage.graphs.connectivity.vertex_connectivity", false]], "vertex_connectivity() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.vertex_connectivity", false]], "vertex_cover() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.vertex_cover", false]], "vertex_cover() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.vertex_cover", false]], "vertex_cut() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.vertex_cut", false]], "vertex_disjoint_paths() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.vertex_disjoint_paths", false]], "vertex_isoperimetric_number() (in module sage.graphs.isoperimetric_inequalities)": [[63, "sage.graphs.isoperimetric_inequalities.vertex_isoperimetric_number", false]], "vertex_isoperimetric_number() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.vertex_isoperimetric_number", false]], "vertex_iterator() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.vertex_iterator", false]], "vertex_separation() (in module sage.graphs.graph_decompositions.vertex_separation)": [[50, "sage.graphs.graph_decompositions.vertex_separation.vertex_separation", false]], "vertex_separation_bab() (in module sage.graphs.graph_decompositions.vertex_separation)": [[50, "sage.graphs.graph_decompositions.vertex_separation.vertex_separation_BAB", false]], "vertex_separation_exp() (in module sage.graphs.graph_decompositions.vertex_separation)": [[50, "sage.graphs.graph_decompositions.vertex_separation.vertex_separation_exp", false]], "vertex_separation_milp() (in module sage.graphs.graph_decompositions.vertex_separation)": [[50, "sage.graphs.graph_decompositions.vertex_separation.vertex_separation_MILP", false]], "vertexorder (class in sage.graphs.tutte_polynomial)": [[79, "sage.graphs.tutte_polynomial.VertexOrder", false]], "vertices (sage.graphs.tutte_polynomial.ear property)": [[79, "sage.graphs.tutte_polynomial.Ear.vertices", false]], "vertices() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.vertices", false]], "verts() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.verts", false]], "verts() (sage.graphs.base.static_sparse_backend.staticsparsecgraph method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseCGraph.verts", false]], "wagnergraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.WagnerGraph", false]], "wagnergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.WagnerGraph", false]], "watkinssnarkgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.WatkinsSnarkGraph", false]], "watkinssnarkgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.WatkinsSnarkGraph", false]], "weighted() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.weighted", false]], "weighted_adjacency_matrix() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.weighted_adjacency_matrix", false]], "wellsgraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.WellsGraph", false]], "wellsgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.WellsGraph", false]], "wheelgraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.WheelGraph", false]], "wheelgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.WheelGraph", false]], "width_of_cut_decomposition() (in module sage.graphs.graph_decompositions.cutwidth)": [[43, "sage.graphs.graph_decompositions.cutwidth.width_of_cut_decomposition", false]], "width_of_path_decomposition() (in module sage.graphs.graph_decompositions.vertex_separation)": [[50, "sage.graphs.graph_decompositions.vertex_separation.width_of_path_decomposition", false]], "width_of_tree_decomposition() (in module sage.graphs.graph_decompositions.tree_decomposition)": [[49, "sage.graphs.graph_decompositions.tree_decomposition.width_of_tree_decomposition", false]], "wiener_index() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.wiener_index", false]], "wiener_index() (in module sage.graphs.distances_all_pairs)": [[22, "sage.graphs.distances_all_pairs.wiener_index", false]], "wiener_index() (sage.graphs.generic_graph.genericgraph method)": [[35, "sage.graphs.generic_graph.GenericGraph.wiener_index", false]], "wienerarayagraph() (in module sage.graphs.generators.smallgraphs)": [[33, "sage.graphs.generators.smallgraphs.WienerArayaGraph", false]], "wienerarayagraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.WienerArayaGraph", false]], "windmillgraph() (in module sage.graphs.generators.families)": [[29, "sage.graphs.generators.families.WindmillGraph", false]], "windmillgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.WindmillGraph", false]], "world_map (sage.graphs.graph_generators.graphgenerators attribute)": [[52, "sage.graphs.graph_generators.GraphGenerators.world_map", false]], "worldmap() (in module sage.graphs.generators.world_map)": [[34, "sage.graphs.generators.world_map.WorldMap", false]], "worldmap() (sage.graphs.graph_generators.graphgenerators static method)": [[52, "sage.graphs.graph_generators.GraphGenerators.WorldMap", false]], "write_to_eps() (sage.graphs.graph.graph method)": [[38, "sage.graphs.graph.Graph.write_to_eps", false]], "xslice_data() (sage.graphs.graph_decompositions.slice_decomposition.slicedecomposition method)": [[48, "sage.graphs.graph_decompositions.slice_decomposition.SliceDecomposition.xslice_data", false]], "xslice_sequence() (sage.graphs.graph_decompositions.slice_decomposition.slicedecomposition method)": [[48, "sage.graphs.graph_decompositions.slice_decomposition.SliceDecomposition.xslice_sequence", false]], "yen_k_shortest_simple_paths() (in module sage.graphs.path_enumeration)": [[71, "sage.graphs.path_enumeration.yen_k_shortest_simple_paths", false]]}, "objects": {"sage.combinat.designs": [[1, 0, 0, "-", "incidence_structures"]], "sage.combinat.designs.incidence_structures": [[1, 1, 1, "", "IncidenceStructure"]], "sage.combinat.designs.incidence_structures.IncidenceStructure": [[1, 2, 1, "", "automorphism_group"], [1, 2, 1, "", "block_sizes"], [1, 2, 1, "", "blocks"], [1, 2, 1, "", "canonical_label"], [1, 2, 1, "", "coloring"], [1, 2, 1, "", "complement"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "degree"], [1, 2, 1, "", "degrees"], [1, 2, 1, "", "dual"], [1, 2, 1, "", "edge_coloring"], [1, 2, 1, "", "ground_set"], [1, 2, 1, "", "incidence_graph"], [1, 2, 1, "", "incidence_matrix"], [1, 2, 1, "", "induced_substructure"], [1, 2, 1, "", "intersection_graph"], [1, 2, 1, "", "is_berge_cyclic"], [1, 2, 1, "", "is_connected"], [1, 2, 1, "", "is_generalized_quadrangle"], [1, 2, 1, "", "is_isomorphic"], [1, 2, 1, "", "is_regular"], [1, 2, 1, "", "is_resolvable"], [1, 2, 1, "", "is_simple"], [1, 2, 1, "", "is_spread"], [1, 2, 1, "", "is_t_design"], [1, 2, 1, "", "is_uniform"], [1, 2, 1, "", "isomorphic_substructures_iterator"], [1, 2, 1, "", "num_blocks"], [1, 2, 1, "", "num_points"], [1, 2, 1, "", "packing"], [1, 2, 1, "", "rank"], [1, 2, 1, "", "relabel"], [1, 2, 1, "", "trace"]], "sage.graphs": [[2, 0, 0, "-", "asteroidal_triples"], [12, 0, 0, "-", "bipartite_graph"], [13, 0, 0, "-", "centrality"], [14, 0, 0, "-", "chrompoly"], [15, 0, 0, "-", "cliquer"], [16, 0, 0, "-", "cographs"], [17, 0, 0, "-", "comparability"], [18, 0, 0, "-", "connectivity"], [19, 0, 0, "-", "convexity_properties"], [20, 0, 0, "-", "digraph"], [21, 0, 0, "-", "digraph_generators"], [22, 0, 0, "-", "distances_all_pairs"], [23, 0, 0, "-", "domination"], [24, 0, 0, "-", "edge_connectivity"], [35, 0, 0, "-", "generic_graph"], [36, 0, 0, "-", "generic_graph_pyx"], [37, 0, 0, "-", "genus"], [38, 0, 0, "-", "graph"], [39, 0, 0, "-", "graph_coloring"], [40, 0, 0, "-", "graph_database"], [51, 0, 0, "-", "graph_editor"], [52, 0, 0, "-", "graph_generators"], [53, 0, 0, "-", "graph_generators_pyx"], [54, 0, 0, "-", "graph_input"], [55, 0, 0, "-", "graph_latex"], [56, 0, 0, "-", "graph_list"], [57, 0, 0, "-", "graph_plot"], [58, 0, 0, "-", "graph_plot_js"], [59, 0, 0, "-", "hyperbolicity"], [60, 0, 0, "-", "hypergraph_generators"], [61, 0, 0, "-", "independent_sets"], [62, 0, 0, "-", "isgci"], [63, 0, 0, "-", "isoperimetric_inequalities"], [64, 0, 0, "-", "line_graph"], [65, 0, 0, "-", "lovasz_theta"], [66, 0, 0, "-", "matching"], [67, 0, 0, "-", "matching_covered_graph"], [68, 0, 0, "-", "matchpoly"], [69, 0, 0, "-", "orientations"], [70, 0, 0, "-", "partial_cube"], [71, 0, 0, "-", "path_enumeration"], [72, 0, 0, "-", "planarity"], [73, 0, 0, "-", "pq_trees"], [74, 0, 0, "-", "schnyder"], [75, 0, 0, "-", "spanning_tree"], [76, 0, 0, "-", "strongly_regular_db"], [77, 0, 0, "-", "traversals"], [78, 0, 0, "-", "trees"], [79, 0, 0, "-", "tutte_polynomial"], [80, 0, 0, "-", "views"], [81, 0, 0, "-", "weakly_chordal"]], "sage.graphs.asteroidal_triples": [[2, 3, 1, "", "is_asteroidal_triple_free"]], "sage.graphs.base": [[3, 0, 0, "-", "boost_graph"], [4, 0, 0, "-", "c_graph"], [5, 0, 0, "-", "dense_graph"], [6, 0, 0, "-", "graph_backends"], [7, 0, 0, "-", "overview"], [8, 0, 0, "-", "sparse_graph"], [9, 0, 0, "-", "static_dense_graph"], [10, 0, 0, "-", "static_sparse_backend"], [11, 0, 0, "-", "static_sparse_graph"]], "sage.graphs.base.boost_graph": [[3, 3, 1, "", "bandwidth_heuristics"], [3, 3, 1, "", "blocks_and_cut_vertices"], [3, 3, 1, "", "clustering_coeff"], [3, 3, 1, "", "diameter"], [3, 3, 1, "", "diameter_DHV"], [3, 3, 1, "", "dominator_tree"], [3, 3, 1, "", "eccentricity_DHV"], [3, 3, 1, "", "edge_connectivity"], [3, 3, 1, "", "floyd_warshall_shortest_paths"], [3, 3, 1, "", "johnson_closeness_centrality"], [3, 3, 1, "", "johnson_shortest_paths"], [3, 3, 1, "", "min_cycle_basis"], [3, 3, 1, "", "min_spanning_tree"], [3, 3, 1, "", "radius_DHV"], [3, 3, 1, "", "shortest_paths"], [3, 3, 1, "", "shortest_paths_from_vertices"], [3, 3, 1, "", "wiener_index"]], "sage.graphs.base.c_graph": [[4, 1, 1, "", "CGraph"], [4, 1, 1, "", "CGraphBackend"], [4, 1, 1, "", "Search_iterator"]], "sage.graphs.base.c_graph.CGraph": [[4, 2, 1, "", "add_arc"], [4, 2, 1, "", "add_vertex"], [4, 2, 1, "", "add_vertices"], [4, 2, 1, "", "all_arcs"], [4, 2, 1, "", "arc_label"], [4, 2, 1, "", "check_vertex"], [4, 2, 1, "", "current_allocation"], [4, 2, 1, "", "del_all_arcs"], [4, 2, 1, "", "del_arc_label"], [4, 2, 1, "", "del_vertex"], [4, 2, 1, "", "has_arc"], [4, 2, 1, "", "has_arc_label"], [4, 2, 1, "", "has_vertex"], [4, 2, 1, "", "in_neighbors"], [4, 2, 1, "", "out_neighbors"], [4, 2, 1, "", "realloc"], [4, 2, 1, "", "verts"]], "sage.graphs.base.c_graph.CGraphBackend": [[4, 2, 1, "", "add_edge"], [4, 2, 1, "", "add_edges"], [4, 2, 1, "", "add_vertex"], [4, 2, 1, "", "add_vertices"], [4, 2, 1, "", "bidirectional_dijkstra"], [4, 2, 1, "", "bidirectional_dijkstra_special"], [4, 2, 1, "", "breadth_first_search"], [4, 2, 1, "", "c_graph"], [4, 2, 1, "", "degree"], [4, 2, 1, "", "del_edge"], [4, 2, 1, "", "del_edges"], [4, 2, 1, "", "del_vertex"], [4, 2, 1, "", "del_vertices"], [4, 2, 1, "", "depth_first_search"], [4, 2, 1, "", "has_vertex"], [4, 2, 1, "", "in_degree"], [4, 2, 1, "", "is_connected"], [4, 2, 1, "", "is_directed_acyclic"], [4, 2, 1, "", "is_strongly_connected"], [4, 2, 1, "", "is_subgraph"], [4, 2, 1, "", "iterator_edges"], [4, 2, 1, "", "iterator_in_edges"], [4, 2, 1, "", "iterator_in_nbrs"], [4, 2, 1, "", "iterator_nbrs"], [4, 2, 1, "", "iterator_out_edges"], [4, 2, 1, "", "iterator_out_nbrs"], [4, 2, 1, "", "iterator_unsorted_edges"], [4, 2, 1, "", "iterator_verts"], [4, 2, 1, "", "loops"], [4, 2, 1, "", "num_edges"], [4, 2, 1, "", "num_verts"], [4, 2, 1, "", "out_degree"], [4, 2, 1, "", "relabel"], [4, 2, 1, "", "shortest_path"], [4, 2, 1, "", "shortest_path_all_vertices"], [4, 2, 1, "", "shortest_path_special"], [4, 2, 1, "", "strongly_connected_component_containing_vertex"], [4, 2, 1, "", "subgraph_given_vertices"]], "sage.graphs.base.dense_graph": [[5, 1, 1, "", "DenseGraph"], [5, 1, 1, "", "DenseGraphBackend"]], "sage.graphs.base.dense_graph.DenseGraph": [[5, 2, 1, "", "complement"], [5, 2, 1, "", "in_degree"], [5, 2, 1, "", "out_degree"], [5, 2, 1, "", "realloc"]], "sage.graphs.base.dense_graph.DenseGraphBackend": [[5, 2, 1, "", "add_edges"], [5, 2, 1, "", "get_edge_label"], [5, 2, 1, "", "has_edge"], [5, 2, 1, "", "multiple_edges"], [5, 2, 1, "", "set_edge_label"]], "sage.graphs.base.graph_backends": [[6, 1, 1, "", "GenericGraphBackend"], [6, 3, 1, "", "unpickle_graph_backend"]], "sage.graphs.base.graph_backends.GenericGraphBackend": [[6, 2, 1, "", "add_edge"], [6, 2, 1, "", "add_edges"], [6, 2, 1, "", "add_vertex"], [6, 2, 1, "", "add_vertices"], [6, 2, 1, "", "degree"], [6, 2, 1, "", "del_edge"], [6, 2, 1, "", "del_vertex"], [6, 2, 1, "", "del_vertices"], [6, 2, 1, "", "get_edge_label"], [6, 2, 1, "", "has_edge"], [6, 2, 1, "", "has_vertex"], [6, 2, 1, "", "in_degree"], [6, 2, 1, "", "iterator_edges"], [6, 2, 1, "", "iterator_in_edges"], [6, 2, 1, "", "iterator_in_nbrs"], [6, 2, 1, "", "iterator_nbrs"], [6, 2, 1, "", "iterator_out_edges"], [6, 2, 1, "", "iterator_out_nbrs"], [6, 2, 1, "", "iterator_verts"], [6, 2, 1, "", "loops"], [6, 2, 1, "", "multiple_edges"], [6, 2, 1, "", "name"], [6, 2, 1, "", "num_edges"], [6, 2, 1, "", "num_verts"], [6, 2, 1, "", "out_degree"], [6, 2, 1, "", "relabel"], [6, 2, 1, "", "set_edge_label"]], "sage.graphs.base.sparse_graph": [[8, 1, 1, "", "SparseGraph"], [8, 1, 1, "", "SparseGraphBackend"]], "sage.graphs.base.sparse_graph.SparseGraph": [[8, 2, 1, "", "add_arc_label"], [8, 2, 1, "", "in_degree"], [8, 2, 1, "", "is_directed"], [8, 2, 1, "", "out_degree"], [8, 2, 1, "", "realloc"]], "sage.graphs.base.sparse_graph.SparseGraphBackend": [[8, 2, 1, "", "get_edge_label"], [8, 2, 1, "", "has_edge"], [8, 2, 1, "", "multiple_edges"], [8, 2, 1, "", "set_edge_label"]], "sage.graphs.base.static_dense_graph": [[9, 3, 1, "", "connected_full_subgraphs"], [9, 3, 1, "", "connected_subgraph_iterator"], [9, 3, 1, "", "is_strongly_regular"], [9, 3, 1, "", "is_triangle_free"], [9, 3, 1, "", "triangles_count"]], "sage.graphs.base.static_sparse_backend": [[10, 1, 1, "", "StaticSparseBackend"], [10, 1, 1, "", "StaticSparseCGraph"]], "sage.graphs.base.static_sparse_backend.StaticSparseBackend": [[10, 2, 1, "", "add_edge"], [10, 2, 1, "", "add_edges"], [10, 2, 1, "", "add_vertex"], [10, 2, 1, "", "add_vertices"], [10, 2, 1, "", "allows_loops"], [10, 2, 1, "", "degree"], [10, 2, 1, "", "del_edge"], [10, 2, 1, "", "del_edges"], [10, 2, 1, "", "del_vertex"], [10, 2, 1, "", "del_vertices"], [10, 2, 1, "", "get_edge_label"], [10, 2, 1, "", "has_edge"], [10, 2, 1, "", "has_vertex"], [10, 2, 1, "", "in_degree"], [10, 2, 1, "", "iterator_edges"], [10, 2, 1, "", "iterator_in_edges"], [10, 2, 1, "", "iterator_in_nbrs"], [10, 2, 1, "", "iterator_nbrs"], [10, 2, 1, "", "iterator_out_edges"], [10, 2, 1, "", "iterator_out_nbrs"], [10, 2, 1, "", "iterator_unsorted_edges"], [10, 2, 1, "", "iterator_verts"], [10, 2, 1, "", "multiple_edges"], [10, 2, 1, "", "num_edges"], [10, 2, 1, "", "num_verts"], [10, 2, 1, "", "out_degree"], [10, 2, 1, "", "relabel"], [10, 2, 1, "", "set_edge_label"]], "sage.graphs.base.static_sparse_backend.StaticSparseCGraph": [[10, 2, 1, "", "add_vertex"], [10, 2, 1, "", "del_vertex"], [10, 2, 1, "", "has_arc"], [10, 2, 1, "", "has_vertex"], [10, 2, 1, "", "in_degree"], [10, 2, 1, "", "in_neighbors"], [10, 2, 1, "", "out_degree"], [10, 2, 1, "", "out_neighbors"], [10, 2, 1, "", "verts"]], "sage.graphs.base.static_sparse_graph": [[11, 3, 1, "", "spectral_radius"], [11, 3, 1, "", "strongly_connected_components_digraph"], [11, 3, 1, "", "tarjan_strongly_connected_components"], [11, 3, 1, "", "triangles_count"]], "sage.graphs.bipartite_graph": [[12, 1, 1, "", "BipartiteGraph"]], "sage.graphs.bipartite_graph.BipartiteGraph": [[12, 2, 1, "", "add_edge"], [12, 2, 1, "", "add_edges"], [12, 2, 1, "", "add_vertex"], [12, 2, 1, "", "add_vertices"], [12, 2, 1, "", "allow_loops"], [12, 2, 1, "", "bipartition"], [12, 2, 1, "", "canonical_label"], [12, 2, 1, "", "complement"], [12, 2, 1, "", "complement_bipartite"], [12, 2, 1, "", "delete_vertex"], [12, 2, 1, "", "delete_vertices"], [12, 2, 1, "", "is_bipartite"], [12, 2, 1, "", "load_afile"], [12, 2, 1, "", "matching"], [12, 2, 1, "", "matching_polynomial"], [12, 2, 1, "", "perfect_matchings"], [12, 2, 1, "", "plot"], [12, 2, 1, "", "project_left"], [12, 2, 1, "", "project_right"], [12, 2, 1, "", "reduced_adjacency_matrix"], [12, 2, 1, "", "save_afile"], [12, 2, 1, "", "to_undirected"], [12, 2, 1, "", "vertex_cover"]], "sage.graphs.centrality": [[13, 3, 1, "", "centrality_betweenness"], [13, 3, 1, "", "centrality_closeness_random_k"], [13, 3, 1, "", "centrality_closeness_top_k"]], "sage.graphs.chrompoly": [[14, 3, 1, "", "chromatic_polynomial"], [14, 3, 1, "", "chromatic_polynomial_with_cache"]], "sage.graphs.cliquer": [[15, 3, 1, "", "all_cliques"], [15, 3, 1, "", "all_max_clique"], [15, 3, 1, "", "clique_number"], [15, 3, 1, "", "max_clique"]], "sage.graphs.cographs": [[16, 1, 1, "", "CoTree"], [16, 3, 1, "", "change_label"], [16, 3, 1, "", "cographs"], [16, 3, 1, "", "find_pivot"], [16, 3, 1, "", "next_tree"], [16, 3, 1, "", "rebuild_node"], [16, 3, 1, "", "tree_to_graph"]], "sage.graphs.cographs.CoTree": [[16, 2, 1, "", "add_child"], [16, 2, 1, "", "copy_tree"], [16, 2, 1, "", "reset_info"]], "sage.graphs.comparability": [[17, 3, 1, "", "greedy_is_comparability"], [17, 3, 1, "", "greedy_is_comparability_with_certificate"], [17, 3, 1, "", "is_comparability"], [17, 3, 1, "", "is_comparability_MILP"], [17, 3, 1, "", "is_permutation"], [17, 3, 1, "", "is_transitive"]], "sage.graphs.connectivity": [[18, 1, 1, "", "TriconnectivitySPQR"], [18, 3, 1, "", "blocks_and_cut_vertices"], [18, 3, 1, "", "blocks_and_cuts_tree"], [18, 3, 1, "", "bridges"], [18, 3, 1, "", "cleave"], [18, 3, 1, "", "connected_component_containing_vertex"], [18, 3, 1, "", "connected_components"], [18, 3, 1, "", "connected_components_number"], [18, 3, 1, "", "connected_components_sizes"], [18, 3, 1, "", "connected_components_subgraphs"], [18, 3, 1, "", "edge_connectivity"], [18, 3, 1, "", "is_connected"], [18, 3, 1, "", "is_cut_edge"], [18, 3, 1, "", "is_cut_vertex"], [18, 3, 1, "", "is_edge_cut"], [18, 3, 1, "", "is_strongly_connected"], [18, 3, 1, "", "is_triconnected"], [18, 3, 1, "", "is_vertex_cut"], [18, 3, 1, "", "minimal_separators"], [18, 3, 1, "", "spqr_tree"], [18, 3, 1, "", "spqr_tree_to_graph"], [18, 3, 1, "", "strong_articulation_points"], [18, 3, 1, "", "strongly_connected_component_containing_vertex"], [18, 3, 1, "", "strongly_connected_components_digraph"], [18, 3, 1, "", "strongly_connected_components_subgraphs"], [18, 3, 1, "", "vertex_connectivity"]], "sage.graphs.connectivity.TriconnectivitySPQR": [[18, 2, 1, "", "get_spqr_tree"], [18, 2, 1, "", "get_triconnected_components"], [18, 2, 1, "", "print_triconnected_components"]], "sage.graphs.convexity_properties": [[19, 1, 1, "", "ConvexityProperties"], [19, 3, 1, "", "geodetic_closure"], [19, 3, 1, "", "is_geodetic"]], "sage.graphs.convexity_properties.ConvexityProperties": [[19, 2, 1, "", "hull"], [19, 2, 1, "", "hull_number"]], "sage.graphs.digraph": [[20, 1, 1, "", "DiGraph"]], "sage.graphs.digraph.DiGraph": [[20, 2, 1, "", "all_cycles_iterator"], [20, 2, 1, "", "all_simple_cycles"], [20, 2, 1, "", "auslander_reiten_quiver"], [20, 2, 1, "", "center"], [20, 2, 1, "", "degree_polynomial"], [20, 2, 1, "", "diameter"], [20, 2, 1, "", "dig6_string"], [20, 2, 1, "", "eccentricity"], [20, 2, 1, "", "feedback_edge_set"], [20, 2, 1, "", "flow_polytope"], [20, 2, 1, "", "in_branchings"], [20, 2, 1, "", "in_degree"], [20, 2, 1, "", "in_degree_iterator"], [20, 2, 1, "", "in_degree_sequence"], [20, 2, 1, "", "incoming_edge_iterator"], [20, 2, 1, "", "incoming_edges"], [20, 2, 1, "", "is_aperiodic"], [20, 2, 1, "", "is_directed"], [20, 2, 1, "", "is_directed_acyclic"], [20, 2, 1, "", "is_strongly_connected"], [20, 2, 1, "", "is_tournament"], [20, 2, 1, "", "is_transitive"], [20, 2, 1, "", "layout_acyclic"], [20, 2, 1, "", "layout_acyclic_dummy"], [20, 2, 1, "", "level_sets"], [20, 2, 1, "", "neighbor_in_iterator"], [20, 2, 1, "", "neighbor_out_iterator"], [20, 2, 1, "", "neighbors_in"], [20, 2, 1, "", "neighbors_out"], [20, 2, 1, "", "out_branchings"], [20, 2, 1, "", "out_degree"], [20, 2, 1, "", "out_degree_iterator"], [20, 2, 1, "", "out_degree_sequence"], [20, 2, 1, "", "outgoing_edge_iterator"], [20, 2, 1, "", "outgoing_edges"], [20, 2, 1, "", "path_semigroup"], [20, 2, 1, "", "period"], [20, 2, 1, "", "periphery"], [20, 2, 1, "", "radius"], [20, 2, 1, "", "reverse"], [20, 2, 1, "", "reverse_edge"], [20, 2, 1, "", "reverse_edges"], [20, 2, 1, "", "sinks"], [20, 2, 1, "", "sources"], [20, 2, 1, "", "strong_articulation_points"], [20, 2, 1, "", "strongly_connected_component_containing_vertex"], [20, 2, 1, "", "strongly_connected_components"], [20, 2, 1, "", "strongly_connected_components_digraph"], [20, 2, 1, "", "strongly_connected_components_subgraphs"], [20, 2, 1, "", "to_directed"], [20, 2, 1, "", "to_undirected"], [20, 2, 1, "", "topological_sort"], [20, 2, 1, "", "topological_sort_generator"]], "sage.graphs.digraph_generators": [[21, 1, 1, "", "DiGraphGenerators"]], "sage.graphs.digraph_generators.DiGraphGenerators": [[21, 2, 1, "", "ButterflyGraph"], [21, 2, 1, "", "Circuit"], [21, 2, 1, "", "Circulant"], [21, 2, 1, "", "Complete"], [21, 2, 1, "", "DeBruijn"], [21, 2, 1, "", "GeneralizedDeBruijn"], [21, 2, 1, "", "ImaseItoh"], [21, 2, 1, "", "Kautz"], [21, 2, 1, "", "Paley"], [21, 2, 1, "", "Path"], [21, 2, 1, "", "RandomDirectedAcyclicGraph"], [21, 2, 1, "", "RandomDirectedGN"], [21, 2, 1, "", "RandomDirectedGNC"], [21, 2, 1, "", "RandomDirectedGNM"], [21, 2, 1, "", "RandomDirectedGNP"], [21, 2, 1, "", "RandomDirectedGNR"], [21, 2, 1, "", "RandomSemiComplete"], [21, 2, 1, "", "RandomTournament"], [21, 2, 1, "", "StronglyRegular"], [21, 2, 1, "", "TransitiveTournament"], [21, 2, 1, "", "nauty_directg"], [21, 2, 1, "", "nauty_posetg"], [21, 2, 1, "", "tournaments_nauty"]], "sage.graphs.distances_all_pairs": [[22, 3, 1, "", "antipodal_graph"], [22, 3, 1, "", "diameter"], [22, 3, 1, "", "distances_all_pairs"], [22, 3, 1, "", "distances_and_predecessors_all_pairs"], [22, 3, 1, "", "distances_distribution"], [22, 3, 1, "", "eccentricity"], [22, 3, 1, "", "floyd_warshall"], [22, 3, 1, "", "is_distance_regular"], [22, 3, 1, "", "radius_DHV"], [22, 3, 1, "", "shortest_path_all_pairs"], [22, 3, 1, "", "szeged_index"], [22, 3, 1, "", "wiener_index"]], "sage.graphs.domination": [[23, 3, 1, "", "dominating_set"], [23, 3, 1, "", "dominating_sets"], [23, 3, 1, "", "greedy_dominating_set"], [23, 3, 1, "", "is_dominating"], [23, 3, 1, "", "is_redundant"], [23, 3, 1, "", "maximum_leaf_number"], [23, 3, 1, "", "minimal_dominating_sets"], [23, 3, 1, "", "private_neighbors"]], "sage.graphs.edge_connectivity": [[24, 1, 1, "", "GabowEdgeConnectivity"]], "sage.graphs.edge_connectivity.GabowEdgeConnectivity": [[24, 4, 1, "", "G"], [24, 2, 1, "", "edge_connectivity"], [24, 2, 1, "", "edge_disjoint_spanning_trees"]], "sage.graphs.generators": [[25, 0, 0, "-", "basic"], [26, 0, 0, "-", "chessboard"], [27, 0, 0, "-", "classical_geometries"], [28, 0, 0, "-", "distance_regular"], [29, 0, 0, "-", "families"], [30, 0, 0, "-", "intersection"], [31, 0, 0, "-", "platonic_solids"], [32, 0, 0, "-", "random"], [33, 0, 0, "-", "smallgraphs"], [34, 0, 0, "-", "world_map"]], "sage.graphs.generators.basic": [[25, 3, 1, "", "BullGraph"], [25, 3, 1, "", "ButterflyGraph"], [25, 3, 1, "", "CircularLadderGraph"], [25, 3, 1, "", "ClawGraph"], [25, 3, 1, "", "CompleteBipartiteGraph"], [25, 3, 1, "", "CompleteGraph"], [25, 3, 1, "", "CompleteMultipartiteGraph"], [25, 3, 1, "", "CorrelationGraph"], [25, 3, 1, "", "CycleGraph"], [25, 3, 1, "", "DartGraph"], [25, 3, 1, "", "DiamondGraph"], [25, 3, 1, "", "EmptyGraph"], [25, 3, 1, "", "ForkGraph"], [25, 3, 1, "", "GemGraph"], [25, 3, 1, "", "Grid2dGraph"], [25, 3, 1, "", "GridGraph"], [25, 3, 1, "", "HouseGraph"], [25, 3, 1, "", "HouseXGraph"], [25, 3, 1, "", "LadderGraph"], [25, 3, 1, "", "MoebiusLadderGraph"], [25, 3, 1, "", "PathGraph"], [25, 3, 1, "", "StarGraph"], [25, 3, 1, "", "Toroidal6RegularGrid2dGraph"], [25, 3, 1, "", "ToroidalGrid2dGraph"]], "sage.graphs.generators.chessboard": [[26, 3, 1, "", "BishopGraph"], [26, 3, 1, "", "ChessboardGraphGenerator"], [26, 3, 1, "", "KingGraph"], [26, 3, 1, "", "KnightGraph"], [26, 3, 1, "", "QueenGraph"], [26, 3, 1, "", "RookGraph"]], "sage.graphs.generators.classical_geometries": [[27, 3, 1, "", "AffineOrthogonalPolarGraph"], [27, 3, 1, "", "AhrensSzekeresGeneralizedQuadrangleGraph"], [27, 3, 1, "", "CossidentePenttilaGraph"], [27, 3, 1, "", "HaemersGraph"], [27, 3, 1, "", "NonisotropicOrthogonalPolarGraph"], [27, 3, 1, "", "NonisotropicUnitaryPolarGraph"], [27, 3, 1, "", "Nowhere0WordsTwoWeightCodeGraph"], [27, 3, 1, "", "OrthogonalDualPolarGraph"], [27, 3, 1, "", "OrthogonalPolarGraph"], [27, 3, 1, "", "SymplecticDualPolarGraph"], [27, 3, 1, "", "SymplecticPolarGraph"], [27, 3, 1, "", "T2starGeneralizedQuadrangleGraph"], [27, 3, 1, "", "TaylorTwographDescendantSRG"], [27, 3, 1, "", "TaylorTwographSRG"], [27, 3, 1, "", "UnitaryDualPolarGraph"], [27, 3, 1, "", "UnitaryPolarGraph"]], "sage.graphs.generators.distance_regular": [[28, 3, 1, "", "AlternatingFormsGraph"], [28, 3, 1, "", "BilinearFormsGraph"], [28, 3, 1, "", "ConwaySmith_for_3S7"], [28, 3, 1, "", "DoubleGrassmannGraph"], [28, 3, 1, "", "DoubleOddGraph"], [28, 3, 1, "", "DoublyTruncatedWittGraph"], [28, 3, 1, "", "FosterGraph3S6"], [28, 3, 1, "", "GeneralisedDodecagonGraph"], [28, 3, 1, "", "GeneralisedHexagonGraph"], [28, 3, 1, "", "GeneralisedOctagonGraph"], [28, 3, 1, "", "GrassmannGraph"], [28, 3, 1, "", "HalfCube"], [28, 3, 1, "", "HermitianFormsGraph"], [28, 3, 1, "", "IvanovIvanovFaradjevGraph"], [28, 3, 1, "", "J2Graph"], [28, 3, 1, "", "LargeWittGraph"], [28, 3, 1, "", "LeonardGraph"], [28, 3, 1, "", "TruncatedWittGraph"], [28, 3, 1, "", "UstimenkoGraph"], [28, 3, 1, "", "cocliques_HoffmannSingleton"], [28, 3, 1, "", "distance_3_doubly_truncated_Golay_code_graph"], [28, 3, 1, "", "distance_regular_graph"], [28, 3, 1, "", "graph_3O73"], [28, 3, 1, "", "graph_from_GQ_spread"], [28, 3, 1, "", "graph_with_classical_parameters"], [28, 3, 1, "", "is_classical_parameters_graph"], [28, 3, 1, "", "is_from_GQ_spread"], [28, 3, 1, "", "is_near_polygon"], [28, 3, 1, "", "is_pseudo_partition_graph"], [28, 3, 1, "", "locally_GQ42_distance_transitive_graph"], [28, 3, 1, "", "near_polygon_graph"], [28, 3, 1, "", "pseudo_partition_graph"], [28, 3, 1, "", "shortened_000_111_extended_binary_Golay_code_graph"], [28, 3, 1, "", "shortened_00_11_binary_Golay_code_graph"], [28, 3, 1, "", "vanLintSchrijverGraph"]], "sage.graphs.generators.families": [[29, 3, 1, "", "AztecDiamondGraph"], [29, 3, 1, "", "BalancedTree"], [29, 3, 1, "", "BarbellGraph"], [29, 3, 1, "", "BiwheelGraph"], [29, 3, 1, "", "BubbleSortGraph"], [29, 3, 1, "", "CaiFurerImmermanGraph"], [29, 3, 1, "", "CirculantGraph"], [29, 3, 1, "", "CubeConnectedCycle"], [29, 3, 1, "", "CubeGraph"], [29, 3, 1, "", "DipoleGraph"], [29, 3, 1, "", "DorogovtsevGoltsevMendesGraph"], [29, 3, 1, "", "DoubleGeneralizedPetersenGraph"], [29, 3, 1, "", "EgawaGraph"], [29, 3, 1, "", "FibonacciTree"], [29, 3, 1, "", "FoldedCubeGraph"], [29, 3, 1, "", "FriendshipGraph"], [29, 3, 1, "", "FurerGadget"], [29, 3, 1, "", "FuzzyBallGraph"], [29, 3, 1, "", "GeneralizedPetersenGraph"], [29, 3, 1, "", "GeneralizedSierpinskiGraph"], [29, 3, 1, "", "GoethalsSeidelGraph"], [29, 3, 1, "", "HammingGraph"], [29, 3, 1, "", "HanoiTowerGraph"], [29, 3, 1, "", "HararyGraph"], [29, 3, 1, "", "HyperStarGraph"], [29, 3, 1, "", "IGraph"], [29, 3, 1, "", "JohnsonGraph"], [29, 3, 1, "", "KneserGraph"], [29, 3, 1, "", "LCFGraph"], [29, 3, 1, "", "LollipopGraph"], [29, 3, 1, "", "MathonPseudocyclicMergingGraph"], [29, 3, 1, "", "MathonPseudocyclicStronglyRegularGraph"], [29, 3, 1, "", "MuzychukS6Graph"], [29, 3, 1, "", "MycielskiGraph"], [29, 3, 1, "", "MycielskiStep"], [29, 3, 1, "", "NKStarGraph"], [29, 3, 1, "", "NStarGraph"], [29, 3, 1, "", "OddGraph"], [29, 3, 1, "", "PaleyGraph"], [29, 3, 1, "", "PasechnikGraph"], [29, 3, 1, "", "RingedTree"], [29, 3, 1, "", "RoseWindowGraph"], [29, 3, 1, "", "SierpinskiGasketGraph"], [29, 3, 1, "", "SquaredSkewHadamardMatrixGraph"], [29, 3, 1, "", "StaircaseGraph"], [29, 3, 1, "", "SwitchedSquaredSkewHadamardMatrixGraph"], [29, 3, 1, "", "TabacjnGraph"], [29, 3, 1, "", "TadpoleGraph"], [29, 3, 1, "", "TruncatedBiwheelGraph"], [29, 3, 1, "", "TuranGraph"], [29, 3, 1, "", "WheelGraph"], [29, 3, 1, "", "WindmillGraph"], [29, 3, 1, "", "chang_graphs"], [29, 3, 1, "", "line_graph_forbidden_subgraphs"], [29, 3, 1, "", "nauty_gentreeg"], [29, 3, 1, "", "petersen_family"], [29, 3, 1, "", "trees"]], "sage.graphs.generators.intersection": [[30, 3, 1, "", "IntersectionGraph"], [30, 3, 1, "", "IntervalGraph"], [30, 3, 1, "", "OrthogonalArrayBlockGraph"], [30, 3, 1, "", "PermutationGraph"], [30, 3, 1, "", "ToleranceGraph"]], "sage.graphs.generators.platonic_solids": [[31, 3, 1, "", "DodecahedralGraph"], [31, 3, 1, "", "HexahedralGraph"], [31, 3, 1, "", "IcosahedralGraph"], [31, 3, 1, "", "OctahedralGraph"], [31, 3, 1, "", "TetrahedralGraph"]], "sage.graphs.generators.random": [[32, 3, 1, "", "RandomBarabasiAlbert"], [32, 3, 1, "", "RandomBicubicPlanar"], [32, 3, 1, "", "RandomBipartite"], [32, 3, 1, "", "RandomBlockGraph"], [32, 3, 1, "", "RandomBoundedToleranceGraph"], [32, 3, 1, "", "RandomChordalGraph"], [32, 3, 1, "", "RandomGNM"], [32, 3, 1, "", "RandomGNP"], [32, 3, 1, "", "RandomHolmeKim"], [32, 3, 1, "", "RandomIntervalGraph"], [32, 3, 1, "", "RandomKTree"], [32, 3, 1, "", "RandomLobster"], [32, 3, 1, "", "RandomNewmanWattsStrogatz"], [32, 3, 1, "", "RandomPartialKTree"], [32, 3, 1, "", "RandomProperIntervalGraph"], [32, 3, 1, "", "RandomRegular"], [32, 3, 1, "", "RandomRegularBipartite"], [32, 3, 1, "", "RandomShell"], [32, 3, 1, "", "RandomToleranceGraph"], [32, 3, 1, "", "RandomTree"], [32, 3, 1, "", "RandomTreePowerlaw"], [32, 3, 1, "", "RandomTriangulation"], [32, 3, 1, "", "RandomUnitDiskGraph"], [32, 3, 1, "", "blossoming_contour"], [32, 3, 1, "", "connecting_nodes"], [32, 3, 1, "", "growing_subtrees"], [32, 3, 1, "", "pruned_tree"]], "sage.graphs.generators.smallgraphs": [[33, 3, 1, "", "Balaban10Cage"], [33, 3, 1, "", "Balaban11Cage"], [33, 3, 1, "", "BidiakisCube"], [33, 3, 1, "", "BiggsSmithGraph"], [33, 3, 1, "", "BlanusaFirstSnarkGraph"], [33, 3, 1, "", "BlanusaSecondSnarkGraph"], [33, 3, 1, "", "BrinkmannGraph"], [33, 3, 1, "", "BrouwerHaemersGraph"], [33, 3, 1, "", "BuckyBall"], [33, 3, 1, "", "CameronGraph"], [33, 3, 1, "", "Cell120"], [33, 3, 1, "", "Cell600"], [33, 3, 1, "", "ChvatalGraph"], [33, 3, 1, "", "ClebschGraph"], [33, 3, 1, "", "CoxeterGraph"], [33, 3, 1, "", "CubeplexGraph"], [33, 3, 1, "", "DejterGraph"], [33, 3, 1, "", "DesarguesGraph"], [33, 3, 1, "", "DoubleStarSnark"], [33, 3, 1, "", "DurerGraph"], [33, 3, 1, "", "DyckGraph"], [33, 3, 1, "", "EllinghamHorton54Graph"], [33, 3, 1, "", "EllinghamHorton78Graph"], [33, 3, 1, "", "ErreraGraph"], [33, 3, 1, "", "F26AGraph"], [33, 3, 1, "", "FlowerSnark"], [33, 3, 1, "", "FolkmanGraph"], [33, 3, 1, "", "FosterGraph"], [33, 3, 1, "", "FranklinGraph"], [33, 3, 1, "", "FruchtGraph"], [33, 3, 1, "", "GoldnerHararyGraph"], [33, 3, 1, "", "GolombGraph"], [33, 3, 1, "", "GossetGraph"], [33, 3, 1, "", "GrayGraph"], [33, 3, 1, "", "GritsenkoGraph"], [33, 3, 1, "", "GrotzschGraph"], [33, 3, 1, "", "HallJankoGraph"], [33, 3, 1, "", "HarborthGraph"], [33, 3, 1, "", "HarriesGraph"], [33, 3, 1, "", "HarriesWongGraph"], [33, 3, 1, "", "HeawoodGraph"], [33, 3, 1, "", "HerschelGraph"], [33, 3, 1, "", "HigmanSimsGraph"], [33, 3, 1, "", "HoffmanGraph"], [33, 3, 1, "", "HoffmanSingletonGraph"], [33, 3, 1, "", "HoltGraph"], [33, 3, 1, "", "HortonGraph"], [33, 3, 1, "", "IoninKharaghani765Graph"], [33, 3, 1, "", "JankoKharaghaniGraph"], [33, 3, 1, "", "JankoKharaghaniTonchevGraph"], [33, 3, 1, "", "KittellGraph"], [33, 3, 1, "", "Klein3RegularGraph"], [33, 3, 1, "", "Klein7RegularGraph"], [33, 3, 1, "", "KrackhardtKiteGraph"], [33, 3, 1, "", "LivingstoneGraph"], [33, 3, 1, "", "LjubljanaGraph"], [33, 3, 1, "", "LocalMcLaughlinGraph"], [33, 3, 1, "", "M22Graph"], [33, 3, 1, "", "MarkstroemGraph"], [33, 3, 1, "", "MathonStronglyRegularGraph"], [33, 3, 1, "", "McGeeGraph"], [33, 3, 1, "", "McLaughlinGraph"], [33, 3, 1, "", "MeredithGraph"], [33, 3, 1, "", "MoebiusKantorGraph"], [33, 3, 1, "", "MoserSpindle"], [33, 3, 1, "", "MurtyGraph"], [33, 3, 1, "", "NauruGraph"], [33, 3, 1, "", "PappusGraph"], [33, 3, 1, "", "PerkelGraph"], [33, 3, 1, "", "PetersenGraph"], [33, 3, 1, "", "PoussinGraph"], [33, 3, 1, "", "RobertsonGraph"], [33, 3, 1, "", "SchlaefliGraph"], [33, 3, 1, "", "ShrikhandeGraph"], [33, 3, 1, "", "SimsGewirtzGraph"], [33, 3, 1, "", "SousselierGraph"], [33, 3, 1, "", "SuzukiGraph"], [33, 3, 1, "", "SylvesterGraph"], [33, 3, 1, "", "SzekeresSnarkGraph"], [33, 3, 1, "", "ThomsenGraph"], [33, 3, 1, "", "TietzeGraph"], [33, 3, 1, "", "TricornGraph"], [33, 3, 1, "", "TruncatedIcosidodecahedralGraph"], [33, 3, 1, "", "TruncatedTetrahedralGraph"], [33, 3, 1, "", "Tutte12Cage"], [33, 3, 1, "", "TutteCoxeterGraph"], [33, 3, 1, "", "TutteGraph"], [33, 3, 1, "", "TwinplexGraph"], [33, 3, 1, "", "U42Graph216"], [33, 3, 1, "", "U42Graph540"], [33, 3, 1, "", "WagnerGraph"], [33, 3, 1, "", "WatkinsSnarkGraph"], [33, 3, 1, "", "WellsGraph"], [33, 3, 1, "", "WienerArayaGraph"]], "sage.graphs.generators.world_map": [[34, 3, 1, "", "AfricaMap"], [34, 3, 1, "", "EuropeMap"], [34, 3, 1, "", "USAMap"], [34, 3, 1, "", "WorldMap"]], "sage.graphs.generic_graph": [[35, 1, 1, "", "GenericGraph"], [35, 3, 1, "", "graph_isom_equivalent_non_edge_labeled_graph"], [35, 3, 1, "", "tachyon_vertex_plot"]], "sage.graphs.generic_graph.GenericGraph": [[35, 2, 1, "", "__eq__"], [35, 2, 1, "", "add_clique"], [35, 2, 1, "", "add_cycle"], [35, 2, 1, "", "add_edge"], [35, 2, 1, "", "add_edges"], [35, 2, 1, "", "add_path"], [35, 2, 1, "", "add_vertex"], [35, 2, 1, "", "add_vertices"], [35, 2, 1, "", "adjacency_matrix"], [35, 2, 1, "", "all_paths"], [35, 2, 1, "", "all_paths_iterator"], [35, 2, 1, "", "all_simple_paths"], [35, 2, 1, "", "allow_loops"], [35, 2, 1, "", "allow_multiple_edges"], [35, 2, 1, "", "allows_loops"], [35, 2, 1, "", "allows_multiple_edges"], [35, 2, 1, "", "am"], [35, 2, 1, "", "antisymmetric"], [35, 2, 1, "", "automorphism_group"], [35, 2, 1, "", "average_degree"], [35, 2, 1, "", "average_distance"], [35, 2, 1, "", "blocks_and_cut_vertices"], [35, 2, 1, "", "blocks_and_cuts_tree"], [35, 2, 1, "", "breadth_first_search"], [35, 2, 1, "", "canonical_label"], [35, 2, 1, "", "cartesian_product"], [35, 2, 1, "", "categorical_product"], [35, 2, 1, "", "centrality_betweenness"], [35, 2, 1, "", "centrality_closeness"], [35, 2, 1, "", "characteristic_polynomial"], [35, 2, 1, "", "charpoly"], [35, 2, 1, "", "clear"], [35, 2, 1, "", "cluster_transitivity"], [35, 2, 1, "", "cluster_triangles"], [35, 2, 1, "", "clustering_average"], [35, 2, 1, "", "clustering_coeff"], [35, 2, 1, "", "coarsest_equitable_refinement"], [35, 2, 1, "", "complement"], [35, 2, 1, "", "connected_component_containing_vertex"], [35, 2, 1, "", "connected_components"], [35, 2, 1, "", "connected_components_number"], [35, 2, 1, "", "connected_components_sizes"], [35, 2, 1, "", "connected_components_subgraphs"], [35, 2, 1, "", "connected_subgraph_iterator"], [35, 2, 1, "", "contract_edge"], [35, 2, 1, "", "contract_edges"], [35, 2, 1, "", "copy"], [35, 2, 1, "", "crossing_number"], [35, 2, 1, "", "cycle_basis"], [35, 2, 1, "", "degree"], [35, 2, 1, "", "degree_histogram"], [35, 2, 1, "", "degree_iterator"], [35, 2, 1, "", "degree_sequence"], [35, 2, 1, "", "degree_to_cell"], [35, 2, 1, "", "delete_edge"], [35, 2, 1, "", "delete_edges"], [35, 2, 1, "", "delete_multiedge"], [35, 2, 1, "", "delete_vertex"], [35, 2, 1, "", "delete_vertices"], [35, 2, 1, "", "density"], [35, 2, 1, "", "depth_first_search"], [35, 2, 1, "", "disjoint_routed_paths"], [35, 2, 1, "", "disjoint_union"], [35, 2, 1, "", "disjunctive_product"], [35, 2, 1, "", "distance"], [35, 2, 1, "", "distance_all_pairs"], [35, 2, 1, "", "distance_matrix"], [35, 2, 1, "", "distances_distribution"], [35, 2, 1, "", "dominating_set"], [35, 2, 1, "", "dominating_sets"], [35, 2, 1, "", "dominator_tree"], [35, 2, 1, "", "edge_boundary"], [35, 2, 1, "", "edge_connectivity"], [35, 2, 1, "", "edge_cut"], [35, 2, 1, "", "edge_disjoint_paths"], [35, 2, 1, "", "edge_disjoint_spanning_trees"], [35, 2, 1, "", "edge_iterator"], [35, 2, 1, "", "edge_label"], [35, 2, 1, "", "edge_labels"], [35, 2, 1, "", "edge_polytope"], [35, 2, 1, "", "edges"], [35, 2, 1, "", "edges_incident"], [35, 2, 1, "", "eigenspaces"], [35, 2, 1, "", "eigenvectors"], [35, 2, 1, "", "eulerian_circuit"], [35, 2, 1, "", "export_to_file"], [35, 2, 1, "", "faces"], [35, 2, 1, "", "feedback_vertex_set"], [35, 2, 1, "", "flow"], [35, 2, 1, "", "genus"], [35, 2, 1, "", "get_embedding"], [35, 2, 1, "", "get_pos"], [35, 2, 1, "", "get_vertex"], [35, 2, 1, "", "get_vertices"], [35, 2, 1, "", "girth"], [35, 4, 1, "", "graphics_array_defaults"], [35, 2, 1, "", "graphplot"], [35, 2, 1, "", "graphviz_string"], [35, 2, 1, "", "graphviz_to_file_named"], [35, 2, 1, "", "greedy_dominating_set"], [35, 2, 1, "", "hamiltonian_cycle"], [35, 2, 1, "", "hamiltonian_path"], [35, 2, 1, "", "has_edge"], [35, 2, 1, "", "has_loops"], [35, 2, 1, "", "has_multiple_edges"], [35, 2, 1, "", "has_vertex"], [35, 2, 1, "", "igraph_graph"], [35, 2, 1, "", "incidence_matrix"], [35, 2, 1, "", "is_bipartite"], [35, 2, 1, "", "is_cayley"], [35, 2, 1, "", "is_chordal"], [35, 2, 1, "", "is_circulant"], [35, 2, 1, "", "is_circular_planar"], [35, 2, 1, "", "is_clique"], [35, 2, 1, "", "is_connected"], [35, 2, 1, "", "is_cut_edge"], [35, 2, 1, "", "is_cut_vertex"], [35, 2, 1, "", "is_cycle"], [35, 2, 1, "", "is_drawn_free_of_edge_crossings"], [35, 2, 1, "", "is_edge_cut"], [35, 2, 1, "", "is_equitable"], [35, 2, 1, "", "is_eulerian"], [35, 2, 1, "", "is_gallai_tree"], [35, 2, 1, "", "is_geodetic"], [35, 2, 1, "", "is_hamiltonian"], [35, 2, 1, "", "is_immutable"], [35, 2, 1, "", "is_independent_set"], [35, 2, 1, "", "is_interval"], [35, 2, 1, "", "is_isomorphic"], [35, 2, 1, "", "is_planar"], [35, 2, 1, "", "is_regular"], [35, 2, 1, "", "is_self_complementary"], [35, 2, 1, "", "is_subgraph"], [35, 2, 1, "", "is_transitively_reduced"], [35, 2, 1, "", "is_vertex_cut"], [35, 2, 1, "", "is_vertex_transitive"], [35, 2, 1, "", "katz_centrality"], [35, 2, 1, "", "katz_matrix"], [35, 2, 1, "", "kirchhoff_matrix"], [35, 2, 1, "", "kronecker_product"], [35, 2, 1, "", "laplacian_matrix"], [35, 2, 1, "", "latex_options"], [35, 2, 1, "", "layout"], [35, 2, 1, "", "layout_circular"], [35, 2, 1, "", "layout_default"], [35, 2, 1, "", "layout_extend_randomly"], [35, 2, 1, "", "layout_forest"], [35, 2, 1, "", "layout_graphviz"], [35, 2, 1, "", "layout_planar"], [35, 2, 1, "", "layout_ranked"], [35, 2, 1, "", "layout_spring"], [35, 2, 1, "", "layout_tree"], [35, 2, 1, "", "layout_tutte"], [35, 2, 1, "", "lex_BFS"], [35, 2, 1, "", "lex_DFS"], [35, 2, 1, "", "lex_DOWN"], [35, 2, 1, "", "lex_UP"], [35, 2, 1, "", "lexicographic_product"], [35, 2, 1, "", "line_graph"], [35, 2, 1, "", "longest_cycle"], [35, 2, 1, "", "longest_path"], [35, 2, 1, "", "loop_edges"], [35, 2, 1, "", "loop_vertices"], [35, 2, 1, "", "loops"], [35, 2, 1, "", "max_cut"], [35, 2, 1, "", "maximum_leaf_number"], [35, 2, 1, "", "merge_vertices"], [35, 2, 1, "", "min_spanning_tree"], [35, 2, 1, "", "minimum_cycle_basis"], [35, 2, 1, "", "multicommodity_flow"], [35, 2, 1, "", "multiple_edges"], [35, 2, 1, "", "multiway_cut"], [35, 2, 1, "", "name"], [35, 2, 1, "", "neighbor_iterator"], [35, 2, 1, "", "neighbors"], [35, 2, 1, "", "networkx_graph"], [35, 2, 1, "", "nowhere_zero_flow"], [35, 2, 1, "", "num_edges"], [35, 2, 1, "", "num_faces"], [35, 2, 1, "", "num_verts"], [35, 2, 1, "", "number_of_loops"], [35, 2, 1, "", "odd_girth"], [35, 2, 1, "", "order"], [35, 2, 1, "", "pagerank"], [35, 2, 1, "", "planar_dual"], [35, 2, 1, "", "plot"], [35, 2, 1, "", "plot3d"], [35, 2, 1, "", "power"], [35, 2, 1, "", "random_edge"], [35, 2, 1, "", "random_edge_iterator"], [35, 2, 1, "", "random_subgraph"], [35, 2, 1, "", "random_vertex"], [35, 2, 1, "", "random_vertex_iterator"], [35, 2, 1, "", "relabel"], [35, 2, 1, "", "remove_loops"], [35, 2, 1, "", "remove_multiple_edges"], [35, 2, 1, "", "rooted_product"], [35, 2, 1, "", "set_edge_label"], [35, 2, 1, "", "set_embedding"], [35, 2, 1, "", "set_latex_options"], [35, 2, 1, "", "set_pos"], [35, 2, 1, "", "set_vertex"], [35, 2, 1, "", "set_vertices"], [35, 2, 1, "", "shortest_path"], [35, 2, 1, "", "shortest_path_all_pairs"], [35, 2, 1, "", "shortest_path_length"], [35, 2, 1, "", "shortest_path_lengths"], [35, 2, 1, "", "shortest_paths"], [35, 2, 1, "", "shortest_simple_paths"], [35, 2, 1, "", "show"], [35, 2, 1, "", "show3d"], [35, 2, 1, "", "size"], [35, 2, 1, "", "spanning_trees_count"], [35, 2, 1, "", "spectral_radius"], [35, 2, 1, "", "spectrum"], [35, 2, 1, "", "steiner_tree"], [35, 2, 1, "", "strong_product"], [35, 2, 1, "", "subdivide_edge"], [35, 2, 1, "", "subdivide_edges"], [35, 2, 1, "", "subgraph"], [35, 2, 1, "", "subgraph_decompositions"], [35, 2, 1, "", "subgraph_search"], [35, 2, 1, "", "subgraph_search_count"], [35, 2, 1, "", "subgraph_search_iterator"], [35, 2, 1, "", "symmetric_edge_polytope"], [35, 2, 1, "", "szeged_index"], [35, 2, 1, "", "tensor_product"], [35, 2, 1, "", "tikz"], [35, 2, 1, "", "to_dictionary"], [35, 2, 1, "", "to_simple"], [35, 2, 1, "", "transitive_closure"], [35, 2, 1, "", "transitive_reduction"], [35, 2, 1, "", "traveling_salesman_problem"], [35, 2, 1, "", "triangles_count"], [35, 2, 1, "", "union"], [35, 2, 1, "", "vertex_boundary"], [35, 2, 1, "", "vertex_connectivity"], [35, 2, 1, "", "vertex_cut"], [35, 2, 1, "", "vertex_disjoint_paths"], [35, 2, 1, "", "vertex_iterator"], [35, 2, 1, "", "vertices"], [35, 2, 1, "", "weighted"], [35, 2, 1, "", "weighted_adjacency_matrix"], [35, 2, 1, "", "wiener_index"]], "sage.graphs.generic_graph_pyx": [[36, 1, 1, "", "GenericGraph_pyx"], [36, 1, 1, "", "SubgraphSearch"], [36, 3, 1, "", "binary_string_from_dig6"], [36, 3, 1, "", "binary_string_from_graph6"], [36, 3, 1, "", "binary_string_to_graph6"], [36, 3, 1, "", "find_hamiltonian"], [36, 3, 1, "", "int_to_binary_string"], [36, 3, 1, "", "layout_split"], [36, 3, 1, "", "length_and_string_from_graph6"], [36, 3, 1, "", "small_integer_to_graph6"], [36, 3, 1, "", "spring_layout_fast"], [36, 3, 1, "", "transitive_reduction_acyclic"]], "sage.graphs.generic_graph_pyx.SubgraphSearch": [[36, 2, 1, "", "cardinality"]], "sage.graphs.genus": [[37, 1, 1, "", "simple_connected_genus_backtracker"], [37, 3, 1, "", "simple_connected_graph_genus"]], "sage.graphs.genus.simple_connected_genus_backtracker": [[37, 2, 1, "", "genus"], [37, 2, 1, "", "get_embedding"]], "sage.graphs.graph": [[38, 1, 1, "", "Graph"]], "sage.graphs.graph.Graph": [[38, 2, 1, "", "acyclic_orientations"], [38, 2, 1, "", "all_cliques"], [38, 2, 1, "", "antipodal_graph"], [38, 2, 1, "", "apex_vertices"], [38, 2, 1, "", "arboricity"], [38, 2, 1, "", "atoms_and_clique_separators"], [38, 2, 1, "", "bandwidth"], [38, 2, 1, "", "bipartite_color"], [38, 2, 1, "", "bipartite_double"], [38, 2, 1, "", "bipartite_sets"], [38, 2, 1, "", "bounded_outdegree_orientation"], [38, 2, 1, "", "bridges"], [38, 2, 1, "", "center"], [38, 2, 1, "", "centrality_degree"], [38, 2, 1, "", "cheeger_constant"], [38, 2, 1, "", "chromatic_index"], [38, 2, 1, "", "chromatic_number"], [38, 2, 1, "", "chromatic_polynomial"], [38, 2, 1, "", "chromatic_quasisymmetric_function"], [38, 2, 1, "", "chromatic_symmetric_function"], [38, 2, 1, "", "cleave"], [38, 2, 1, "", "clique_complex"], [38, 2, 1, "", "clique_maximum"], [38, 2, 1, "", "clique_number"], [38, 2, 1, "", "clique_polynomial"], [38, 2, 1, "", "cliques_containing_vertex"], [38, 2, 1, "", "cliques_get_clique_bipartite"], [38, 2, 1, "", "cliques_get_max_clique_graph"], [38, 2, 1, "", "cliques_maximal"], [38, 2, 1, "", "cliques_maximum"], [38, 2, 1, "", "cliques_number_of"], [38, 2, 1, "", "cliques_vertex_clique_number"], [38, 2, 1, "", "coloring"], [38, 2, 1, "", "common_neighbors_matrix"], [38, 2, 1, "", "convexity_properties"], [38, 2, 1, "", "cores"], [38, 2, 1, "", "cutwidth"], [38, 2, 1, "", "degree_constrained_subgraph"], [38, 2, 1, "", "diameter"], [38, 2, 1, "", "distance_graph"], [38, 2, 1, "", "ear_decomposition"], [38, 2, 1, "", "eccentricity"], [38, 2, 1, "", "edge_isoperimetric_number"], [38, 2, 1, "", "effective_resistance"], [38, 2, 1, "", "effective_resistance_matrix"], [38, 2, 1, "", "eulerian_orientation"], [38, 2, 1, "", "folded_graph"], [38, 2, 1, "", "fractional_chromatic_index"], [38, 2, 1, "", "fractional_chromatic_number"], [38, 2, 1, "", "fractional_clique_number"], [38, 2, 1, "", "geodetic_closure"], [38, 2, 1, "", "gomory_hu_tree"], [38, 2, 1, "", "graph6_string"], [38, 2, 1, "", "has_homomorphism_to"], [38, 2, 1, "", "has_perfect_matching"], [38, 2, 1, "", "hyperbolicity"], [38, 2, 1, "", "ihara_zeta_function_inverse"], [38, 2, 1, "", "independent_set"], [38, 2, 1, "", "independent_set_of_representatives"], [38, 2, 1, "", "is_antipodal"], [38, 2, 1, "", "is_apex"], [38, 2, 1, "", "is_arc_transitive"], [38, 2, 1, "", "is_asteroidal_triple_free"], [38, 2, 1, "", "is_biconnected"], [38, 2, 1, "", "is_bicritical"], [38, 2, 1, "", "is_block_graph"], [38, 2, 1, "", "is_cactus"], [38, 2, 1, "", "is_cartesian_product"], [38, 2, 1, "", "is_chordal_bipartite"], [38, 2, 1, "", "is_circumscribable"], [38, 2, 1, "", "is_cograph"], [38, 2, 1, "", "is_comparability"], [38, 2, 1, "", "is_directed"], [38, 2, 1, "", "is_distance_regular"], [38, 2, 1, "", "is_dominating"], [38, 2, 1, "", "is_edge_transitive"], [38, 2, 1, "", "is_even_hole_free"], [38, 2, 1, "", "is_factor_critical"], [38, 2, 1, "", "is_forest"], [38, 2, 1, "", "is_half_transitive"], [38, 2, 1, "", "is_inscribable"], [38, 2, 1, "", "is_line_graph"], [38, 2, 1, "", "is_long_antihole_free"], [38, 2, 1, "", "is_long_hole_free"], [38, 2, 1, "", "is_matching_covered"], [38, 2, 1, "", "is_module"], [38, 2, 1, "", "is_odd_hole_free"], [38, 2, 1, "", "is_overfull"], [38, 2, 1, "", "is_partial_cube"], [38, 2, 1, "", "is_path"], [38, 2, 1, "", "is_perfect"], [38, 2, 1, "", "is_permutation"], [38, 2, 1, "", "is_polyhedral"], [38, 2, 1, "", "is_prime"], [38, 2, 1, "", "is_redundant"], [38, 2, 1, "", "is_semi_symmetric"], [38, 2, 1, "", "is_split"], [38, 2, 1, "", "is_strongly_regular"], [38, 2, 1, "", "is_tree"], [38, 2, 1, "", "is_triangle_free"], [38, 2, 1, "", "is_triconnected"], [38, 2, 1, "", "is_weakly_chordal"], [38, 2, 1, "", "join"], [38, 2, 1, "", "kirchhoff_symanzik_polynomial"], [38, 2, 1, "", "least_effective_resistance"], [38, 2, 1, "", "lex_M"], [38, 2, 1, "", "lovasz_theta"], [38, 2, 1, "", "magnitude_function"], [38, 2, 1, "", "matching"], [38, 2, 1, "", "matching_polynomial"], [38, 2, 1, "", "maximum_average_degree"], [38, 2, 1, "", "maximum_cardinality_search"], [38, 2, 1, "", "maximum_cardinality_search_M"], [38, 2, 1, "", "minimal_dominating_sets"], [38, 2, 1, "", "minimal_separators"], [38, 2, 1, "", "minimum_outdegree_orientation"], [38, 2, 1, "", "minor"], [38, 2, 1, "", "modular_decomposition"], [38, 2, 1, "", "most_common_neighbors"], [38, 2, 1, "", "orient"], [38, 2, 1, "", "orientations"], [38, 2, 1, "", "pathwidth"], [38, 2, 1, "", "perfect_matchings"], [38, 2, 1, "", "periphery"], [38, 2, 1, "", "private_neighbors"], [38, 2, 1, "", "radius"], [38, 2, 1, "", "random_orientation"], [38, 2, 1, "", "random_spanning_tree"], [38, 2, 1, "", "rank_decomposition"], [38, 2, 1, "", "seidel_adjacency_matrix"], [38, 2, 1, "", "seidel_switching"], [38, 2, 1, "", "slice_decomposition"], [38, 2, 1, "", "spanning_trees"], [38, 2, 1, "", "sparse6_string"], [38, 2, 1, "", "spqr_tree"], [38, 2, 1, "", "strong_orientation"], [38, 2, 1, "", "strong_orientations_iterator"], [38, 2, 1, "", "to_directed"], [38, 2, 1, "", "to_undirected"], [38, 2, 1, "", "topological_minor"], [38, 2, 1, "", "treelength"], [38, 2, 1, "", "treewidth"], [38, 2, 1, "", "tutte_polynomial"], [38, 2, 1, "", "tutte_symmetric_function"], [38, 2, 1, "", "two_factor_petersen"], [38, 2, 1, "", "twograph"], [38, 2, 1, "", "vertex_cover"], [38, 2, 1, "", "vertex_isoperimetric_number"], [38, 2, 1, "", "write_to_eps"]], "sage.graphs.graph_coloring": [[39, 1, 1, "", "Test"], [39, 3, 1, "", "acyclic_edge_coloring"], [39, 3, 1, "", "all_graph_colorings"], [39, 3, 1, "", "b_coloring"], [39, 3, 1, "", "chromatic_number"], [39, 3, 1, "", "edge_coloring"], [39, 3, 1, "", "first_coloring"], [39, 3, 1, "", "format_coloring"], [39, 3, 1, "", "fractional_chromatic_index"], [39, 3, 1, "", "fractional_chromatic_number"], [39, 3, 1, "", "grundy_coloring"], [39, 3, 1, "", "linear_arboricity"], [39, 3, 1, "", "number_of_n_colorings"], [39, 3, 1, "", "numbers_of_colorings"], [39, 3, 1, "", "round_robin"], [39, 3, 1, "", "vertex_coloring"]], "sage.graphs.graph_coloring.Test": [[39, 2, 1, "", "random"], [39, 2, 1, "", "random_all_graph_colorings"]], "sage.graphs.graph_database": [[40, 1, 1, "", "GenericGraphQuery"], [40, 1, 1, "", "GraphDatabase"], [40, 1, 1, "", "GraphQuery"], [40, 3, 1, "", "data_to_degseq"], [40, 3, 1, "", "degseq_to_data"], [40, 3, 1, "", "graph6_to_plot"], [40, 3, 1, "", "graph_db_info"], [40, 3, 1, "", "subgraphs_to_query"]], "sage.graphs.graph_database.GraphDatabase": [[40, 2, 1, "", "interactive_query"], [40, 2, 1, "", "query"]], "sage.graphs.graph_database.GraphQuery": [[40, 2, 1, "", "get_graphs_list"], [40, 2, 1, "", "number_of"], [40, 2, 1, "", "query_iterator"], [40, 2, 1, "", "show"]], "sage.graphs.graph_decompositions": [[41, 0, 0, "-", "bandwidth"], [42, 0, 0, "-", "clique_separators"], [43, 0, 0, "-", "cutwidth"], [44, 0, 0, "-", "fast_digraph"], [45, 0, 0, "-", "graph_products"], [46, 0, 0, "-", "modular_decomposition"], [47, 0, 0, "-", "rankwidth"], [48, 0, 0, "-", "slice_decomposition"], [49, 0, 0, "-", "tree_decomposition"], [50, 0, 0, "-", "vertex_separation"]], "sage.graphs.graph_decompositions.bandwidth": [[41, 3, 1, "", "bandwidth"]], "sage.graphs.graph_decompositions.clique_separators": [[42, 3, 1, "", "atoms_and_clique_separators"], [42, 3, 1, "", "make_labelled_rooted_tree"], [42, 3, 1, "", "make_tree"]], "sage.graphs.graph_decompositions.cutwidth": [[43, 3, 1, "", "cutwidth"], [43, 3, 1, "", "cutwidth_MILP"], [43, 3, 1, "", "cutwidth_dyn"], [43, 3, 1, "", "width_of_cut_decomposition"]], "sage.graphs.graph_decompositions.fast_digraph": [[44, 1, 1, "", "FastDigraph"], [44, 3, 1, "", "test_popcount"]], "sage.graphs.graph_decompositions.fast_digraph.FastDigraph": [[44, 2, 1, "", "print_adjacency_matrix"]], "sage.graphs.graph_decompositions.graph_products": [[45, 3, 1, "", "is_cartesian_product"], [45, 3, 1, "", "rooted_product"]], "sage.graphs.graph_decompositions.modular_decomposition": [[46, 1, 1, "", "Node"], [46, 1, 1, "", "NodeType"], [46, 3, 1, "", "check_algos_are_equivalent"], [46, 3, 1, "", "children_node_type"], [46, 3, 1, "", "corneil_habib_paul_tedder_algorithm"], [46, 3, 1, "", "either_connected_or_not_connected"], [46, 3, 1, "", "equivalent_trees"], [46, 3, 1, "", "form_module"], [46, 3, 1, "", "gamma_classes"], [46, 3, 1, "", "get_module_type"], [46, 3, 1, "", "get_vertices"], [46, 3, 1, "", "habib_maurer_algorithm"], [46, 3, 1, "", "md_tree_to_graph"], [46, 3, 1, "", "modular_decomposition"], [46, 3, 1, "", "nested_tuple_to_tree"], [46, 3, 1, "", "permute_decomposition"], [46, 3, 1, "", "print_md_tree"], [46, 3, 1, "", "random_md_tree"], [46, 3, 1, "", "recreate_decomposition"], [46, 3, 1, "", "relabel_tree"], [46, 3, 1, "", "test_gamma_modules"], [46, 3, 1, "", "test_maximal_modules"], [46, 3, 1, "", "test_modular_decomposition"], [46, 3, 1, "", "test_module"], [46, 3, 1, "", "tree_to_nested_tuple"]], "sage.graphs.graph_decompositions.modular_decomposition.Node": [[46, 2, 1, "", "create_leaf"], [46, 2, 1, "", "is_empty"], [46, 2, 1, "", "is_leaf"], [46, 2, 1, "", "is_prime"], [46, 2, 1, "", "is_series"]], "sage.graphs.graph_decompositions.modular_decomposition.NodeType": [[46, 4, 1, "", "EMPTY"], [46, 4, 1, "", "NORMAL"], [46, 4, 1, "", "PARALLEL"], [46, 4, 1, "", "PRIME"], [46, 4, 1, "", "SERIES"]], "sage.graphs.graph_decompositions.rankwidth": [[47, 3, 1, "", "mkgraph"], [47, 3, 1, "", "rank_decomposition"]], "sage.graphs.graph_decompositions.slice_decomposition": [[48, 1, 1, "", "SliceDecomposition"], [48, 3, 1, "", "slice_decomposition"]], "sage.graphs.graph_decompositions.slice_decomposition.SliceDecomposition": [[48, 2, 1, "", "__getitem__"], [48, 2, 1, "", "active_edges"], [48, 2, 1, "", "lexBFS_order"], [48, 2, 1, "", "lexicographic_label"], [48, 2, 1, "", "slice"], [48, 2, 1, "", "underlying_graph"], [48, 2, 1, "", "xslice_data"], [48, 2, 1, "", "xslice_sequence"]], "sage.graphs.graph_decompositions.tree_decomposition": [[49, 1, 1, "", "TreelengthConnected"], [49, 3, 1, "", "is_valid_tree_decomposition"], [49, 3, 1, "", "label_nice_tree_decomposition"], [49, 3, 1, "", "length_of_tree_decomposition"], [49, 3, 1, "", "make_nice_tree_decomposition"], [49, 3, 1, "", "reduced_tree_decomposition"], [49, 3, 1, "", "treelength"], [49, 3, 1, "", "treelength_lowerbound"], [49, 3, 1, "", "treewidth"], [49, 3, 1, "", "width_of_tree_decomposition"]], "sage.graphs.graph_decompositions.tree_decomposition.TreelengthConnected": [[49, 2, 1, "", "get_length"], [49, 2, 1, "", "get_tree_decomposition"], [49, 2, 1, "", "is_less_than_k"]], "sage.graphs.graph_decompositions.vertex_separation": [[50, 3, 1, "", "is_valid_ordering"], [50, 3, 1, "", "linear_ordering_to_path_decomposition"], [50, 3, 1, "", "lower_bound"], [50, 3, 1, "", "path_decomposition"], [50, 3, 1, "", "pathwidth"], [50, 3, 1, "", "vertex_separation"], [50, 3, 1, "", "vertex_separation_BAB"], [50, 3, 1, "", "vertex_separation_MILP"], [50, 3, 1, "", "vertex_separation_exp"], [50, 3, 1, "", "width_of_path_decomposition"]], "sage.graphs.graph_editor": [[51, 3, 1, "", "graph_editor"]], "sage.graphs.graph_generators": [[52, 1, 1, "", "GraphGenerators"], [52, 3, 1, "", "canaug_traverse_edge"], [52, 3, 1, "", "canaug_traverse_vert"], [52, 3, 1, "", "check_aut"], [52, 3, 1, "", "check_aut_edge"]], "sage.graphs.graph_generators.GraphGenerators": [[52, 2, 1, "", "AffineOrthogonalPolarGraph"], [52, 2, 1, "", "AfricaMap"], [52, 2, 1, "", "AhrensSzekeresGeneralizedQuadrangleGraph"], [52, 2, 1, "", "AlternatingFormsGraph"], [52, 2, 1, "", "AztecDiamondGraph"], [52, 2, 1, "", "Balaban10Cage"], [52, 2, 1, "", "Balaban11Cage"], [52, 2, 1, "", "BalancedTree"], [52, 2, 1, "", "BarbellGraph"], [52, 2, 1, "", "BidiakisCube"], [52, 2, 1, "", "BiggsSmithGraph"], [52, 2, 1, "", "BilinearFormsGraph"], [52, 2, 1, "", "BishopGraph"], [52, 2, 1, "", "BiwheelGraph"], [52, 2, 1, "", "BlanusaFirstSnarkGraph"], [52, 2, 1, "", "BlanusaSecondSnarkGraph"], [52, 2, 1, "", "BrinkmannGraph"], [52, 2, 1, "", "BrouwerHaemersGraph"], [52, 2, 1, "", "BubbleSortGraph"], [52, 2, 1, "", "BuckyBall"], [52, 2, 1, "", "BullGraph"], [52, 2, 1, "", "ButterflyGraph"], [52, 2, 1, "", "CaiFurerImmermanGraph"], [52, 2, 1, "", "CameronGraph"], [52, 2, 1, "", "Cell120"], [52, 2, 1, "", "Cell600"], [52, 2, 1, "", "ChessboardGraphGenerator"], [52, 2, 1, "", "ChvatalGraph"], [52, 2, 1, "", "CirculantGraph"], [52, 2, 1, "", "CircularLadderGraph"], [52, 2, 1, "", "ClawGraph"], [52, 2, 1, "", "ClebschGraph"], [52, 2, 1, "", "CompleteBipartiteGraph"], [52, 2, 1, "", "CompleteGraph"], [52, 2, 1, "", "CompleteMultipartiteGraph"], [52, 2, 1, "", "ConwaySmith_for_3S7"], [52, 2, 1, "", "CorrelationGraph"], [52, 2, 1, "", "CossidentePenttilaGraph"], [52, 2, 1, "", "CoxeterGraph"], [52, 2, 1, "", "CubeConnectedCycle"], [52, 2, 1, "", "CubeGraph"], [52, 2, 1, "", "CubeplexGraph"], [52, 2, 1, "", "CycleGraph"], [52, 2, 1, "", "DartGraph"], [52, 2, 1, "", "DegreeSequence"], [52, 2, 1, "", "DegreeSequenceBipartite"], [52, 2, 1, "", "DegreeSequenceConfigurationModel"], [52, 2, 1, "", "DegreeSequenceExpected"], [52, 2, 1, "", "DegreeSequenceTree"], [52, 2, 1, "", "DejterGraph"], [52, 2, 1, "", "DesarguesGraph"], [52, 2, 1, "", "DiamondGraph"], [52, 2, 1, "", "DipoleGraph"], [52, 2, 1, "", "DodecahedralGraph"], [52, 2, 1, "", "DorogovtsevGoltsevMendesGraph"], [52, 2, 1, "", "DoubleGeneralizedPetersenGraph"], [52, 2, 1, "", "DoubleGrassmannGraph"], [52, 2, 1, "", "DoubleOddGraph"], [52, 2, 1, "", "DoubleStarSnark"], [52, 2, 1, "", "DoublyTruncatedWittGraph"], [52, 2, 1, "", "DurerGraph"], [52, 2, 1, "", "DyckGraph"], [52, 2, 1, "", "EgawaGraph"], [52, 2, 1, "", "EllinghamHorton54Graph"], [52, 2, 1, "", "EllinghamHorton78Graph"], [52, 2, 1, "", "EmptyGraph"], [52, 2, 1, "", "ErreraGraph"], [52, 2, 1, "", "EuropeMap"], [52, 2, 1, "", "F26AGraph"], [52, 2, 1, "", "FibonacciTree"], [52, 2, 1, "", "FlowerSnark"], [52, 2, 1, "", "FoldedCubeGraph"], [52, 2, 1, "", "FolkmanGraph"], [52, 2, 1, "", "ForkGraph"], [52, 2, 1, "", "FosterGraph"], [52, 2, 1, "", "FosterGraph3S6"], [52, 2, 1, "", "FranklinGraph"], [52, 2, 1, "", "FriendshipGraph"], [52, 2, 1, "", "FruchtGraph"], [52, 2, 1, "", "FurerGadget"], [52, 2, 1, "", "FuzzyBallGraph"], [52, 2, 1, "", "GemGraph"], [52, 2, 1, "", "GeneralisedDodecagonGraph"], [52, 2, 1, "", "GeneralisedHexagonGraph"], [52, 2, 1, "", "GeneralisedOctagonGraph"], [52, 2, 1, "", "GeneralizedPetersenGraph"], [52, 2, 1, "", "GeneralizedSierpinskiGraph"], [52, 2, 1, "", "GoethalsSeidelGraph"], [52, 2, 1, "", "GoldnerHararyGraph"], [52, 2, 1, "", "GolombGraph"], [52, 2, 1, "", "GossetGraph"], [52, 2, 1, "", "GrassmannGraph"], [52, 2, 1, "", "GrayGraph"], [52, 2, 1, "", "Grid2dGraph"], [52, 2, 1, "", "GridGraph"], [52, 2, 1, "", "GritsenkoGraph"], [52, 2, 1, "", "GrotzschGraph"], [52, 2, 1, "", "HaemersGraph"], [52, 2, 1, "", "HalfCube"], [52, 2, 1, "", "HallJankoGraph"], [52, 2, 1, "", "HammingGraph"], [52, 2, 1, "", "HanoiTowerGraph"], [52, 2, 1, "", "HararyGraph"], [52, 2, 1, "", "HarborthGraph"], [52, 2, 1, "", "HarriesGraph"], [52, 2, 1, "", "HarriesWongGraph"], [52, 2, 1, "", "HeawoodGraph"], [52, 2, 1, "", "HermitianFormsGraph"], [52, 2, 1, "", "HerschelGraph"], [52, 2, 1, "", "HexahedralGraph"], [52, 2, 1, "", "HigmanSimsGraph"], [52, 2, 1, "", "HoffmanGraph"], [52, 2, 1, "", "HoffmanSingletonGraph"], [52, 2, 1, "", "HoltGraph"], [52, 2, 1, "", "HortonGraph"], [52, 2, 1, "", "HouseGraph"], [52, 2, 1, "", "HouseXGraph"], [52, 2, 1, "", "HyperStarGraph"], [52, 2, 1, "", "IGraph"], [52, 2, 1, "", "IcosahedralGraph"], [52, 2, 1, "", "IntersectionGraph"], [52, 2, 1, "", "IntervalGraph"], [52, 2, 1, "", "IoninKharaghani765Graph"], [52, 2, 1, "", "IvanovIvanovFaradjevGraph"], [52, 2, 1, "", "J2Graph"], [52, 2, 1, "", "JankoKharaghaniGraph"], [52, 2, 1, "", "JankoKharaghaniTonchevGraph"], [52, 2, 1, "", "JohnsonGraph"], [52, 2, 1, "", "KingGraph"], [52, 2, 1, "", "KittellGraph"], [52, 2, 1, "", "Klein3RegularGraph"], [52, 2, 1, "", "Klein7RegularGraph"], [52, 2, 1, "", "KneserGraph"], [52, 2, 1, "", "KnightGraph"], [52, 2, 1, "", "KrackhardtKiteGraph"], [52, 2, 1, "", "LCFGraph"], [52, 2, 1, "", "LadderGraph"], [52, 2, 1, "", "LargeWittGraph"], [52, 2, 1, "", "LeonardGraph"], [52, 2, 1, "", "LivingstoneGraph"], [52, 2, 1, "", "LjubljanaGraph"], [52, 2, 1, "", "LocalMcLaughlinGraph"], [52, 2, 1, "", "LollipopGraph"], [52, 2, 1, "", "M22Graph"], [52, 2, 1, "", "MarkstroemGraph"], [52, 2, 1, "", "MathonPseudocyclicMergingGraph"], [52, 2, 1, "", "MathonPseudocyclicStronglyRegularGraph"], [52, 2, 1, "", "MathonStronglyRegularGraph"], [52, 2, 1, "", "McGeeGraph"], [52, 2, 1, "", "McLaughlinGraph"], [52, 2, 1, "", "MeredithGraph"], [52, 2, 1, "", "MoebiusKantorGraph"], [52, 2, 1, "", "MoebiusLadderGraph"], [52, 2, 1, "", "MoserSpindle"], [52, 2, 1, "", "MurtyGraph"], [52, 2, 1, "", "MuzychukS6Graph"], [52, 2, 1, "", "MycielskiGraph"], [52, 2, 1, "", "MycielskiStep"], [52, 2, 1, "", "NKStarGraph"], [52, 2, 1, "", "NStarGraph"], [52, 2, 1, "", "NauruGraph"], [52, 2, 1, "", "NonisotropicOrthogonalPolarGraph"], [52, 2, 1, "", "NonisotropicUnitaryPolarGraph"], [52, 2, 1, "", "Nowhere0WordsTwoWeightCodeGraph"], [52, 2, 1, "", "OctahedralGraph"], [52, 2, 1, "", "OddGraph"], [52, 2, 1, "", "OrthogonalArrayBlockGraph"], [52, 2, 1, "", "OrthogonalDualPolarGraph"], [52, 2, 1, "", "OrthogonalPolarGraph"], [52, 2, 1, "", "PaleyGraph"], [52, 2, 1, "", "PappusGraph"], [52, 2, 1, "", "PasechnikGraph"], [52, 2, 1, "", "PathGraph"], [52, 2, 1, "", "PerkelGraph"], [52, 2, 1, "", "PermutationGraph"], [52, 2, 1, "", "PetersenGraph"], [52, 2, 1, "", "PoussinGraph"], [52, 2, 1, "", "QueenGraph"], [52, 2, 1, "", "RandomBarabasiAlbert"], [52, 2, 1, "", "RandomBicubicPlanar"], [52, 2, 1, "", "RandomBipartite"], [52, 2, 1, "", "RandomBlockGraph"], [52, 2, 1, "", "RandomBoundedToleranceGraph"], [52, 2, 1, "", "RandomChordalGraph"], [52, 2, 1, "", "RandomGNM"], [52, 2, 1, "", "RandomGNP"], [52, 2, 1, "", "RandomHolmeKim"], [52, 2, 1, "", "RandomIntervalGraph"], [52, 2, 1, "", "RandomKTree"], [52, 2, 1, "", "RandomLobster"], [52, 2, 1, "", "RandomNewmanWattsStrogatz"], [52, 2, 1, "", "RandomPartialKTree"], [52, 2, 1, "", "RandomProperIntervalGraph"], [52, 2, 1, "", "RandomRegular"], [52, 2, 1, "", "RandomRegularBipartite"], [52, 2, 1, "", "RandomShell"], [52, 2, 1, "", "RandomToleranceGraph"], [52, 2, 1, "", "RandomTree"], [52, 2, 1, "", "RandomTreePowerlaw"], [52, 2, 1, "", "RandomTriangulation"], [52, 2, 1, "", "RandomUnitDiskGraph"], [52, 2, 1, "", "RingedTree"], [52, 2, 1, "", "RobertsonGraph"], [52, 2, 1, "", "RookGraph"], [52, 2, 1, "", "RoseWindowGraph"], [52, 2, 1, "", "SchlaefliGraph"], [52, 2, 1, "", "ShrikhandeGraph"], [52, 2, 1, "", "SierpinskiGasketGraph"], [52, 2, 1, "", "SimsGewirtzGraph"], [52, 2, 1, "", "SousselierGraph"], [52, 2, 1, "", "SquaredSkewHadamardMatrixGraph"], [52, 2, 1, "", "StaircaseGraph"], [52, 2, 1, "", "StarGraph"], [52, 2, 1, "", "SuzukiGraph"], [52, 2, 1, "", "SwitchedSquaredSkewHadamardMatrixGraph"], [52, 2, 1, "", "SylvesterGraph"], [52, 2, 1, "", "SymplecticDualPolarGraph"], [52, 2, 1, "", "SymplecticPolarGraph"], [52, 2, 1, "", "SzekeresSnarkGraph"], [52, 2, 1, "", "T2starGeneralizedQuadrangleGraph"], [52, 2, 1, "", "TabacjnGraph"], [52, 2, 1, "", "TadpoleGraph"], [52, 2, 1, "", "TaylorTwographDescendantSRG"], [52, 2, 1, "", "TaylorTwographSRG"], [52, 2, 1, "", "TetrahedralGraph"], [52, 2, 1, "", "ThomsenGraph"], [52, 2, 1, "", "TietzeGraph"], [52, 2, 1, "", "ToleranceGraph"], [52, 2, 1, "", "Toroidal6RegularGrid2dGraph"], [52, 2, 1, "", "ToroidalGrid2dGraph"], [52, 2, 1, "", "TricornGraph"], [52, 2, 1, "", "TruncatedBiwheelGraph"], [52, 2, 1, "", "TruncatedIcosidodecahedralGraph"], [52, 2, 1, "", "TruncatedTetrahedralGraph"], [52, 2, 1, "", "TruncatedWittGraph"], [52, 2, 1, "", "TuranGraph"], [52, 2, 1, "", "Tutte12Cage"], [52, 2, 1, "", "TutteCoxeterGraph"], [52, 2, 1, "", "TutteGraph"], [52, 2, 1, "", "TwinplexGraph"], [52, 2, 1, "", "U42Graph216"], [52, 2, 1, "", "U42Graph540"], [52, 2, 1, "", "USAMap"], [52, 2, 1, "", "UnitaryDualPolarGraph"], [52, 2, 1, "", "UnitaryPolarGraph"], [52, 2, 1, "", "UstimenkoGraph"], [52, 2, 1, "", "WagnerGraph"], [52, 2, 1, "", "WatkinsSnarkGraph"], [52, 2, 1, "", "WellsGraph"], [52, 2, 1, "", "WheelGraph"], [52, 2, 1, "", "WienerArayaGraph"], [52, 2, 1, "", "WindmillGraph"], [52, 2, 1, "", "WorldMap"], [52, 4, 1, "", "basic"], [52, 2, 1, "", "chang_graphs"], [52, 4, 1, "", "chessboard"], [52, 4, 1, "", "classical_geometries"], [52, 2, 1, "", "cocliques_HoffmannSingleton"], [52, 2, 1, "", "cographs"], [52, 4, 1, "", "cographs_module"], [52, 2, 1, "", "cospectral_graphs"], [52, 4, 1, "", "degree_sequence"], [52, 2, 1, "", "distance_3_doubly_truncated_Golay_code_graph"], [52, 4, 1, "", "distance_regular"], [52, 2, 1, "", "distance_regular_graph"], [52, 4, 1, "", "families"], [52, 2, 1, "", "fullerenes"], [52, 2, 1, "", "fusenes"], [52, 2, 1, "", "graph_3O73"], [52, 4, 1, "", "intersection"], [52, 2, 1, "", "line_graph_forbidden_subgraphs"], [52, 2, 1, "", "locally_GQ42_distance_transitive_graph"], [52, 2, 1, "", "nauty_genbg"], [52, 2, 1, "", "nauty_geng"], [52, 2, 1, "", "nauty_genktreeg"], [52, 2, 1, "", "nauty_gentreeg"], [52, 2, 1, "", "petersen_family"], [52, 2, 1, "", "planar_graphs"], [52, 2, 1, "", "plantri_gen"], [52, 4, 1, "", "platonic_solids"], [52, 2, 1, "", "quadrangulations"], [52, 4, 1, "", "random"], [52, 2, 1, "", "shortened_000_111_extended_binary_Golay_code_graph"], [52, 2, 1, "", "shortened_00_11_binary_Golay_code_graph"], [52, 4, 1, "", "smallgraphs"], [52, 4, 1, "", "strongly_regular_db"], [52, 2, 1, "", "strongly_regular_graph"], [52, 2, 1, "", "trees"], [52, 2, 1, "", "triangulations"], [52, 2, 1, "", "vanLintSchrijverGraph"], [52, 4, 1, "", "world_map"]], "sage.graphs.graph_generators_pyx": [[53, 3, 1, "", "RandomGNP"]], "sage.graphs.graph_input": [[54, 3, 1, "", "from_adjacency_matrix"], [54, 3, 1, "", "from_dict_of_dicts"], [54, 3, 1, "", "from_dict_of_lists"], [54, 3, 1, "", "from_dig6"], [54, 3, 1, "", "from_graph6"], [54, 3, 1, "", "from_incidence_matrix"], [54, 3, 1, "", "from_networkx_graph"], [54, 3, 1, "", "from_oriented_incidence_matrix"], [54, 3, 1, "", "from_seidel_adjacency_matrix"], [54, 3, 1, "", "from_sparse6"]], "sage.graphs.graph_latex": [[55, 1, 1, "", "GraphLatex"], [55, 3, 1, "", "check_tkz_graph"], [55, 3, 1, "", "have_tkz_graph"], [55, 3, 1, "", "setup_latex_preamble"]], "sage.graphs.graph_latex.GraphLatex": [[55, 2, 1, "", "dot2tex_picture"], [55, 2, 1, "", "get_option"], [55, 2, 1, "", "latex"], [55, 2, 1, "", "set_option"], [55, 2, 1, "", "set_options"], [55, 2, 1, "", "tkz_picture"]], "sage.graphs.graph_list": [[56, 3, 1, "", "from_graph6"], [56, 3, 1, "", "from_sparse6"], [56, 3, 1, "", "from_whatever"], [56, 3, 1, "", "show_graphs"], [56, 3, 1, "", "to_graph6"], [56, 3, 1, "", "to_graphics_array"], [56, 3, 1, "", "to_sparse6"]], "sage.graphs.graph_plot": [[57, 1, 1, "", "GraphPlot"]], "sage.graphs.graph_plot.GraphPlot": [[57, 2, 1, "", "layout_tree"], [57, 2, 1, "", "plot"], [57, 2, 1, "", "set_edges"], [57, 2, 1, "", "set_pos"], [57, 2, 1, "", "set_vertices"], [57, 2, 1, "", "show"]], "sage.graphs.graph_plot_js": [[58, 3, 1, "", "gen_html_code"]], "sage.graphs.hyperbolicity": [[59, 3, 1, "", "hyperbolicity"], [59, 3, 1, "", "hyperbolicity_distribution"]], "sage.graphs.hypergraph_generators": [[60, 1, 1, "", "HypergraphGenerators"]], "sage.graphs.hypergraph_generators.HypergraphGenerators": [[60, 2, 1, "", "BinomialRandomUniform"], [60, 2, 1, "", "CompleteUniform"], [60, 2, 1, "", "UniformRandomUniform"], [60, 2, 1, "", "nauty"]], "sage.graphs.independent_sets": [[61, 1, 1, "", "IndependentSets"]], "sage.graphs.independent_sets.IndependentSets": [[61, 2, 1, "", "cardinality"]], "sage.graphs.isgci": [[62, 1, 1, "", "GraphClass"], [62, 1, 1, "", "GraphClasses"]], "sage.graphs.isgci.GraphClass": [[62, 2, 1, "", "description"], [62, 2, 1, "", "forbidden_subgraphs"]], "sage.graphs.isgci.GraphClasses": [[62, 2, 1, "", "classes"], [62, 2, 1, "", "get_class"], [62, 2, 1, "", "inclusion_digraph"], [62, 2, 1, "", "inclusions"], [62, 2, 1, "", "show_all"], [62, 2, 1, "", "smallgraphs"], [62, 2, 1, "", "update_db"]], "sage.graphs.isoperimetric_inequalities": [[63, 3, 1, "", "cheeger_constant"], [63, 3, 1, "", "edge_isoperimetric_number"], [63, 3, 1, "", "vertex_isoperimetric_number"]], "sage.graphs.line_graph": [[64, 3, 1, "", "is_line_graph"], [64, 3, 1, "", "line_graph"], [64, 3, 1, "", "root_graph"]], "sage.graphs.lovasz_theta": [[65, 3, 1, "", "lovasz_theta"]], "sage.graphs.matching": [[66, 3, 1, "", "M_alternating_even_mark"], [66, 3, 1, "", "has_perfect_matching"], [66, 3, 1, "", "is_bicritical"], [66, 3, 1, "", "is_factor_critical"], [66, 3, 1, "", "is_matching_covered"], [66, 3, 1, "", "matching"], [66, 3, 1, "", "perfect_matchings"]], "sage.graphs.matching_covered_graph": [[67, 1, 1, "", "MatchingCoveredGraph"]], "sage.graphs.matching_covered_graph.MatchingCoveredGraph": [[67, 2, 1, "", "add_edge"], [67, 2, 1, "", "add_edges"], [67, 2, 1, "", "add_vertex"], [67, 2, 1, "", "add_vertices"], [67, 2, 1, "", "allow_loops"], [67, 2, 1, "", "allows_loops"], [67, 2, 1, "", "canonical_partition"], [67, 2, 1, "", "delete_vertex"], [67, 2, 1, "", "delete_vertices"], [67, 2, 1, "", "get_matching"], [67, 2, 1, "", "has_loops"], [67, 2, 1, "", "has_perfect_matching"], [67, 2, 1, "", "is_brace"], [67, 2, 1, "", "is_brick"], [67, 2, 1, "", "loop_edges"], [67, 2, 1, "", "loop_vertices"], [67, 2, 1, "", "loops"], [67, 2, 1, "", "maximal_barrier"], [67, 2, 1, "", "number_of_loops"], [67, 2, 1, "", "remove_loops"], [67, 2, 1, "", "update_matching"]], "sage.graphs.matchpoly": [[68, 3, 1, "", "complete_poly"], [68, 3, 1, "", "matching_polynomial"]], "sage.graphs.orientations": [[69, 3, 1, "", "acyclic_orientations"], [69, 3, 1, "", "bounded_outdegree_orientation"], [69, 3, 1, "", "eulerian_orientation"], [69, 3, 1, "", "minimum_outdegree_orientation"], [69, 3, 1, "", "orient"], [69, 3, 1, "", "orientations"], [69, 3, 1, "", "random_orientation"], [69, 3, 1, "", "strong_orientation"], [69, 3, 1, "", "strong_orientations_iterator"]], "sage.graphs.partial_cube": [[70, 3, 1, "", "breadth_first_level_search"], [70, 3, 1, "", "depth_first_traversal"], [70, 3, 1, "", "is_partial_cube"]], "sage.graphs.path_enumeration": [[71, 3, 1, "", "all_paths"], [71, 3, 1, "", "all_paths_iterator"], [71, 3, 1, "", "all_simple_paths"], [71, 3, 1, "", "feng_k_shortest_simple_paths"], [71, 3, 1, "", "shortest_simple_paths"], [71, 3, 1, "", "yen_k_shortest_simple_paths"]], "sage.graphs.planarity": [[72, 3, 1, "", "is_planar"]], "sage.graphs.pq_trees": [[73, 1, 1, "", "P"], [73, 1, 1, "", "PQ"], [73, 1, 1, "", "Q"], [73, 3, 1, "", "reorder_sets"]], "sage.graphs.pq_trees.P": [[73, 2, 1, "", "cardinality"], [73, 2, 1, "", "orderings"], [73, 2, 1, "", "set_contiguous"]], "sage.graphs.pq_trees.PQ": [[73, 2, 1, "", "flatten"], [73, 2, 1, "", "number_of_children"], [73, 2, 1, "", "ordering"], [73, 2, 1, "", "reverse"], [73, 2, 1, "", "simplify"]], "sage.graphs.pq_trees.Q": [[73, 2, 1, "", "cardinality"], [73, 2, 1, "", "orderings"], [73, 2, 1, "", "set_contiguous"]], "sage.graphs.schnyder": [[74, 1, 1, "", "TreeNode"], [74, 3, 1, "", "minimal_schnyder_wood"]], "sage.graphs.schnyder.TreeNode": [[74, 2, 1, "", "append_child"], [74, 2, 1, "", "compute_depth_of_self_and_children"], [74, 2, 1, "", "compute_number_of_descendants"]], "sage.graphs.spanning_tree": [[75, 3, 1, "", "boruvka"], [75, 3, 1, "", "edge_disjoint_spanning_trees"], [75, 3, 1, "", "filter_kruskal"], [75, 3, 1, "", "filter_kruskal_iterator"], [75, 3, 1, "", "kruskal"], [75, 3, 1, "", "kruskal_iterator"], [75, 3, 1, "", "kruskal_iterator_from_edges"], [75, 3, 1, "", "random_spanning_tree"], [75, 3, 1, "", "spanning_trees"]], "sage.graphs.strongly_regular_db": [[76, 3, 1, "", "SRG_100_44_18_20"], [76, 3, 1, "", "SRG_100_45_20_20"], [76, 3, 1, "", "SRG_105_32_4_12"], [76, 3, 1, "", "SRG_120_63_30_36"], [76, 3, 1, "", "SRG_120_77_52_44"], [76, 3, 1, "", "SRG_126_25_8_4"], [76, 3, 1, "", "SRG_126_50_13_24"], [76, 3, 1, "", "SRG_1288_792_476_504"], [76, 3, 1, "", "SRG_144_39_6_12"], [76, 3, 1, "", "SRG_175_72_20_36"], [76, 3, 1, "", "SRG_176_105_68_54"], [76, 3, 1, "", "SRG_176_49_12_14"], [76, 3, 1, "", "SRG_176_90_38_54"], [76, 3, 1, "", "SRG_196_91_42_42"], [76, 3, 1, "", "SRG_210_99_48_45"], [76, 3, 1, "", "SRG_220_84_38_28"], [76, 3, 1, "", "SRG_243_110_37_60"], [76, 3, 1, "", "SRG_253_140_87_65"], [76, 3, 1, "", "SRG_276_140_58_84"], [76, 3, 1, "", "SRG_280_117_44_52"], [76, 3, 1, "", "SRG_280_135_70_60"], [76, 3, 1, "", "SRG_416_100_36_20"], [76, 3, 1, "", "SRG_560_208_72_80"], [76, 3, 1, "", "SRG_630_85_20_10"], [76, 3, 1, "", "SRG_from_RSHCD"], [76, 3, 1, "", "apparently_feasible_parameters"], [76, 3, 1, "", "eigenmatrix"], [76, 3, 1, "", "is_GQqmqp"], [76, 3, 1, "", "is_NO_F2"], [76, 3, 1, "", "is_NO_F3"], [76, 3, 1, "", "is_NOodd"], [76, 3, 1, "", "is_NOperp_F5"], [76, 3, 1, "", "is_NU"], [76, 3, 1, "", "is_RSHCD"], [76, 3, 1, "", "is_affine_polar"], [76, 3, 1, "", "is_complete_multipartite"], [76, 3, 1, "", "is_cossidente_penttila"], [76, 3, 1, "", "is_goethals_seidel"], [76, 3, 1, "", "is_haemers"], [76, 3, 1, "", "is_johnson"], [76, 3, 1, "", "is_mathon_PC_srg"], [76, 3, 1, "", "is_muzychuk_S6"], [76, 3, 1, "", "is_nowhere0_twoweight"], [76, 3, 1, "", "is_orthogonal_array_block_graph"], [76, 3, 1, "", "is_orthogonal_polar"], [76, 3, 1, "", "is_paley"], [76, 3, 1, "", "is_polhill"], [76, 3, 1, "", "is_steiner"], [76, 3, 1, "", "is_switch_OA_srg"], [76, 3, 1, "", "is_switch_skewhad"], [76, 3, 1, "", "is_taylor_twograph_srg"], [76, 3, 1, "", "is_twograph_descendant_of_srg"], [76, 3, 1, "", "is_unitary_dual_polar"], [76, 3, 1, "", "is_unitary_polar"], [76, 3, 1, "", "latin_squares_graph_parameters"], [76, 3, 1, "", "strongly_regular_from_two_intersection_set"], [76, 3, 1, "", "strongly_regular_from_two_weight_code"], [76, 3, 1, "", "strongly_regular_graph"], [76, 3, 1, "", "strongly_regular_graph_lazy"]], "sage.graphs.traversals": [[77, 3, 1, "", "is_valid_lex_M_order"], [77, 3, 1, "", "lex_BFS"], [77, 3, 1, "", "lex_DFS"], [77, 3, 1, "", "lex_DOWN"], [77, 3, 1, "", "lex_M"], [77, 3, 1, "", "lex_M_fast"], [77, 3, 1, "", "lex_M_slow"], [77, 3, 1, "", "lex_UP"], [77, 3, 1, "", "maximum_cardinality_search"], [77, 3, 1, "", "maximum_cardinality_search_M"]], "sage.graphs.trees": [[78, 1, 1, "", "TreeIterator"]], "sage.graphs.tutte_polynomial": [[79, 1, 1, "", "Ear"], [79, 1, 1, "", "EdgeSelection"], [79, 1, 1, "", "MaximizeDegree"], [79, 1, 1, "", "MinimizeDegree"], [79, 1, 1, "", "MinimizeSingleDegree"], [79, 1, 1, "", "VertexOrder"], [79, 3, 1, "", "contracted_edge"], [79, 3, 1, "", "edge_multiplicities"], [79, 3, 1, "", "removed_edge"], [79, 3, 1, "", "removed_loops"], [79, 3, 1, "", "removed_multiedge"], [79, 3, 1, "", "tutte_polynomial"], [79, 3, 1, "", "underlying_graph"]], "sage.graphs.tutte_polynomial.Ear": [[79, 2, 1, "", "find_ear"], [79, 2, 1, "", "removed_from"], [79, 5, 1, "", "s"], [79, 2, 1, "", "unlabeled_edges"], [79, 5, 1, "", "vertices"]], "sage.graphs.views": [[80, 1, 1, "", "EdgesView"]], "sage.graphs.weakly_chordal": [[81, 3, 1, "", "is_long_antihole_free"], [81, 3, 1, "", "is_long_hole_free"], [81, 3, 1, "", "is_weakly_chordal"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property"}, "terms": {"": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 52, 55, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 71, 73, 75, 76, 79, 81], "0": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80], "00": [21, 28, 29, 35, 36, 52, 55, 70, 73, 80], "000": [10, 21, 23, 28, 29, 35, 38, 52, 77], "0000": [29, 35, 52], "000000000000000": 35, "0000000000000000000000000000001000000000010000000001000010000000000000000000110000000000000000010100000010000000000001000000000010000000000": 36, "0000000000000000000001000000000000010000100000100000001000000000000000100000000100000": 36, "00001": [11, 35], "0000ff": [35, 38, 39, 57], "0001": [29, 35, 52], "000110120222220": 76, "001": [18, 21, 23, 29, 35, 38, 39, 43, 50, 52, 67, 77], "0010": [29, 35, 52], "001001000": 21, "001021112100011": 76, "0011": [29, 35, 52], "007": 37, "00ff00": [35, 38, 39, 57], "00ffff": [35, 39], "01": [9, 12, 18, 20, 21, 29, 35, 38, 50, 52, 58, 64, 69, 70, 73, 80], "010": [21, 29, 35, 44, 52, 77], "0100": [29, 35, 52], "010000000000000100010000001000000000000000000000000000001010000000001011000000000000010010000000000000010000000000100000000001000001000000000000000001000000000000000000000000000000000000": 36, "0100110": [29, 52], "010011211122000": 76, "0101": [29, 35, 52], "011": [21, 23, 29, 35, 38, 52, 77], "0110": [29, 52], "0111": [29, 35, 52], "011100": [29, 52], "012": 21, "02": [9, 18, 20, 33, 35, 36, 38, 39, 40, 52, 55, 56, 70, 74], "020": 21, "021": 21, "03": [12, 18, 20, 23, 29, 33, 35, 36, 38, 39, 52], "0325": 35, "04": [12, 17, 18, 23, 35, 38, 50, 51, 52, 55, 58, 78], "0446": 35, "04cm": 55, "05": [15, 25, 35, 38, 40, 52, 55, 58], "05390084497706962": 35, "0563cm": 55, "0587cm": 55, "06": [15, 29, 35, 36, 38, 43, 48, 52, 65, 66, 67, 79], "0606060606060606": 35, "066122": [29, 52], "06969696969696969": 35, "07": [28, 38, 40, 52], "0729": 37, "075": [35, 57], "08": [15, 33, 34, 38, 52], "09": [29, 38, 40, 52, 74], "0990": 35, "0cm": 55, "0pt": [28, 52], "0th": [27, 52], "1": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80], "10": [1, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 41, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80], "100": [4, 18, 20, 21, 22, 24, 29, 30, 32, 33, 35, 36, 38, 52, 57, 59, 67, 69, 71, 75, 76, 77], "1000": [13, 29, 32, 35, 36, 39, 52, 57, 68], "10000": 75, "100000": [11, 35, 36], "1000000": [38, 50, 59], "10000000000000000000000000000000010000000001011011000000100000000001001110000000000000000000000000001000010010000001100000001000000001000000000100000000": 36, "100022021001111": 76, "1001": [29, 35, 52], "10054631441617742": 35, "100546895675278": 35, "1007": 37, "101": [21, 23, 29, 35, 38, 44, 52, 77], "1010": [29, 52], "1011": [29, 35, 52], "101100": [29, 52], "1011010": [29, 52], "102": [21, 27, 33, 52], "1022": 28, "1024": 76, "1029": [33, 52], "10395": [38, 68], "104": [33, 52], "1044": 52, "105": [14, 28, 29, 33, 38, 52, 68, 76, 79], "106": [29, 52], "1071": [27, 52], "108": [27, 52], "10800": [29, 52], "109": [29, 35, 52], "1090": 75, "10b": 76, "11": [1, 4, 12, 14, 15, 18, 20, 21, 22, 23, 25, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 45, 46, 49, 50, 52, 55, 57, 58, 59, 66, 67, 68, 70, 73, 75, 76, 80], "110": [10, 21, 29, 35, 52, 76, 77], "1100": [29, 52], "110000101": 36, "1101": [29, 35, 52], "110100": [29, 52], "110111010110110010111000001100000001000000001": 36, "111": [10, 21, 28, 29, 35, 52, 77], "1110": [29, 52], "111000": [29, 52], "1111": [29, 35, 52], "11111010111": 36, "1114": 35, "112": [10, 27, 28, 29, 33, 52, 76], "1120": [27, 52], "1121": 75, "11252": 15, "113": 10, "11333": 1, "114": [38, 79], "116": [29, 52, 76], "11613": 35, "117": [28, 52, 76], "119": [27, 35, 52], "12": [1, 4, 9, 10, 12, 13, 14, 18, 20, 21, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 45, 46, 51, 52, 55, 57, 58, 67, 68, 70, 73, 75, 76, 79], "120": [1, 21, 27, 28, 33, 35, 38, 52, 58, 76, 79], "1200": [33, 52], "120877": [29, 52], "121": [21, 35], "121320343559642": 35, "1213203435596424": 35, "12155": [25, 52], "1225": [29, 52], "123": 35, "1235": 75, "125": [20, 27, 28, 35, 52], "1258": 75, "126": [33, 38, 52, 59, 76], "1260": [38, 68], "12743933": 20, "128": [29, 52], "12867615": 20, "1288": 76, "13": [1, 3, 4, 18, 20, 21, 23, 25, 27, 29, 32, 33, 35, 36, 37, 38, 40, 41, 45, 46, 52, 55, 56, 57, 67, 68, 73, 76], "130": [27, 52], "1301": [29, 52], "1309458150": 68, "132": [35, 76], "133": [14, 38], "13305": 35, "135": [27, 33, 52, 76], "1350": [29, 52], "1351": [29, 52], "135135": [38, 68], "1353": [14, 38], "136": [27, 36, 52], "13624": 55, "1365": [27, 52], "13860": [38, 68], "139": [29, 52], "1391": 75, "1394": [52, 76], "13977928595154515": 35, "14": [1, 4, 10, 11, 15, 18, 20, 22, 25, 27, 28, 29, 30, 33, 35, 36, 38, 45, 46, 52, 57, 66, 67, 73, 75, 76], "140": [33, 52, 76], "1401": 35, "14297": [9, 38], "144": [29, 33, 52, 75, 76], "1440": 73, "145": [38, 68], "14525": 15, "1463": [33, 52], "1464": 75, "1485": [38, 68], "15": [1, 4, 9, 11, 14, 18, 20, 21, 27, 28, 29, 30, 32, 33, 35, 36, 38, 45, 49, 50, 52, 56, 57, 63, 66, 67, 68, 73, 76, 78, 79], "150": [29, 33, 52], "1500": 22, "152": 76, "153": [33, 52], "154": 35, "155": [28, 52], "156": 52, "157": [25, 52], "15810": 10, "16": [1, 4, 5, 8, 9, 10, 12, 18, 19, 20, 21, 22, 27, 28, 29, 33, 35, 36, 38, 45, 46, 52, 57, 67, 70, 75, 76, 78], "160": 35, "161": 49, "16112198303979125": 35, "16112198303979128": 35, "16112205885619563": 35, "1619531043247219": 35, "16195368558382262": 35, "162": [29, 33, 52], "163": [33, 52], "16459583718588994": 35, "16470": 35, "165": [27, 35, 52], "16539840184339605": 35, "166": 35, "16666666666666666": 35, "168": [1, 33, 38, 52, 79], "169": 35, "16gb": 22, "17": [3, 19, 20, 25, 28, 29, 33, 34, 35, 36, 38, 45, 46, 52, 56, 57, 60, 66, 67, 76], "170": [38, 76, 79], "1700057609707141": 35, "1701": 35, "171": [33, 38, 52, 79], "1716": 28, "172": 35, "17225": 10, "173": 35, "17325": [38, 68], "175": [27, 52, 76], "176": [27, 52, 76], "17775588228760858": 35, "17775603392041744": 35, "1782": [33, 52], "17905": [23, 35], "18": [1, 9, 10, 20, 27, 28, 33, 35, 36, 38, 40, 45, 46, 52, 57, 59, 67, 69, 75, 76], "180": [16, 29, 33, 38, 52, 76, 79], "1800": [27, 33, 52], "1812": 52, "182": 76, "184": [35, 75], "1846": 75, "18518518518518517": 13, "187": [33, 52, 75], "18753": [18, 35], "188": 35, "1881": [33, 52], "189": [33, 52], "19": [1, 4, 20, 25, 27, 32, 33, 35, 36, 38, 39, 40, 45, 47, 52, 57, 67, 76], "19047619047619047": 13, "192": [33, 52], "1920": [33, 52], "19444444444444442": 13, "1959": [33, 52], "196": [27, 29, 52, 76], "19600": 60, "19683": [28, 52], "197": 28, "19753086419753085": 13, "1976": 35, "198": [28, 35, 52], "1983": 38, "1984": 38, "199": [11, 35, 76], "1992": 1, "1994": 20, "1998": 52, "1a": 21, "1b": 21, "1cm": 55, "1e": [11, 13, 35, 38], "1st": [27, 45, 52, 76], "2": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81], "20": [1, 3, 4, 12, 17, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 45, 49, 50, 52, 55, 56, 57, 59, 66, 67, 68, 70, 71, 75, 76, 77], "200": [11, 28, 32, 35, 52, 57, 58, 76], "2000": [20, 35], "20000": 35, "2000000000000000": 38, "2002": [29, 52], "2006": [21, 38, 52, 66], "2007": [1, 36, 38, 40, 52, 56], "2008": [1, 12, 38, 39, 40, 74], "2009": [15, 21, 29, 33, 34, 35, 38, 39, 51, 52, 55, 78], "200mb": 22, "201": [11, 21, 35], "2010": [12, 29, 38, 52, 55], "2011": [11, 14, 15, 22, 29, 35, 38, 50, 52, 68], "2012": [17, 21, 26, 38, 45, 50, 52, 53, 59], "2013": [15, 38, 52, 58, 64, 79], "2014": [1, 22, 38, 58, 59], "2015": [43, 50, 59, 65], "2016": [33, 52, 59], "2017": [46, 69], "2018": [34, 38, 46, 52, 64], "2019": [23, 38], "202": [21, 35], "2020": 28, "2022": [12, 51], "2024": [21, 25, 29, 33, 38, 46, 48, 52, 66, 67], "203": 38, "205": [28, 52], "2058": [52, 76], "206": [28, 76], "208": 76, "2080": [27, 52], "21": [1, 18, 20, 27, 28, 32, 33, 34, 35, 36, 38, 39, 40, 45, 52, 57, 58, 59, 67, 68, 70, 76, 79], "210": [21, 38, 68, 76], "211": 40, "21111": 40, "2111111": 40, "212": 21, "212076941807": 35, "214": [14, 38], "2145": [38, 68], "216": [33, 52], "218": 21, "22": [10, 27, 28, 29, 33, 35, 36, 38, 40, 45, 52, 57, 66, 67, 70, 75, 76], "220": [29, 52, 76], "22070": [35, 55], "2211": 40, "221111": 40, "222": 40, "22211": 40, "2221111": 40, "2222": 40, "222211": 40, "22222": 40, "2222211": 40, "222222": 40, "2222222": 40, "225": [29, 52, 76], "2256": 35, "226": [29, 52, 76], "229": 35, "23": [1, 4, 5, 8, 18, 20, 21, 25, 29, 33, 35, 38, 40, 45, 52, 66, 67, 76], "2308": 35, "231": [33, 52, 76], "2342": 75, "23436": [28, 52], "235": [29, 52], "236": 35, "236068": [38, 65], "23658": [38, 39], "2374999999999999": 35, "23749999999999993": 35, "23798": [38, 39], "24": [1, 4, 10, 12, 14, 16, 21, 27, 28, 29, 33, 35, 38, 39, 40, 45, 46, 52, 57, 67, 75, 76], "240": [35, 38, 79], "242": [52, 76], "243": [33, 52, 76], "2448": [33, 52], "24635": 35, "2476cm": 55, "25": [1, 10, 21, 22, 23, 25, 28, 29, 30, 33, 35, 38, 48, 49, 52, 56, 67, 71, 75, 76], "250": [3, 35, 56], "25120": 55, "2514276": 58, "252": 38, "253": 76, "254": 52, "256": [38, 76], "25740": [38, 68], "25872": 38, "259": [28, 52], "2592": 76, "25994": [18, 35], "26": [18, 25, 27, 29, 33, 35, 38, 52, 67, 76], "2606": [14, 38], "261": [28, 52], "262143": [20, 38], "264": [28, 52, 76], "26444": 64, "265": [28, 52], "266": [33, 52], "268": [27, 28, 52], "27": [15, 23, 27, 28, 29, 33, 35, 52, 67, 76], "270270": [38, 68], "2704": 75, "272": [28, 29, 52], "273": [28, 29, 52], "274": [27, 52], "275": [33, 52], "276": 76, "279": [27, 28, 52], "27s_algorithm": [71, 75], "27s_graph": [33, 52], "27s_strongly_connected_components_algorithm": [11, 20], "27s_theorem_": 12, "28": [10, 18, 22, 27, 28, 29, 33, 35, 38, 39, 49, 52, 67, 68, 75, 76], "280": [28, 33, 52, 76], "2808": 76, "282": [28, 52], "284": [28, 52], "285": [28, 52], "2861": [14, 38], "2880": 35, "28837": 20, "29": [5, 8, 14, 35, 38, 52, 55, 79], "297": [27, 52, 76], "297792": 35, "2_4": 76, "2a": 38, "2byte": 22, "2c_4": 62, "2cm": 55, "2d": [18, 19, 25, 28, 29, 33, 35, 38, 45, 52, 70], "2d87a7": 55, "2d_g": 70, "2dist": 59, "2dsweep": [3, 20, 22], "2g": 37, "2i": [22, 29, 52], "2k": [12, 24, 38, 68, 76], "2k_2": 38, "2k_3": 62, "2m": [11, 38], "2n": [25, 28, 29, 35, 39, 52, 67, 75, 76], "2nd": [45, 76], "2r": [29, 38, 52], "2sweep": [22, 38], "2t": [29, 52, 76], "2wf02": 76, "2x": 38, "2z": 35, "3": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80], "30": [4, 5, 8, 17, 20, 27, 28, 32, 33, 35, 38, 46, 47, 49, 52, 58, 60, 61, 65, 67, 71, 76, 79], "300": [25, 27, 32, 51, 52], "3000": 35, "30000": 36, "303": 52, "305": [29, 52], "306": [29, 52], "3063198690713853": 35, "309": [35, 57], "31": [14, 29, 36, 38, 52, 76], "312": [27, 52], "313": 52, "3150": [38, 68], "3159": [29, 52], "32": [0, 14, 22, 27, 28, 33, 35, 36, 38, 43, 47, 50, 52, 76, 79], "32169": 35, "3221": 40, "324": [21, 33, 52, 76], "3240": [29, 52], "325": [27, 52], "32gb": 22, "33": [22, 35, 38, 75], "330": 76, "332": 35, "333": 35, "3333": 55, "333333333333333": 35, "3333333333333333": [3, 13, 35], "336": [33, 52], "337": [35, 75], "34": [22, 29, 35, 38, 52, 56, 57, 76], "340": [27, 52], "34249": [29, 52], "3465": [33, 52], "35": [21, 27, 28, 35, 38, 40, 52, 76, 79], "3501": 35, "35152": 35, "352": [33, 52], "353": 21, "357": [29, 52], "35889": [18, 35], "35903": 35, "35904": 36, "36": [13, 14, 22, 27, 28, 29, 30, 33, 35, 38, 52, 68, 76, 79], "361": [29, 52], "364": [28, 52], "365": [28, 29, 52], "36574": 35, "366": [28, 52], "3665": 35, "367": [28, 52], "368": [28, 52], "3681006": 58, "36843": 49, "369": [28, 52], "37": [18, 27, 35, 52, 75, 76], "371": [28, 52], "37224": 35, "373": [20, 28, 52], "375": [3, 33, 52], "376": 35, "377": 76, "378": [27, 29, 38, 52, 68, 76], "38": [28, 33, 52, 76], "384": 35, "385": 28, "386": [20, 28, 35], "3874cm": 55, "38768": 67, "389": [25, 35, 36, 52], "39": [27, 28, 29, 33, 52, 56, 76], "390": 35, "39038": 38, "392": [28, 52], "397": [28, 52], "39882": 35, "399": [28, 52], "3d": [35, 38, 52, 55], "3n": [29, 52], "3rd": 76, "3z": [29, 52], "4": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79, 80], "40": [4, 5, 8, 18, 27, 29, 32, 33, 34, 35, 38, 47, 52, 69, 71, 76], "400": [28, 35, 38, 52], "406824": 68, "4073": 35, "4079": [29, 52], "408": [28, 52], "4096": [29, 52], "41": [3, 12, 25, 35, 52, 56], "4142135623": 35, "414213562373094": [11, 35], "414213562373095": [11, 35], "416": [33, 52, 76], "42": [12, 27, 29, 33, 35, 38, 52, 69, 76], "420": [1, 38, 68], "422222222222": 13, "423": [14, 38], "425": [33, 52], "4275": [14, 38], "43": [29, 32, 35, 38, 52, 76], "4305": [14, 38], "4320": [33, 52], "4355": 35, "438": 38, "44": [12, 34, 52, 76], "441": [14, 29, 38, 52], "444": 35, "4444444444444444": 3, "45": [18, 27, 28, 29, 33, 35, 38, 52, 56, 68, 71, 76], "450": [29, 52], "4512": 35, "455": [14, 38], "456": 21, "46": [33, 35, 52], "462": [28, 76], "4653": 35, "47": [29, 35, 52], "4725": [38, 68], "47294849": 20, "473": 35, "475": 35, "476": 76, "48": [27, 28, 29, 33, 34, 35, 52, 76], "48119430408": [11, 35], "4811943041": [11, 35], "485": 35, "49": [28, 29, 35, 38, 52, 76], "4952cm": 55, "4gb": [43, 50], "4k": [33, 52], "4mb": 22, "4mm": 35, "4n": [29, 52], "4sweep": 22, "4t": [29, 52, 76], "4x4": 35, "5": [1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79, 80, 81], "50": [4, 5, 8, 18, 20, 22, 24, 25, 29, 31, 32, 33, 35, 36, 38, 42, 52, 55, 57, 58, 60, 75, 76], "500": [35, 58], "5000000000": 35, "50000000000000000": 35, "50118505": 20, "502": 55, "504": 76, "5040": 73, "5048cm": 55, "507": 35, "51": [27, 29, 35, 52, 76], "511": 28, "514": 35, "51975": [38, 68], "52": [27, 32, 33, 35, 52, 60, 76], "535": [33, 52], "54": [27, 33, 34, 35, 38, 50, 52, 67, 69, 76], "540": [33, 52], "544": [27, 52], "545": 35, "55": [25, 29, 35, 38, 52, 68, 76], "551": [29, 52], "5537739740270458": [11, 35], "553773974033029": [11, 35], "555": 35, "558": [27, 52], "56": [18, 21, 27, 29, 33, 38, 52, 76, 79], "560": 76, "5616": 1, "568": 75, "569": 75, "57": [1, 33, 52, 76], "572": [14, 38], "578": [29, 52], "58": [33, 35, 52, 76], "587": 57, "588": [33, 52], "59": 38, "59203700000000126": [25, 52], "595": 35, "597": 35, "599": 75, "5cm": 55, "5th": 67, "6": [1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 73, 75, 76, 77, 79, 81], "60": [1, 12, 18, 27, 28, 29, 33, 35, 38, 52, 71, 76], "600": [33, 52], "6008": 21, "601": 75, "605": 35, "61": [29, 52], "610783": [29, 52], "61111111111111": 35, "612": [29, 52], "6126cm": 55, "616": [33, 52], "6180339887253428": [11, 35], "618033988749894": [11, 35], "618033988749895": [11, 35], "618033988749896": [11, 35], "6180339887592732": [11, 35], "62": [35, 52], "621": 75, "62370": [38, 68], "625": 35, "627": 52, "63": [21, 27, 33, 36, 43, 52, 76], "630": [38, 68, 76], "64": [22, 27, 28, 29, 33, 35, 38, 41, 43, 50, 52, 60, 76], "644": 35, "65": [27, 33, 34, 35, 38, 52, 71, 76, 79], "6505": 52, "65535": 22, "65536": [22, 35], "6561": [29, 52], "66": [14, 16, 35, 38, 52, 57, 68], "66000": 35, "666": [38, 51], "667": 35, "668": 35, "6680419999999998": [25, 52], "67": [18, 33, 38, 52], "677": 35, "68": [33, 35, 52, 76], "6846846846847": 35, "68689": [29, 52], "687": 35, "69": [33, 35, 38, 52, 59], "693": [27, 52], "6930": [38, 68], "698670612749268": 35, "7": [1, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 66, 67, 68, 69, 71, 73, 75, 76, 77, 79], "70": [27, 28, 33, 35, 38, 52, 76, 79], "704": [14, 38], "7081": 35, "7092753594": 35, "71": [32, 52], "711111111111": 13, "712483534798848": 35, "72": [29, 33, 35, 52, 76], "720": [33, 52], "727": 75, "728": [27, 29, 52, 75], "73": [29, 38, 52], "7319819819820": 35, "7320508075688772": [11, 35], "7320508075688774": [11, 35], "74": 35, "740": 75, "75": [14, 18, 21, 27, 33, 35, 38, 52, 68, 79], "7524cm": 55, "7533": 38, "756": [33, 52], "76": 76, "765": [33, 52], "77": [33, 36, 38, 52, 76], "773": 35, "7741": 78, "77640": 35, "778914049184": 35, "78": [14, 33, 35, 38, 52, 68, 76], "784": [33, 52, 76], "792": 76, "7e": [27, 52, 76], "7f00ff": 39, "7fff00": 39, "8": [1, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 55, 57, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 79], "80": [28, 33, 35, 52, 76], "802": 75, "803": 52, "8060634335": 35, "809": 57, "81": [29, 33, 35, 38, 52, 76], "82": [33, 52], "820": 35, "83": [27, 35, 52], "83205": 76, "833333333333333": 35, "84": [28, 29, 33, 38, 52, 76, 79], "844": [33, 52], "8458": 52, "849": 75, "85": [27, 35, 52, 76], "853": 52, "855": 35, "857": 38, "86": 35, "8660254037": 35, "866025403784439": 35, "867": 75, "87": [35, 76], "88": [52, 55], "88169588": 20, "88704000": [33, 52], "89": [29, 35, 38, 52], "891": [27, 52], "9": [1, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 71, 73, 75, 76, 79], "90": [29, 33, 35, 38, 52, 54, 68, 76], "900": 35, "902": [35, 36], "9024": 35, "9032119259": 35, "904": [33, 52], "905": 38, "91": [52, 54, 76], "91679746": 20, "92": [35, 54], "924": 28, "93": [35, 54], "931": [29, 52], "936": [33, 52], "93harary_graph": [33, 52], "93horton_graph": [33, 52], "94": 54, "9413cm": 55, "9437cm": 55, "945": [38, 68], "946": 75, "94800": 35, "95": [35, 52, 54, 76], "951": [35, 57], "9593": 35, "96": [27, 33, 35, 52, 54, 76], "97": [1, 29, 35, 52, 54], "9714": 38, "98": [29, 35, 52, 54, 76], "9819819819820": 35, "99": [18, 35, 38, 54, 57, 76], "990": [38, 68], "999": 56, "9997956006500042": [11, 35], "9998043797692782": [11, 35], "9999": [25, 35, 52], "9z": [29, 52], "A": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 52, 55, 56, 57, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80], "AND": [11, 40], "AS": [27, 52, 76], "AT": [2, 38], "And": [9, 20, 25, 29, 35, 38, 45, 52, 61, 62, 63, 64, 67, 77], "As": [1, 5, 6, 8, 9, 10, 11, 12, 17, 18, 19, 20, 22, 23, 25, 30, 32, 33, 35, 38, 39, 41, 42, 45, 52, 55, 64, 66, 76], "At": [4, 20, 21, 29, 32, 33, 35, 45, 52, 55, 59, 71], "Be": [38, 39, 59], "But": [4, 5, 8, 9, 17, 18, 20, 25, 30, 33, 35, 38, 52, 64, 76], "By": [1, 3, 9, 12, 14, 15, 18, 20, 22, 25, 27, 29, 32, 33, 35, 38, 39, 40, 42, 47, 52, 55, 69, 71, 75, 77], "For": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 46, 48, 49, 50, 52, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 76, 77, 81], "If": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 55, 56, 57, 58, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81], "In": [1, 3, 4, 5, 6, 8, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 43, 44, 45, 47, 49, 50, 52, 55, 57, 58, 63, 64, 66, 67, 69, 70, 71, 73, 76, 77], "It": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 76, 77, 79, 80, 81], "Its": [7, 25, 27, 30, 33, 47, 52, 62, 71, 76], "NO": [27, 52, 55, 76], "NOT": [35, 37, 62, 64, 67], "No": [9, 10, 12, 35, 67], "Not": [3, 4, 28, 35, 38, 80], "ON": 37, "OR": 37, "Of": [3, 4, 17, 19, 35, 39, 45], "On": [4, 12, 30, 35, 38, 43, 47, 50, 52, 58, 76], "One": [1, 14, 20, 27, 29, 33, 35, 38, 42, 50, 52, 61, 66, 67, 71, 73, 76, 79], "Or": [1, 18, 29, 35, 38, 52, 62, 71], "Such": [12, 17, 18, 19, 20, 23, 33, 35, 38, 39, 50, 52, 66, 75, 76], "That": [4, 9, 20, 23, 28, 32, 33, 35, 38, 39, 41, 45, 49, 52, 59, 69, 77], "The": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81], "Their": [1, 33, 52], "Then": [11, 13, 22, 29, 32, 33, 35, 38, 39, 45, 46, 52, 59, 67, 69, 71], "There": [4, 11, 18, 19, 20, 21, 29, 32, 33, 35, 38, 41, 52, 55, 56, 64, 69, 73, 76], "These": [11, 17, 20, 21, 22, 27, 28, 29, 33, 35, 38, 39, 43, 50, 52, 55, 57, 73], "To": [1, 4, 11, 13, 17, 19, 20, 21, 28, 29, 33, 35, 38, 40, 49, 50, 52, 55, 60, 62, 69, 70, 75, 76], "WITH": 37, "With": [3, 20, 21, 25, 29, 35, 36, 38, 52, 55, 57, 62, 70, 73, 80], "_": [1, 4, 5, 8, 12, 16, 17, 18, 20, 21, 23, 26, 27, 28, 29, 30, 32, 35, 36, 38, 42, 48, 49, 50, 52, 54, 55, 56, 59, 64, 67, 69, 71, 75, 77], "_1": [27, 50, 52, 76], "_2": [27, 52, 76], "_3": 76, "_4": 76, "__": [38, 42], "___": [38, 42], "____": [38, 42], "_____": [38, 42], "______": [38, 42], "_______": [38, 42], "________": [38, 42], "_________": [38, 42], "___parallel": 38, "___wmjfcahwzeba": 56, "__eq__": 35, "__getitem__": 48, "__graphlatex_opt": 55, "__gwmkecahkgtlerqa": 56, "__hash__": 67, "__init__": 35, "__o": 36, "__seri": 38, "__tmp__": [14, 35, 38], "_a": 39, "_backend": [4, 6, 7, 37], "_bc": 35, "_bit_vector": 21, "_block": 1, "_both_": 35, "_c": 36, "_cg": [4, 7], "_cg_rev": 4, "_circle_embed": 35, "_class": 62, "_color_by_label": [35, 57], "_compute_coordin": 74, "_d": 35, "_direct": 8, "_dw": 36, "_egk": [33, 52], "_embed": [35, 72], "_first_ngen": 12, "_g": [33, 36, 50, 52], "_g_": [33, 52], "_gc_id": 62, "_hkih": 35, "_i": [11, 35], "_immut": 35, "_inclus": 62, "_inclusion_digraph": 62, "_is_valid_lex_bfs_ord": 48, "_j": 76, "_latex_": 55, "_layout_bounding_box": 35, "_line_embed": 35, "_match": 67, "_n": 50, "_name": 1, "_o": 36, "_option": 55, "_p": 50, "_pc": [33, 52], "_po": 35, "_q": [28, 52], "_qo": 36, "_realiz": 74, "_repr": 55, "_skf": 56, "_sporadic_graph_databas": 28, "_ssjdapcoig": 56, "_subgraph_by_delet": 67, "_unicode_art_matrix": 35, "_x": 73, "a000055": [29, 52], "a000084": [16, 52], "a000088": 52, "a000112": 21, "a000171": 35, "a000273": 21, "a000666": 52, "a001349": 52, "a002851": 52, "a003086": 35, "a005142": 52, "a033995": 52, "a054581": 52, "a081621": 52, "a1": [20, 21, 35, 38], "a113201": 52, "a1tal_graph": [33, 52], "a2": [20, 35, 38], "a3": 35, "a5": 35, "a_": [29, 38, 40, 42, 52], "a_0": [29, 38, 42, 52], "a_1": [30, 33, 52, 67], "a_16": [33, 52], "a_2": [30, 52, 67], "a_c": 36, "a_i": [29, 30, 32, 33, 52], "a_j": [33, 52], "a_matrix": 20, "a_n": [30, 52], "a_nonsquare_matrix": 20, "a_nonsymmetric_matrix": 38, "a_seidel_matrix": 38, "a_symmetric_matrix": 38, "aa": [11, 18, 21, 35, 36], "aag": 35, "aaoaa": 36, "aaoaacd": 36, "ab": [1, 11, 13, 20, 21, 35, 38, 67], "abc": [1, 35, 38, 55, 69], "abcad": 56, "abcdefghi": 35, "abcdefghijklmnopqrstuvwxyz": [20, 38], "abcdefghiklm": 3, "abcdefguvwxyz": 48, "abd": 3, "abdhaeh_": 56, "abl": [3, 26, 36, 43, 50, 52, 62], "about": [4, 10, 17, 20, 21, 25, 28, 29, 33, 35, 37, 40, 46, 48, 51, 52, 55, 62, 64, 68], "abov": [1, 9, 11, 13, 20, 22, 27, 28, 29, 30, 32, 35, 38, 39, 50, 52, 55, 57, 64, 66, 67, 73, 75], "absenc": 52, "absent": 52, "absolut": 35, "abstract": 52, "abz2007": 38, "ac": [1, 12, 36], "ac_g": 36, "acac": [33, 52], "accept": [12, 18, 20, 27, 35, 40, 52, 57, 64, 67], "access": [8, 18, 21, 33, 35, 40, 52, 62], "accessor": 62, "accomplish": [35, 55], "accord": [1, 4, 17, 18, 20, 22, 26, 27, 33, 35, 38, 39, 41, 45, 46, 52, 55, 57, 58, 66, 69, 70, 73, 76, 77, 80, 81], "accordingli": [35, 38, 39, 49, 55, 81], "account": [4, 10, 12, 20, 22, 32, 35, 36, 38, 52, 58, 75], "accur": [29, 35, 52], "accustom": 55, "acflss04": [12, 38], "achiev": [20, 29, 35, 36, 37, 38, 43, 47, 50, 52, 62], "achrs2008": 38, "across": [35, 80], "act": [24, 35, 36, 37, 38, 70, 76], "action": [33, 52, 70, 76], "activ": [4, 5, 8, 48], "active_edg": 48, "active_vertic": [4, 5, 8], "actor": 35, "actual": [1, 4, 5, 8, 11, 18, 19, 20, 22, 25, 30, 33, 35, 38, 39, 43, 45, 46, 50, 52, 55, 58, 60, 61, 64, 68, 73, 76], "acycl": [1, 4, 18, 20, 21, 35, 36, 38, 39, 57, 62, 69], "acyclic_dummi": 35, "acyclic_edge_color": 39, "acyclic_orient": [38, 69], "ad": [3, 4, 5, 6, 8, 12, 17, 19, 20, 21, 25, 29, 31, 32, 35, 38, 39, 40, 46, 49, 52, 55, 56, 66, 67, 76, 77, 79], "ad2010": [29, 52], "ada": 35, "adam": 47, "adapt": [38, 69], "add": [4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 21, 22, 23, 25, 27, 29, 31, 32, 35, 36, 38, 39, 40, 44, 51, 52, 55, 57, 58, 59, 61, 67, 74, 75, 77], "add_arc": [4, 5, 8], "add_arc_label": [4, 8], "add_arc_unsaf": 4, "add_child": 16, "add_cliqu": [18, 20, 35, 38, 67], "add_cycl": [35, 36, 38, 42, 67], "add_ear": 67, "add_edg": [1, 3, 4, 5, 6, 8, 10, 11, 12, 18, 20, 22, 23, 25, 26, 35, 37, 38, 42, 48, 49, 50, 52, 54, 55, 57, 58, 59, 63, 66, 67, 75, 77, 79, 80], "add_package_to_preamble_if_avail": 55, "add_path": [18, 19, 35, 36, 38, 49, 66, 67], "add_usepackag": 35, "add_vertex": [4, 5, 6, 8, 10, 12, 18, 22, 25, 35, 38, 42, 49, 52, 67, 69], "add_vertex_unsaf": 4, "add_vertic": [4, 6, 10, 12, 22, 35, 67], "addit": [2, 7, 9, 18, 25, 33, 35, 38, 47, 52, 55, 59, 67, 68], "addition": 55, "additive_gap": [38, 59], "address": [8, 11], "adher": 35, "adj": [4, 20], "adjac": [1, 3, 5, 6, 9, 10, 12, 20, 21, 22, 23, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 41, 44, 45, 47, 52, 54, 64, 76, 81], "adjacency_matrix": [11, 20, 21, 25, 29, 35, 38, 41, 52, 54], "adjacneci": 38, "adjlist": 35, "adjust": [27, 32, 38, 52, 54, 55], "admiss": [1, 35, 38, 39, 41, 69, 73], "admit": [27, 35, 38, 39, 52, 67], "adopt": 67, "advanc": [25, 29, 35, 40, 52], "advantag": [11, 25, 52, 62], "advic": 40, "aeb": [29, 33, 52, 76], "af": 56, "affect": [35, 38, 57], "affin": [27, 29, 30, 33, 52, 76], "affinegeometrydesign": 1, "affineorthogonalpolargraph": [27, 30, 52], "africa": [34, 38, 52], "africamap": [34, 38, 52], "african": [34, 38, 52], "after": [1, 11, 13, 16, 20, 23, 25, 28, 29, 32, 33, 35, 38, 39, 41, 52, 55, 56, 67, 70], "ag": [1, 33, 36, 52], "again": [4, 12, 22, 23, 29, 35, 38, 41, 45, 52, 70], "agre": [16, 29, 35, 52], "ahk1994": [29, 52], "ahkos2014": [29, 52], "ahrensszekeresgeneralizedquadranglegraph": [27, 52, 76], "ai": [33, 52], "aiaswhycd": 35, "aid": 38, "aim": 50, "aj": 21, "aka": [33, 38, 52, 66, 67], "akgsao": 38, "aki1980": 39, "al": [38, 62], "alain": 55, "alaska": [34, 52], "albert": [32, 52], "albrecht": [33, 52], "ald1990": [38, 75], "aldou": [38, 75], "alexand": [33, 52], "alexandr": [20, 35, 38, 71], "alfr": [33, 52], "algebra": [35, 76], "algeria": [34, 52], "algo": 35, "algorithm": [1, 4, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 42, 44, 46, 47, 48, 49, 52, 56, 57, 59, 61, 62, 64, 66, 67, 68, 69, 71, 73, 75, 77, 78, 79, 80, 81], "alia": [20, 35, 38, 69], "alias": [18, 35], "align": [29, 52, 73], "alignat": [43, 50], "alist": [12, 67], "all": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "all_arc": [4, 8], "all_cliqu": [15, 38], "all_cycles_iter": 20, "all_graph_color": 39, "all_max_cliqu": 15, "all_of": 40, "all_on": 38, "all_pairs_shortest_path_bf": 22, "all_path": [35, 71], "all_paths_iter": [35, 71], "all_simple_cycl": 20, "all_simple_path": [35, 71], "alloc": [4, 5, 8, 11, 22], "allow": [1, 3, 4, 5, 6, 8, 9, 10, 12, 18, 20, 21, 22, 26, 30, 35, 38, 40, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 71, 73, 79], "allow_disconnect": 35, "allow_loop": [9, 12, 18, 35, 38, 42, 57, 67, 75], "allow_multiple_edg": [9, 12, 18, 35, 38, 42, 58, 63, 66, 67, 75], "allows_loop": [10, 35, 67], "allows_multiple_edg": [20, 35], "almost": [9, 35, 52], "alon": [36, 41, 55], "along": [1, 4, 12, 26, 33, 35, 38, 41, 52, 55, 64, 67, 71], "alpha": [25, 28, 35, 38, 52, 65, 77], "alpha_1": [38, 39], "alpha_i": [38, 39], "alpha_in": 28, "alpha_k": [38, 39], "alphabet": 21, "alreadi": [4, 5, 8, 11, 12, 14, 17, 19, 20, 22, 35, 38, 39, 40, 41, 43, 50, 52, 62, 67, 77], "also": [1, 3, 4, 5, 8, 9, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 52, 55, 57, 58, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80], "alter": 67, "altern": [1, 19, 21, 25, 28, 29, 33, 35, 38, 41, 52, 62, 63, 66, 67, 70, 73], "alternatingformsgraph": [28, 52], "alternatinggroup": 35, "although": [1, 8, 20, 22, 35, 38, 39, 71, 76], "alwai": [3, 4, 5, 12, 17, 18, 19, 20, 21, 25, 27, 29, 35, 38, 39, 41, 48, 52, 64, 67, 69, 71], "am": [35, 38, 52, 64], "amanda": 38, "ambient_dim": 35, "among": [3, 12, 14, 18, 20, 22, 32, 33, 35, 38, 43, 46, 49, 50, 52, 55, 59, 66, 67, 75, 76, 77], "amort": [35, 38, 69], "amount": [11, 22, 32, 52, 64], "amoz2006": [38, 69], "ampli": [28, 52], "amritanshu": 38, "amstext": 35, "an": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "an_edg": 49, "an_el": 32, "an_equivalence_class": 17, "analog": 67, "analysi": 38, "analyz": [3, 35], "ander": [29, 35, 38, 52], "andri": [27, 29, 30, 33, 52, 76], "angl": [25, 29, 35, 52, 55], "ani": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 43, 45, 46, 47, 49, 50, 52, 54, 55, 56, 57, 59, 64, 66, 67, 69, 70, 73, 74, 75, 76, 79, 80], "annoi": 40, "annual": [33, 52], "anoth": [9, 12, 16, 19, 22, 25, 27, 29, 32, 33, 35, 36, 38, 52, 56, 59, 62, 69, 76], "another_digraph": 20, "another_graph": 38, "answer": [1, 9, 11, 17, 19, 20, 22, 35, 38, 45, 62, 64], "anticompon": 38, "anticonnect": 38, "anticycl": 81, "antihol": [38, 81], "antipod": [22, 25, 28, 38, 52], "antipodal_graph": [22, 38], "antisymmetr": 35, "anu": 60, "anymor": [19, 30, 35, 52], "anyth": [4, 10, 11, 21, 30, 35, 38, 52, 60, 69], "ao": 36, "ap2024": 46, "apart": [3, 19, 22, 29, 38, 52, 59], "aperiod": 20, "aperiodic_graph": 20, "apex": [38, 62], "apex_graph": 38, "apex_vertic": [38, 62], "api": 35, "appar": [6, 35], "apparently_feasible_paramet": 76, "appear": [1, 3, 4, 11, 12, 20, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 38, 41, 42, 45, 48, 49, 52, 55, 61, 62, 64, 73, 76, 77], "append": [4, 20, 25, 29, 31, 32, 35, 38, 46, 52, 56, 57, 67, 77, 78], "append_child": 74, "appli": [12, 22, 29, 30, 32, 35, 38, 40, 41, 50, 52, 55, 64, 70, 71, 73, 76, 80], "applic": [18, 35, 39, 80], "appolonian": 52, "approach": [27, 38, 52, 69], "appropri": [4, 11, 12, 20, 25, 27, 35, 38, 39, 52, 55], "approxim": [3, 13, 32, 33, 35, 38, 41, 52, 59], "approximation_factor": [38, 59], "ar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81], "araya": [33, 52], "araya_graph": [33, 52], "arbitrari": [3, 7, 8, 11, 12, 20, 21, 22, 27, 35, 38, 52, 67, 69, 77], "arbitrarili": [29, 35, 52, 55, 71], "arbor": [38, 39], "arboresc": [35, 75], "arc": [4, 5, 6, 8, 9, 11, 18, 20, 21, 27, 35, 38, 43, 44, 50, 52, 54, 62, 64, 70, 71], "arc_label": [4, 8], "archimedean": [33, 52], "are_equal_color": 38, "area": [32, 52, 55, 56], "arg": [6, 12, 35, 67, 79], "argument": [1, 3, 6, 11, 12, 18, 20, 21, 25, 29, 30, 31, 35, 38, 39, 40, 46, 49, 52, 56, 57, 60, 64, 67, 79, 80], "arithmet": [11, 33, 35, 52, 76], "arizona": [34, 52], "arm": [32, 52], "armanio": [33, 52], "around": [17, 22, 25, 35, 36, 48, 52, 55, 57], "arr": [28, 52], "arrai": [3, 4, 5, 8, 11, 22, 25, 28, 29, 30, 31, 32, 33, 35, 43, 50, 52, 56, 68, 76], "arrang": [18, 29, 33, 35, 38, 52], "arriv": 20, "arrow": [35, 57], "arrowhead": 55, "arrows": 57, "art": 55, "articl": [1, 3, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 32, 33, 35, 38, 39, 45, 49, 52, 61, 64, 65, 66, 69, 70, 71, 75, 77], "articul": [18, 20, 29, 52], "artsci": 40, "arxiv": 35, "as_graph": [16, 52], "asc": 38, "ascend": 52, "ascii": [20, 38], "ascii_art": [38, 42], "ask": [9, 20, 23, 32, 35, 38, 39, 52, 55, 59, 66, 69, 80], "aspect": [35, 38, 55], "assert": [1, 29, 32, 35, 38, 52, 67], "assertionerror": 46, "assign": [1, 16, 18, 20, 21, 25, 32, 35, 38, 39, 52, 69, 71, 77], "assist": [29, 52], "assmu": 1, "associ": [3, 4, 11, 13, 17, 18, 19, 20, 21, 22, 29, 30, 32, 33, 35, 38, 39, 40, 45, 47, 49, 52, 55, 57, 62, 64, 67, 69, 70, 74, 76], "assum": [2, 4, 5, 6, 11, 12, 18, 19, 20, 27, 35, 38, 39, 43, 46, 49, 50, 52, 57, 59, 64, 66, 69, 70, 73, 75, 76], "assumpt": [23, 38, 76], "ast": [29, 52], "asteroid": [0, 38], "asteroidal_tripl": [2, 38], "asymptot": 37, "at_fre": [2, 62], "atla": [33, 52], "atlasrep": [28, 52], "atom": [33, 38, 42, 49, 52], "atoms_and_clique_separ": [38, 42, 49], "attach": [21, 23, 29, 32, 35, 52, 76], "attain": [32, 52], "attempt": [12, 17, 32, 33, 43, 45, 50, 52, 73, 76], "attent": [35, 64], "attenu": 35, "attract": [33, 52], "attribut": [4, 6, 7, 20, 35, 38, 39, 49, 69, 70, 72, 74], "au": 60, "augment": [21, 35, 38, 52], "augsburg": 4, "ausland": 20, "auslander_reiten_quiv": 20, "auslanderreitenquiv": 20, "aut": [35, 40, 52, 76], "aut_gen": 52, "aut_grp": 40, "aut_grp_siz": 40, "author": [1, 11, 12, 14, 15, 17, 20, 21, 22, 23, 25, 26, 28, 29, 33, 35, 36, 38, 39, 40, 45, 46, 47, 48, 51, 52, 53, 55, 56, 58, 59, 63, 64, 65, 66, 67, 68, 71, 73, 74, 78, 79, 81], "auto": [20, 38, 52], "automat": [1, 3, 12, 14, 20, 35, 38, 52, 55, 58, 71, 75, 76, 79], "automorph": [1, 28, 29, 32, 33, 35, 38, 52, 76], "automorphism_group": [1, 21, 25, 29, 33, 35, 52, 76], "auxiliari": [29, 32, 38, 52, 81], "avail": [1, 3, 4, 7, 11, 12, 17, 18, 20, 21, 29, 30, 33, 34, 35, 38, 40, 47, 49, 52, 54, 55, 56, 57, 62, 69, 70], "averag": [3, 32, 33, 35, 38, 52, 69, 71], "average_clustering_coeffici": 3, "average_degre": [35, 38, 40], "average_dist": 35, "avoid": [2, 4, 11, 14, 15, 18, 19, 20, 22, 26, 35, 38, 39, 52, 58, 69, 77, 80], "aw2006": 47, "awai": [5, 8, 25, 52, 57], "awar": [38, 39, 59], "awesom": 38, "ax": [11, 35, 57], "axi": [29, 36, 52, 55], "azarija": 79, "aztec": [29, 52], "aztec_diamond": [29, 52], "aztecdiamondgraph": [29, 52], "b": [1, 3, 4, 6, 8, 9, 10, 11, 12, 16, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 42, 45, 47, 48, 52, 57, 58, 59, 61, 62, 64, 66, 67, 68, 69, 71, 75, 76, 77, 79, 80], "b1": [21, 33, 52], "b163": [33, 52], "b2": [12, 18, 35], "b3": 12, "b6tzsch_graph": [33, 52], "b_": [17, 20, 29, 35, 38, 52, 66], "b_0": [22, 29, 38, 52], "b_1": [17, 30, 52, 67], "b_2": [30, 52, 67], "b_color": 39, "b_dict": [38, 69], "b_e": [35, 38, 66], "b_i": [17, 22, 28, 29, 30, 32, 38, 52], "b_j": [1, 32, 52], "b_k": 17, "b_n": [30, 52], "b_ooscge_": 56, "b_u": [12, 23, 35, 38], "b_v": [12, 19, 23, 35, 38], "b_x": [12, 23, 35, 38, 66], "ba": [21, 32, 52, 56], "bab": [38, 50], "back": [35, 38, 39, 45, 52], "backbon": [32, 52], "backend": [0, 4, 5, 8, 20, 35, 38], "background": [35, 57], "backslash": [19, 41, 43, 47, 50, 76], "backtrack": [35, 36, 38, 39, 70, 75], "backtrack_bound": 36, "backward": 35, "bad": [17, 35, 39], "bad_nam": 55, "baer": 1, "bag": [38, 49, 50], "balaban": [33, 52], "balaban10cag": [33, 52], "balaban11cag": [33, 52], "balaban_10": [33, 52], "balaban_11": [33, 52], "balanc": [1, 29, 32, 52], "balanced_incomplete_block_design": 1, "balancedincompleteblockdesign": 1, "balancedtre": [29, 35, 52, 62], "ball": [25, 29, 33, 52], "bandwidth": [0, 3, 38], "bandwidth_heurist": [3, 41], "bar": [29, 35, 52, 73], "barabasi": [32, 52], "barbel": [29, 52], "barbellgraph": [20, 29, 38, 52, 56], "barerra": 55, "barrier": [32, 38, 52, 66, 67], "barycent": 58, "base": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 29, 33, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 55, 57, 60, 61, 62, 66, 67, 68, 69, 73, 74, 78, 79, 80], "base_r": [12, 35, 38], "basi": [3, 35, 38, 55], "basic": [0, 3, 4, 11, 18, 20, 23, 29, 33, 35, 38, 44, 52, 59, 76], "basis_as_vector": 35, "batagelj": 38, "bb": [18, 21, 35], "bb2005a": [32, 52], "bbc2000": [18, 38], "bbhp2004": [38, 77], "bc": [1, 56], "bc2018": 38, "bccm": [38, 59], "bccm2015": [38, 59], "bcehkl_bikm_bfghi": 56, "bch2002": 52, "bcm15": 13, "bcms1988": [29, 52], "bcn1989": [27, 28, 33, 38, 52], "bcrer_graph": [33, 52], "bd": 1, "bdhpr2019": [23, 38], "bdm": 60, "be1992": 76, "bean": 38, "beauti": [33, 52], "becam": [33, 52], "becaus": [3, 4, 5, 6, 8, 13, 20, 22, 25, 28, 29, 32, 35, 36, 38, 40, 41, 43, 45, 50, 52, 54, 55, 76], "becom": [1, 4, 8, 16, 20, 27, 32, 33, 35, 38, 52, 76], "been": [1, 4, 11, 14, 17, 19, 20, 21, 22, 24, 29, 33, 34, 35, 37, 38, 39, 41, 42, 43, 47, 49, 50, 52, 55, 59, 67, 70, 76, 77], "beezer": [29, 33, 38, 52, 55], "befor": [1, 4, 10, 19, 20, 21, 35, 36, 38, 48, 52, 55, 69, 76], "begin": [1, 5, 8, 11, 20, 21, 22, 29, 33, 35, 38, 43, 48, 50, 52, 55, 60, 77], "behav": [1, 12, 35, 36, 38, 45, 52, 55, 59, 64, 69], "behavior": [35, 40, 52], "behaviour": [20, 21, 35, 38, 49, 52, 56], "behind": 67, "bei1970": 64, "beinek": 64, "being": [9, 19, 20, 29, 30, 32, 33, 35, 36, 37, 38, 39, 46, 52, 61, 62, 64, 65, 66, 67, 68, 69, 76, 77], "believ": [33, 52], "bell": [29, 52], "bellman": [3, 35], "belong": [1, 2, 10, 17, 19, 20, 22, 23, 28, 35, 38, 41, 44, 46, 48, 55, 64, 67, 70, 73], "below": [1, 3, 4, 12, 18, 20, 22, 25, 29, 30, 31, 33, 35, 38, 42, 45, 50, 52, 55, 57, 62, 66, 80], "benefit": 62, "bent": [25, 52], "bentwonk": 58, "benzen": 52, "benzenoid": 52, "berg": [1, 55, 62], "besid": [20, 33, 35, 39, 43, 50, 52, 59], "best": [18, 19, 20, 32, 35, 37, 38, 43, 50, 52, 55, 59, 77], "beta": 28, "beta_in": 28, "better": [3, 29, 33, 35, 38, 41, 52, 59, 64], "between": [0, 2, 3, 4, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 25, 27, 29, 32, 33, 34, 35, 38, 42, 45, 46, 47, 49, 52, 54, 55, 56, 57, 59, 69, 70, 71, 74, 76, 77, 80], "betweenness_centr": 13, "bevel": 55, "bewar": [1, 12, 17, 20, 35, 38, 62, 69], "beyond": 55, "bf": [2, 4, 11, 13, 20, 22, 35, 38, 59, 70, 77], "bf2001": [32, 52], "bf_": 56, "bfs_bid": 35, "bfse": 13, "bg": [12, 38, 40, 75], "bg2": 12, "bgcolor": 35, "bgm2012": 52, "bgw": [33, 52], "bh2012": [1, 27, 29, 52, 76], "bhkp2008": 24, "bi": [33, 52], "bi1984": 76, "bibd": [1, 29, 52], "bibd_45_9_8": 76, "bicircul": [29, 52], "biconnect": [3, 9, 18, 26, 32, 33, 35, 38, 39, 42, 52, 59, 62, 67], "biconnected_graph": 38, "bicorn": [29, 52, 67], "bicorngraph": [29, 52], "bicrit": [38, 66, 67], "bicub": [32, 33, 52], "bicycl": [33, 52], "bidiaki": [33, 52], "bidiakis_cub": [33, 52], "bidiakiscub": [33, 52], "bidirect": [4, 20], "bidirectional_dijkstra": 4, "bidirectional_dijkstra_speci": 4, "big": [25, 28, 52, 55], "big1993": 35, "bigg": [33, 52], "bigger": [13, 21, 27, 38, 52], "biggssmithgraph": [33, 52], "biject": [29, 52], "bilinear": [28, 52], "bilinearformsgraph": [28, 52], "binari": [1, 8, 9, 11, 12, 17, 21, 23, 28, 29, 32, 33, 35, 36, 38, 50, 52, 66, 67, 70, 73], "binary_matrix": 9, "binary_matrix_t": 5, "binary_string_from_dig6": 36, "binary_string_from_graph6": 36, "binary_string_to_graph6": 36, "binarygolaycod": 76, "binarytre": [32, 62], "binom": [13, 28, 35, 36, 38, 52], "binomi": [9, 11, 21, 28, 35, 38, 52], "binomialrandomuniform": 60, "bint": 8, "bip_id": 62, "bip_one_four": 49, "bip_one_four_td": 49, "bipartit": [0, 1, 11, 17, 18, 21, 25, 28, 29, 32, 33, 35, 38, 39, 41, 47, 52, 62, 63, 66, 67, 69, 70], "bipartite_color": 38, "bipartite_doubl": 38, "bipartite_double_cov": 38, "bipartite_graph": 12, "bipartite_set": [35, 38, 66, 67], "bipartitegraph": [12, 35, 38, 52, 67], "birk": [38, 52, 81], "birkhoff": [33, 52], "bishop": [26, 52], "bishop_radiu": [26, 52], "bishopgraph": [26, 52], "bisimpl": 38, "bisimplici": 38, "bisubdivid": 67, "bisubdivide_edg": 67, "bisubdivis": 67, "bit": [4, 13, 19, 22, 29, 38, 44, 50, 52, 64, 70], "bitset": [4, 5, 7, 9, 19, 38, 41, 49], "bitset_list": 11, "bitset_t": [4, 5, 8, 11], "bitwis": [29, 52], "biwheel": [29, 52, 67], "biwheelgraph": [29, 52, 67], "bk1973": 38, "bl": 58, "bl1977": 47, "bl1984": [27, 29, 52, 76], "black": [8, 33, 38, 52, 55, 57, 74], "blah": 35, "blanklin": 35, "blanusa": [33, 52], "blanusa_snark": [33, 52], "blanusafirstsnarkgraph": [33, 52], "blanusasecondsnarkgraph": [33, 52], "bliss": [12, 14, 29, 35, 52], "block": [1, 3, 18, 29, 30, 32, 33, 35, 38, 52, 60, 62, 67, 76], "block_design": 1, "block_graph": [32, 38, 52], "block_matrix": 1, "block_siz": 1, "blockdesign": 1, "blocks_and_cut_vertic": [3, 18, 32, 35, 38, 52, 62], "blocks_and_cuts_tre": [18, 32, 35, 38, 52, 62], "blondin": [20, 35, 71], "blossom": [32, 52], "blossoming_contour": [32, 52], "bls1999": 38, "blue": [32, 35, 52, 74], "bm1983": 46, "bm2004": 35, "bm2007": 52, "bm2008": 35, "bmod": [26, 52], "bo": [12, 38, 75], "bobbi": 38, "bober": 74, "bod1998": 50, "bodi": 22, "bodlaend": 50, "bolivia": [34, 52], "bolloba": 38, "bond": [18, 33, 52], "book": [29, 33, 38, 45, 52, 67, 75], "bool": [12, 17, 20, 35, 67], "boolean": [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81], "boolean_answ": 1, "booleanlattic": [20, 36], "boost": [0, 18, 20, 35, 38, 41], "boost_graph": [3, 18, 20, 35, 38], "boothbi": [33, 35, 38, 39, 52, 68], "bor1995": 35, "borassi": 59, "border": [34, 35, 52, 55], "boruvka": [35, 75], "both": [1, 4, 8, 10, 12, 17, 18, 19, 21, 22, 23, 26, 33, 35, 38, 39, 40, 45, 46, 49, 50, 52, 54, 57, 64, 67, 70, 77, 80], "bother": 37, "bottom": [25, 29, 33, 35, 52, 55, 57, 58], "bound": [3, 8, 9, 11, 13, 15, 20, 22, 29, 32, 35, 36, 37, 38, 39, 43, 49, 52, 55, 59, 61, 69, 71, 76], "boundari": [34, 35, 38, 46, 52, 63, 74], "bounded_outdegree_orient": [38, 69], "bouvier": [38, 46, 48], "bowti": [25, 29, 52], "box": [35, 55], "boyer": [0, 35], "bp": [52, 55], "bps2010": [38, 42, 77], "brace": 67, "brace_generation_sequ": 67, "bradshaw": 36, "braid": [17, 30, 38, 52], "branch": [15, 20, 35, 38, 57], "brandes01": 13, "bre2000": 74, "bre2008": 38, "breadth": [4, 13, 19, 20, 22, 35, 38, 70, 77], "breadth_first_level_search": 70, "breadth_first_search": [4, 35], "break": [1, 21, 33, 35, 38, 40, 41, 52, 66, 67], "brendan": [35, 52, 60], "brice": 58, "brick": [29, 33, 38, 52, 66, 67], "brick_generation_sequ": 67, "bricks_and_brac": 67, "bridg": [18, 35, 38], "bridgeless": [35, 38, 69], "brief": 35, "brigham": 40, "bring": 70, "brinkmann": [33, 52], "brinkmann_graph": [33, 52], "brinkmanngraph": [33, 52], "brittl": 62, "bro1982": 76, "bro1989": [38, 75], "bro2011": 38, "bro2016": [27, 52], "broad": 55, "broder": [38, 75], "broder2000": [3, 22], "broken": [18, 35, 38], "bron": 38, "brouwer": [27, 29, 30, 33, 52, 76], "brouwerhaemersgraph": [27, 33, 52], "browser": [35, 58], "bruijn": [21, 22, 35, 50], "brute": [35, 36], "bseta": 35, "bsetb": 35, "bsg": 35, "bt": [35, 37], "bubbl": [29, 52], "bubblesort": 52, "bubblesortgraph": [29, 37, 52], "bucki": [33, 52], "buckl": 47, "buckminst": 52, "buckminsterfulleren": [33, 52], "buckybal": [33, 35, 52], "buckygen": 52, "bug": [38, 47, 68], "buggi": 38, "build": [0, 1, 4, 6, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 43, 45, 50, 52, 60, 64, 76], "built": [4, 17, 20, 21, 26, 27, 28, 29, 30, 32, 33, 34, 35, 52, 55, 60, 62, 76], "bull": [17, 25, 38, 52, 62], "bull_graph": [25, 52], "bullgraph": [3, 17, 25, 38, 52], "bunch": 4, "butterfli": [4, 21, 25, 29, 52], "butterfly_graph": [25, 52], "butterflygraph": [3, 4, 18, 20, 21, 23, 25, 29, 35, 38, 52, 55], "bw": [3, 38, 40, 41, 75], "bwi": 75, "by_compon": [35, 36, 57], "by_weight": [3, 4, 20, 35, 38, 71, 75], "bypass": [20, 38, 57, 71], "byproduct": 41, "byte": 22, "bz2003": 38, "c": [0, 1, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 29, 33, 35, 36, 38, 39, 40, 42, 43, 45, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 70, 71, 73, 75, 76, 77, 79, 80], "c1": [11, 18, 35, 38], "c14": [27, 52, 76], "c2": [11, 18, 35, 38, 52], "c3": [33, 52], "c3c5": [29, 52], "c4": [18, 38, 52], "c5": 35, "c6": 38, "c6bar": 67, "c7": [32, 35, 52], "c8": [29, 52], "c_": [13, 28, 36, 40, 52, 56], "c_1": [3, 18, 20, 35, 38, 73], "c_2": [3, 18, 20, 35], "c_3": [25, 29, 35, 38, 52], "c_4": 67, "c_5": [1, 35, 38, 39], "c_6": [33, 38, 52, 67], "c_7": 38, "c_d": 28, "c_eccentricity_dhv": 22, "c_ggg": 56, "c_graph": [4, 7, 37], "c_i": [18, 20, 22, 28, 35, 38, 50, 77], "c_j": [18, 20], "c_k": 73, "c_oeikoec": 35, "c_r": 38, "c_w": 40, "c_x": 73, "ca": [33, 38, 40, 50, 52], "cach": [14, 19, 35, 38, 55, 62, 68, 79], "cachedrepresent": 62, "cactu": 38, "cactus_graph": 38, "cage": [33, 52], "cai": [29, 52], "caifurerimmerman": [29, 52], "caifurerimmermangraph": [29, 52], "caitlin": 38, "cal": 50, "calcul": [4, 23, 25, 32, 35, 39, 47, 52], "call": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 17, 18, 19, 20, 21, 22, 24, 25, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 46, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 62, 63, 64, 66, 67, 73, 75, 76, 80], "calssicalparametersgraph": 28, "cam": 12, "came": [27, 52], "cameron": [33, 52], "camerongraph": [33, 52], "cameroon": 38, "can": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 80], "can_be_reached_from": 11, "canaug_travers": 52, "canaug_traverse_edg": 52, "canaug_traverse_vert": 52, "cancel": 38, "candi": [29, 52], "candid": 71, "cannot": [1, 3, 4, 6, 11, 12, 17, 18, 21, 22, 29, 35, 36, 38, 39, 40, 41, 43, 47, 50, 52, 59, 62, 67, 69, 70, 76], "canon": [1, 12, 14, 35, 38, 52, 66, 67], "canonical_label": [1, 12, 14, 29, 35, 52], "canonical_partit": 67, "canva": 51, "caogo": 36, "cap": [1, 22, 30, 38, 43, 49, 50, 52, 67, 76], "capac": [35, 38, 69], "capit": [34, 52], "captur": [21, 29, 52, 60, 67], "carbon": [33, 52], "cardin": [1, 12, 18, 19, 20, 21, 23, 25, 29, 32, 33, 35, 36, 38, 39, 44, 49, 52, 60, 61, 63, 66, 67, 73, 76, 77], "care": [1, 11, 35, 38, 55], "carefulli": 55, "carlo": 39, "carri": [27, 52], "cartesian": [20, 26, 29, 35, 38, 52, 67], "cartesian_product": [26, 35, 38, 45, 52, 67, 70], "carvalho": [33, 52], "case": [1, 3, 4, 5, 6, 8, 12, 15, 17, 18, 19, 20, 21, 22, 25, 28, 29, 30, 31, 32, 35, 37, 38, 39, 41, 43, 45, 46, 50, 52, 55, 59, 64, 66, 67, 69, 71, 73, 75, 76, 77, 80, 81], "cast": 39, "cat": 20, "categor": 35, "categori": [12, 64, 73], "categorical_product": 35, "caterpillar": [32, 52], "caus": [25, 29, 38, 40, 52], "caution": 1, "caw": 40, "caylei": [32, 35, 52, 76], "cayley_graph": 35, "cb": 40, "cbac_acd": 56, "cbg": 38, "cbl": 35, "cc": [33, 36, 38, 49, 52, 56, 59, 77], "cc1995": [29, 52], "ccba": 56, "ccccc": [33, 52], "ccl": [38, 59], "ccl2015": [38, 59], "cclsv2005": 38, "cd": 36, "cd2013": 76, "cdef": [3, 4, 5, 8, 11], "cdot": [17, 20, 22, 29, 32, 35, 38, 41, 42, 43, 45, 46, 50, 52, 66], "cell": [11, 26, 33, 35, 52, 55, 57], "cell120": [33, 52], "cell600": [33, 52], "center": [20, 23, 25, 29, 33, 35, 38, 46, 52, 55, 57, 58], "central": [0, 3, 29, 33, 35, 38, 52], "centrality_between": [13, 35, 38], "centrality_clos": [13, 35, 38], "centrality_closeness_random_k": 13, "centrality_closeness_top_k": [13, 35], "centrality_degre": [35, 38], "cert": [12, 17, 20], "certain": [29, 32, 35, 37, 38, 39, 52, 55, 57, 60], "certainli": 35, "certif": [1, 2, 4, 9, 12, 18, 20, 21, 35, 38, 39, 45, 49, 50, 59, 64, 66, 70, 81], "cf": [27, 35, 38, 40, 47, 52, 76], "cfhm2013": [29, 52], "cfi": [29, 52], "cfi1992": [29, 52], "cfklmpps15": 49, "cfkpr2010": [38, 39], "cfv0": 55, "cfv1": 55, "cfv10": 55, "cfv11": 55, "cfv12": 55, "cfv13": 55, "cfv2": 55, "cfv3": 55, "cfv4": 55, "cfv5": 55, "cfv6": 55, "cfv7": 55, "cfv8": 55, "cfv9": 55, "cg": [4, 36, 40, 56], "cg1": [25, 52], "cg2": [25, 52], "cg3": [25, 52], "cg_rev": 4, "cgb": 4, "cghlm2013": 22, "cgilm2010": [22, 38], "cglm2012": [3, 22], "cgmrv16": [38, 69], "cgraph": [4, 5, 8, 10], "cgraphbackend": [4, 5, 8, 10], "ch_": 40, "chad": [34, 52], "chain": [38, 46, 48], "chair": [25, 52], "chan": 20, "chanc": [32, 52], "chang": [4, 6, 12, 16, 18, 20, 22, 29, 33, 35, 38, 39, 41, 43, 45, 50, 51, 52, 57, 67, 75, 80], "chang_graph": [29, 38, 52], "change_label": 16, "change_r": 52, "chapter": [28, 35], "chapui": [29, 52], "char": 55, "char_poli": [33, 52], "charact": [20, 35, 38, 55], "character": [33, 38, 52, 67], "character_t": 35, "characteris": 38, "characterist": [12, 18, 25, 33, 35, 37, 38, 52], "characteristic_polynomi": [12, 25, 33, 35, 38, 52, 68], "charg": 58, "charpoli": [11, 25, 29, 33, 35, 52], "chd": 36, "cheap": [17, 38, 43, 50], "cheaper": [11, 38], "chebyshev_u": 12, "check": [1, 3, 4, 5, 6, 8, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 46, 49, 50, 52, 55, 56, 57, 62, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81], "check_algos_are_equival": 46, "check_aut": 52, "check_aut_edg": 52, "check_bipartit": [38, 39], "check_compon": [38, 39], "check_fil": 55, "check_hyperov": [27, 52], "check_input": 35, "check_overfull_kn_even": 38, "check_overfull_kn_odd": 38, "check_tkz_graph": [38, 48, 55], "check_tre": 78, "check_vertex": 4, "check_weight": [3, 20, 35, 38, 71, 75], "checkbox": 55, "cheeger": [38, 63], "cheeger_const": [38, 63], "cheng": 35, "cherri": 49, "cherry_td": 49, "chess": [26, 52], "chessboard": [0, 52], "chessboardgraphgener": [26, 52], "chi": [38, 39, 65], "chi_b": 39, "chi_f": [38, 39], "chik_": 56, "child": [4, 29, 46, 49, 52, 73, 74], "children": [3, 16, 35, 46, 49, 57, 73, 74], "children_node_typ": 46, "chnp2020": [33, 52], "choic": [20, 21, 29, 32, 35, 38, 41, 52, 55, 66, 67], "choos": [12, 13, 17, 20, 29, 31, 32, 35, 38, 52, 66, 67, 75, 77], "choosabl": 35, "chord": 35, "chordal": [0, 32, 33, 35, 38, 49, 52, 59, 62, 77], "chordal_graph": [32, 52], "chordless": 38, "chosen": [3, 9, 21, 22, 27, 28, 32, 33, 35, 38, 52, 57, 59, 77], "chr": [1, 35], "christoph": 38, "chromat": [0, 1, 25, 26, 29, 32, 33, 38, 39, 52, 65, 79], "chromatic_index": [38, 39], "chromatic_numb": [14, 25, 29, 32, 33, 38, 39, 52], "chromatic_polynomi": [14, 25, 38, 39, 52, 79], "chromatic_polynomial_with_cach": 14, "chromatic_quasisymmetric_funct": 38, "chromatic_symmetric_funct": 38, "chrompoli": [14, 25, 52], "chv": [33, 52], "chvatal": [9, 33, 38, 52, 69], "chvatalgraph": [9, 15, 33, 35, 38, 41, 52, 57, 69], "ci": 38, "cia": [34, 52], "cimport": 44, "circl": [25, 29, 33, 35, 52, 55, 57, 58], "circo": [35, 55, 57], "circuit": [3, 4, 13, 17, 18, 20, 21, 22, 35, 50, 54, 80], "circul": [21, 25, 29, 35, 52, 76], "circulant_graph": 35, "circulantgraph": [25, 29, 35, 38, 52], "circular": [4, 20, 25, 29, 33, 35, 38, 52, 56, 57, 66, 67], "circularladdergraph": [25, 29, 35, 38, 52, 66, 67], "circumscrib": 38, "citat": [29, 52], "cite": 22, "citi": [4, 34, 52], "cj": 40, "cjg": 40, "ck": 40, "ck2008": 77, "ckwl2019": [33, 52], "cl": [1, 38, 40, 67], "cl1996": 52, "cl2002": 52, "claim": [33, 52], "class": [0, 1, 4, 5, 7, 8, 11, 12, 16, 18, 19, 20, 21, 23, 24, 27, 29, 33, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 52, 57, 60, 66, 67, 69, 73, 74, 78, 79], "classic": [0, 21, 22, 28, 29, 35, 52, 55], "classical_geometri": [27, 52], "classicalparametersgraph": 28, "classif": 71, "classifi": 71, "classmethod": 46, "classs": 38, "claud": 1, "claw": [25, 29, 32, 35, 38, 49, 52, 61, 62, 64, 76], "claw_td": 49, "clawfre": 62, "clawgraph": [25, 35, 38, 52, 61, 62, 64, 77], "clean": [20, 38, 40, 55, 59], "clear": [19, 25, 35, 36, 38, 52, 55, 67], "clearli": [20, 25, 35, 39, 52], "cleav": [18, 38], "clebsch": [9, 29, 33, 38, 52], "clebsch_graph": [33, 52], "clebschgraph": [9, 29, 33, 38, 52], "cleemput": [15, 52], "cleopatra": 12, "click": 35, "cliqu": [0, 3, 18, 19, 20, 21, 22, 27, 29, 32, 33, 35, 38, 39, 49, 52, 59, 61, 62, 64, 66, 67, 75, 76, 77], "clique_complex": 38, "clique_graph": 38, "clique_maximum": [30, 38, 52], "clique_numb": [15, 32, 38, 40, 52], "clique_partit": [27, 52], "clique_polynomi": 38, "clique_separ": 42, "cliquer": [0, 1, 12, 14, 25, 28, 29, 30, 32, 33, 38, 39, 49, 52], "cliques_containing_vertex": 38, "cliques_get_clique_bipartit": 38, "cliques_get_max_clique_graph": 38, "cliques_maxim": 38, "cliques_maximum": [15, 38], "cliques_number_of": 38, "cliques_vertex_clique_numb": 38, "cliquewidth": 62, "clm2006": [33, 52], "clockwis": [25, 32, 35, 52], "close": [3, 5, 13, 18, 23, 29, 30, 32, 33, 35, 38, 52, 57, 64, 80], "closer": 70, "closest": [23, 33, 35, 52], "closur": [19, 32, 35, 36, 38, 52, 67], "closv": 13, "clrs2001": 75, "clump": 36, "clust_of_v": 3, "cluster": [3, 32, 35, 52, 55], "cluster_transit": 35, "cluster_triangl": 35, "clustering_averag": 35, "clustering_coeff": [3, 35], "clv0": 55, "clv1": 55, "clv10": 55, "clv11": 55, "clv12": 55, "clv13": 55, "clv2": 55, "clv3": 55, "clv4": 55, "clv5": 55, "clv6": 55, "clv7": 55, "clv8": 55, "clv9": 55, "cm": 55, "cmd": 52, "cmn2014": 50, "cn": [40, 52], "co": [17, 35, 36, 38, 46, 57, 66], "coarser": 35, "coarsest": 35, "coarsest_equitable_refin": 35, "cocliqu": [28, 52, 76], "cocliques_hoffmannsingleton": [28, 52], "cocycl": [18, 38], "code": [1, 3, 7, 11, 12, 19, 22, 25, 26, 27, 28, 30, 33, 35, 38, 40, 44, 45, 47, 48, 52, 55, 57, 58, 59, 64, 68, 70, 76, 79], "codeword": [28, 52, 76], "codomain": 35, "coeffici": [3, 25, 27, 28, 35, 38, 39, 52, 66], "coffe": 38, "cog": 36, "cognetta": 52, "cograph": [0, 38, 52, 62, 67], "cographs_modul": 52, "coh1981": [27, 52], "cohen": [11, 15, 17, 22, 35, 36, 38, 39, 45, 47, 50, 52, 58, 62, 64, 73, 81], "coin": 21, "coincid": [21, 29, 32, 35, 38, 52], "col": 40, "col1": 40, "col2": 40, "collect": [1, 11, 18, 20, 29, 32, 35, 38, 46, 52, 64, 67, 73, 75], "collin": 38, "collinear": [27, 52], "color": [0, 1, 12, 17, 29, 32, 35, 38, 45, 51, 52, 55, 57, 58, 67, 71, 74], "color_by_label": [35, 55, 57, 74], "color_class": [38, 39], "colorado": [34, 52], "colour": 62, "column": [1, 12, 25, 29, 35, 38, 39, 40, 52, 73, 76], "com": [28, 35, 51, 52, 58], "combin": [29, 35, 38, 52, 59, 71], "combinat": [1, 10, 17, 20, 21, 22, 27, 28, 29, 30, 32, 35, 38, 50, 52, 58, 70, 76, 77, 80], "combinatori": [32, 35, 37, 52, 55, 72, 74], "come": [20, 29, 32, 35, 38, 47, 52, 76], "command": [21, 29, 35, 38, 40, 52, 55, 57, 58], "comment": [19, 52, 76], "commod": 35, "commodity_flow_problem": 35, "common": [0, 9, 17, 20, 25, 29, 33, 34, 38, 45, 57, 60, 64], "common_neighbors_matrix": 38, "commonli": [4, 38], "commut": [20, 33, 45, 52, 76], "compact": [0, 10, 11, 33, 35, 52], "compar": [0, 12, 18, 20, 22, 25, 29, 30, 31, 33, 35, 38, 47, 52, 57, 62, 71, 77, 80], "comparability_graph": 17, "comparison": [18, 22, 35, 38, 50, 59, 62, 80], "compass": 55, "compat": [4, 10, 35, 36], "compil": [0, 5, 8, 35, 38, 55], "complement": [1, 5, 9, 12, 17, 18, 19, 21, 22, 23, 25, 29, 33, 35, 38, 46, 47, 52, 61, 65, 67, 68, 76, 81], "complement_bipartit": [12, 38], "complement_graph6": 40, "complementari": [21, 29, 35, 52], "complementary_graph": 35, "complet": [1, 2, 9, 12, 15, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 42, 43, 49, 52, 60, 62, 63, 64, 67, 68, 69, 76, 77], "complete_bipartite_graph": [25, 38, 52, 67], "complete_graph": [25, 52], "complete_partial_funct": 35, "complete_poli": 68, "completebipartitegraph": [11, 12, 14, 18, 25, 33, 35, 38, 49, 52, 56, 63, 66, 67, 69], "completegraph": [2, 3, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 29, 31, 35, 37, 38, 39, 42, 43, 46, 49, 50, 52, 55, 56, 63, 64, 66, 67, 68, 69, 70, 71, 75, 77], "completemultipartitegraph": [25, 29, 38, 52], "completemultipartitesrg": 76, "completeuniform": 60, "complex": [2, 3, 5, 11, 16, 18, 19, 20, 22, 32, 35, 38, 39, 42, 46, 48, 52, 59, 62, 66, 69, 71, 75, 77], "complic": [3, 17, 35, 55], "compon": [2, 3, 4, 9, 11, 12, 14, 17, 18, 19, 20, 22, 25, 32, 35, 36, 38, 39, 42, 45, 46, 47, 49, 50, 52, 57, 59, 66, 67, 69, 77, 79, 80], "component_root": 46, "compos": [29, 52], "composit": 38, "compulsori": 52, "comput": [1, 2, 3, 7, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 79], "computation": [35, 39], "compute_depth_of_self_and_children": 74, "compute_number_of_descend": 74, "concentr": [29, 52], "concern": [16, 35], "concis": [29, 52], "conclud": 35, "condit": [1, 19, 21, 50, 59, 76], "conduct": [11, 20], "confer": 76, "configur": [35, 55], "conform": [33, 52], "confus": [29, 35, 38, 52], "cong": [12, 35], "congruent": [21, 29, 52], "conic": [27, 52], "conjectur": [33, 39, 52], "conjunct": [33, 52], "connect": [0, 1, 2, 3, 4, 9, 11, 12, 13, 14, 17, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 45, 46, 47, 49, 50, 52, 57, 58, 59, 60, 64, 66, 67, 69, 74, 75, 77, 79], "connected": 38, "connected_compon": [9, 11, 18, 20, 35, 38, 49, 67, 77], "connected_component_containing_vertex": [18, 34, 35, 52], "connected_components_numb": [18, 35, 38, 66], "connected_components_s": [18, 35], "connected_components_subgraph": [18, 35, 38, 59], "connected_dominating_set": [23, 35], "connected_full_subgraph": 9, "connected_graph": [18, 35], "connected_subgraph_iter": [9, 35], "connecting_nod": [32, 52], "connectivity_": [18, 35], "conp_certif": [38, 66, 67], "consecut": [16, 21, 32, 33, 35, 38, 43, 45, 50, 52, 73, 77], "consequ": [3, 6, 22, 35, 45, 59, 67, 70], "conserv": 20, "consid": [1, 3, 4, 9, 10, 18, 19, 20, 22, 23, 27, 33, 35, 37, 38, 39, 40, 41, 42, 43, 46, 48, 49, 50, 52, 54, 59, 61, 69, 71, 73, 75, 76, 77, 80], "consider": [4, 32, 35, 52, 64], "consist": [5, 12, 20, 21, 28, 29, 32, 33, 35, 38, 39, 40, 46, 52, 55, 57, 60, 67, 74, 77], "constant": [20, 22, 29, 38, 43, 49, 50, 52, 59, 63, 78, 80], "constitu": 67, "constitut": [28, 39, 52, 67], "constrain": [21, 38, 67], "constraint": [12, 19, 20, 23, 29, 35, 38, 39, 40, 41, 43, 50, 52, 60, 61, 69, 73], "constraint_gener": [20, 35], "construct": [1, 16, 17, 18, 20, 21, 22, 25, 27, 28, 29, 30, 31, 33, 35, 38, 39, 40, 52, 55, 66, 76, 80, 81], "constructor": [6, 12, 20, 21, 25, 29, 32, 33, 35, 40, 48, 52, 54, 57, 60, 67], "consult": [17, 55], "consum": [20, 22, 33, 35, 38, 52, 80], "consumpt": [18, 38], "cont_africa": [34, 52], "cont_europ": [34, 52], "contain": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 49, 50, 52, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 71, 73, 75, 76, 77, 80, 81], "content": [55, 58, 62], "contest": [33, 52], "context": [33, 52, 79], "contigu": [11, 38, 42, 73], "continent": [4, 34, 38, 52], "continu": [33, 35, 36, 43, 50, 52, 73], "contour": [32, 52], "contract": [14, 35, 38, 67, 70, 79], "contract_edg": [35, 67], "contracted_edg": 79, "contradict": [45, 70], "contradictori": 17, "contrari": 17, "contrast": [32, 52], "contribut": [33, 52], "control": [36, 50, 55, 62], "conveni": [1, 35, 55], "convent": [9, 18, 25, 29, 33, 35, 38, 52], "converg": [11, 35], "convers": [13, 35, 36, 39], "convert": [3, 15, 18, 22, 35, 36, 38, 40, 46, 52, 54, 55, 56, 65, 68, 75, 77], "convert_empty_dict_labels_to_non": [20, 38, 54], "convex": [0, 20, 35, 38], "convexity_properti": [19, 38], "convexityproperti": [19, 38], "conwai": [28, 52], "conwaysmith_for_3s7": [28, 52], "coo2006": 76, "cool": 35, "coordin": [20, 25, 27, 29, 30, 32, 34, 35, 38, 45, 52, 55, 57, 74, 76], "copi": [1, 4, 9, 11, 16, 18, 20, 21, 22, 23, 25, 29, 33, 35, 36, 38, 42, 45, 49, 51, 52, 55, 57, 66, 67, 69, 73, 75, 77, 81], "copy_tre": 16, "core": 38, "corneil": [38, 46], "corneil_habib_paul_tedd": [38, 46], "corneil_habib_paul_tedder_algorithm": [38, 46], "corner": [25, 29, 33, 35, 45, 52], "corollari": [38, 45, 66, 76], "correct": [1, 17, 18, 19, 22, 24, 27, 28, 30, 33, 35, 38, 40, 44, 52, 64, 70, 76], "correct_anws": [35, 77], "correctli": [29, 35, 52, 57, 70], "correl": [25, 52], "correlationgraph": [25, 52], "correspond": [1, 3, 11, 12, 18, 19, 20, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 37, 38, 39, 43, 45, 46, 47, 48, 50, 52, 54, 55, 57, 60, 62, 64, 66, 67, 69, 70, 76, 77], "corrupt": [20, 38], "coset": [28, 52, 76], "cospectr": [29, 52], "cospectral_graph": 52, "cossident": [27, 52], "cossidentepenttila": 76, "cossidentepenttilagraph": [27, 52, 76], "cost": [7, 19, 22, 35, 38, 41, 43, 50, 75], "costli": 11, "cotre": [16, 52], "coucou": 35, "coudert": [21, 22, 26, 29, 38, 43, 50, 52, 53, 59, 64, 81], "could": [4, 8, 11, 12, 22, 30, 33, 35, 38, 39, 40, 43, 45, 50, 52, 55, 62, 64, 68, 76], "count": [4, 10, 20, 23, 29, 32, 33, 35, 36, 37, 38, 43, 44, 52, 61, 69, 75, 78], "count_onli": 39, "counter": [16, 18, 29, 32, 38, 52], "counterclockwis": [25, 29, 33, 52], "counterexampl": [33, 52], "countri": [4, 34, 52], "coupl": [35, 57], "cours": [4, 17, 19, 35, 38, 39, 45, 52, 55, 67], "cover": [0, 1, 12, 28, 33, 35, 38, 39, 52, 62, 66], "coxet": [29, 33, 52], "coxeter_graph": [33, 52], "coxetergraph": [33, 52], "cp": [19, 38], "cp2005": [27, 52], "cp2016": 76, "cplex": [1, 38], "cputim": [25, 52], "cpw": 40, "cpython": 52, "cqo": 40, "crash": [38, 47], "crazi": [38, 64, 68], "creat": [3, 4, 5, 6, 8, 11, 12, 14, 17, 20, 21, 22, 25, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 45, 46, 52, 55, 56, 57, 58, 61, 64, 67, 69, 79], "create_leaf": 46, "creation": [12, 29, 30, 32, 36, 52], "cremonarichmondconfigur": 1, "criterion": 45, "critic": [1, 38, 66, 67], "critical_graph": [38, 66], "cross": [30, 33, 35, 52, 55, 76], "cross_polytop": 35, "crossing_numb": [33, 35, 52], "crs2016": [33, 52], "crst2006": 38, "cruz": 55, "cs2022": 38, "csdp": [38, 65], "ctan": 55, "cube": [0, 22, 28, 29, 31, 33, 35, 38, 52], "cubeconnectedcycl": [29, 48, 52], "cubegraph": [4, 12, 14, 22, 23, 25, 29, 35, 38, 52, 57, 69, 70], "cubeplex": [33, 52, 67], "cubeplexgraph": [33, 52, 67], "cubic": [22, 29, 31, 32, 33, 38, 46, 52, 66, 67], "cuboctahedron": 35, "cumul": [35, 57], "cup": [1, 2, 12, 18, 22, 38, 49, 50, 67, 69, 77], "cup_": 38, "curiou": [5, 8], "current": [4, 6, 8, 12, 15, 18, 19, 20, 21, 22, 24, 32, 33, 35, 38, 39, 43, 46, 47, 50, 52, 54, 55, 57, 59, 62, 67, 69, 73, 76, 77, 81], "current_alloc": [4, 5, 8], "current_randst": [32, 52], "curv": [55, 58], "custom": [35, 38, 55, 75], "cut": [3, 13, 18, 32, 35, 38, 43, 49, 50, 52, 59, 66, 67], "cut_": 35, "cut_edg": 52, "cut_identifi": 67, "cut_off": [38, 43, 50], "cut_vari": 67, "cut_vert": 52, "cut_vertex": [18, 35], "cut_vertic": [18, 38], "cuthil": 3, "cuthill_mcke": 3, "cutoff": [4, 32, 35, 37, 52], "cutwidth": [0, 38], "cutwidth_dyn": 43, "cutwidth_milp": 43, "cv0": 55, "cv0v1": 55, "cv0v13": 55, "cv0v2": 55, "cv0v5": 55, "cv1": 55, "cv10": 55, "cv10v11": 55, "cv11": 55, "cv11v12": 55, "cv12": 55, "cv12v13": 55, "cv13": 55, "cv1v10": 55, "cv1v2": 55, "cv2": 55, "cv2v3": 55, "cv2v7": 55, "cv3": 55, "cv3v12": 55, "cv3v4": 55, "cv4": 55, "cv4v5": 55, "cv4v9": 55, "cv5": 55, "cv5v6": 55, "cv6": 55, "cv6v11": 55, "cv6v7": 55, "cv7": 55, "cv7v8": 55, "cv8": 55, "cv8v13": 55, "cv8v9": 55, "cv9": 55, "cv9v10": 55, "cw": [20, 38, 40, 43, 54], "cw_l": 43, "cwe": 43, "cycl": [1, 3, 4, 9, 12, 17, 18, 19, 20, 25, 26, 28, 29, 32, 33, 35, 36, 38, 39, 43, 45, 46, 49, 50, 52, 55, 59, 63, 66, 67, 69, 70, 77, 79, 81], "cycle1": [38, 66], "cycle2": [38, 66], "cycle_basi": [3, 35], "cycle_graph": [25, 29, 52], "cycle_to_vector": 35, "cycle_tupl": [29, 52], "cyclegraph": [1, 3, 9, 12, 13, 14, 17, 18, 19, 20, 21, 23, 25, 26, 29, 32, 33, 35, 38, 39, 43, 45, 46, 49, 50, 52, 56, 59, 63, 65, 66, 67, 69, 70, 77, 80, 81], "cycles_b": 20, "cyclic": [1, 29, 32, 33, 35, 38, 52, 74], "cyclicpermutationgroup": 35, "cyfunct": 76, "cyril": [38, 46, 48], "cython": [0, 3, 4, 7, 8, 9, 10, 20, 22, 35, 38, 44, 45, 61, 68], "cython_cod": 44, "cythonif": 36, "cz": 40, "d": [1, 3, 4, 5, 8, 10, 11, 12, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 46, 47, 48, 50, 52, 53, 54, 57, 58, 59, 62, 63, 66, 67, 69, 70, 71, 75, 76, 77, 79, 80], "d0d3": 52, "d1": [22, 32, 35, 38, 52, 59], "d12": 35, "d2": [22, 35, 38, 52, 59], "d3": [0, 22, 35, 38, 59], "d3j": 58, "d4": [22, 35, 38, 59], "d5": [35, 38, 52, 59], "d6": [35, 36, 52], "d7": 35, "d8": 35, "d_": [3, 19, 38], "d_1": 38, "d_4": [33, 52], "d_5": [33, 52], "d_6": [33, 52], "d_7": [33, 52], "d_g": [22, 38, 41, 45], "d_h": 45, "d_i": 38, "d_k": 40, "d_n": 38, "d_u": [20, 35], "d_v": [20, 35], "da": 38, "da3305": 35, "dag": [20, 21], "dahi": [38, 64], "dai": [37, 38], "damp": 35, "danc": [38, 39], "dangl": 35, "dart": [25, 37, 52], "dartgraph": [25, 52, 56], "darwin": 52, "dash": [35, 57], "dashdot": 57, "data": [0, 1, 3, 6, 9, 10, 12, 16, 18, 20, 21, 22, 25, 34, 35, 38, 39, 40, 48, 49, 52, 54, 56, 67, 69, 73], "data_structur": [9, 10, 20, 35, 38, 69], "data_to_degseq": 40, "databas": [1, 21, 29, 52, 57, 62], "database_graph": [28, 29, 35, 38, 52, 56, 76], "databasegraph": 62, "david": [1, 12, 21, 22, 26, 29, 33, 38, 43, 46, 47, 50, 52, 53, 59, 64, 70, 81], "db": [21, 22, 35, 40, 62], "dbg": 40, "dbk": 40, "dbw": 40, "dcycl": [20, 35], "dd": 35, "de": [21, 22, 35, 50, 62], "de_bruijn_graph": 21, "deal": [5, 7, 8, 19, 22, 35, 64, 81], "dealloc": 10, "debruijn": [10, 17, 20, 21, 22, 35, 50, 58, 70, 77, 80], "debug": [21, 29, 46, 52, 60], "decad": 50, "decagon": [33, 52], "decid": [11, 20, 29, 49, 52, 64], "deciph": [25, 52], "decis": 20, "declin": [11, 20], "decod": [29, 36, 52], "decomp": [38, 50], "decompos": [18, 35, 38, 49], "decomposit": [0, 18, 20, 35, 38, 39, 43, 50, 64, 67, 77], "decomposition_tre": [38, 47], "decor": 35, "decreas": [23, 26, 35, 52, 59, 77], "decreasingli": 22, "dedic": [18, 35], "deduc": [38, 41, 47, 49, 62], "deep": 35, "deeper": [33, 52], "def": [4, 20, 29, 33, 35, 38, 52, 69, 75, 78], "defaul": 46, "default": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81], "default_edge_color": 51, "default_plot_opt": 57, "default_radiu": 51, "default_show_opt": 57, "default_vertex_color": 51, "default_weight": 35, "defin": [1, 3, 4, 6, 10, 12, 13, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 52, 55, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 73, 76, 77, 79], "definecolor": 55, "definit": [1, 9, 10, 12, 14, 17, 19, 20, 22, 25, 30, 32, 33, 35, 38, 39, 40, 45, 46, 47, 48, 52, 58, 59, 67], "deg": 37, "deg_sequ": 52, "degener": [27, 52], "degeneraci": 38, "degeneracy_": 38, "degre": [1, 3, 4, 5, 6, 8, 9, 10, 11, 13, 18, 20, 21, 22, 23, 26, 29, 32, 33, 35, 36, 37, 38, 39, 40, 42, 45, 47, 48, 52, 60, 63, 64, 67, 68, 69, 77, 79], "degree_constrained_subgraph": [38, 67], "degree_histogram": [29, 32, 35, 38, 52], "degree_iter": [20, 35], "degree_max": [23, 35], "degree_min": [23, 35], "degree_polynomi": 20, "degree_sequ": [29, 32, 33, 35, 38, 40, 52, 66], "degree_to_cel": 35, "degrees_sd": 40, "degreesequ": 52, "degreesequencebipartit": 52, "degreesequenceconfigurationmodel": 52, "degreesequenceexpect": 52, "degreesequencetre": 52, "degseq_to_data": 40, "dejter": [33, 52], "dejter_graph": [33, 52], "dejtergraph": [33, 52], "del1972": 76, "del_all_arc": [4, 5, 8], "del_arc_label": 4, "del_arc_unsaf": 4, "del_edg": [4, 5, 6, 10], "del_vertex": [4, 5, 6, 8, 10], "del_vertex_unsaf": 4, "del_vertic": [4, 6, 10], "delecroix": [1, 63], "deleg": [7, 55], "delet": [3, 4, 6, 10, 12, 14, 18, 20, 21, 32, 33, 35, 38, 52, 67, 68, 79], "delete_edg": [15, 18, 35, 38, 67], "delete_multiedg": [35, 67], "delete_vertex": [12, 26, 33, 35, 38, 52, 67], "delete_vertic": [12, 32, 35, 38, 42, 52, 66, 67], "delimit": 35, "delta": [29, 38, 39, 50, 52, 59], "delta_1": 76, "delta_ub": [38, 59], "demand": 62, "demey": 15, "demonstr": [35, 36, 55], "denot": [3, 12, 22, 23, 29, 30, 32, 33, 35, 37, 38, 39, 45, 47, 50, 52, 65, 67, 68, 77], "dens": [0, 3, 4, 7, 10, 14, 20, 21, 22, 32, 35, 38, 52, 69], "dense_copi": 35, "dense_gnm_random_graph": [32, 52], "dense_graph": [4, 5, 7, 20, 38], "dense_graph_init": 9, "densegraph": [4, 5, 7, 19, 22, 35, 37, 38, 48, 69, 77, 81], "densegraphbackend": [4, 5, 7], "densest": 38, "densiti": [35, 38], "depart": 20, "depend": [1, 3, 4, 6, 12, 20, 22, 29, 32, 35, 38, 39, 45, 48, 52, 55, 57, 66, 68, 71, 77], "depth": [4, 11, 20, 29, 35, 38, 43, 46, 50, 52, 70, 74, 77, 81], "depth_first_search": [4, 35], "depth_first_travers": 70, "dequeu": 4, "deriv": [0, 4, 21, 39], "desai": 59, "desargu": [29, 33, 52], "desarguesgraph": [33, 52], "desarguesianprojectiveplanedesign": 1, "descend": [11, 20, 27, 38, 52, 74, 76], "describ": [1, 7, 9, 11, 12, 18, 20, 23, 25, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 43, 46, 47, 48, 50, 52, 55, 66, 69, 70, 73, 76, 77, 78, 79], "descript": [2, 20, 21, 28, 29, 30, 33, 35, 38, 40, 46, 48, 49, 52, 55, 75, 77], "design": [1, 3, 5, 8, 27, 29, 30, 32, 33, 35, 38, 52, 55, 57, 59, 76], "designhandbook": 76, "designtheori": 1, "desir": [20, 21, 29, 31, 32, 35, 52, 62], "destin": [35, 54, 58, 64, 71], "destroi": [5, 8, 35], "destruct": 38, "det": [25, 35, 52], "detail": [2, 3, 5, 8, 12, 14, 16, 19, 21, 22, 25, 27, 28, 29, 32, 33, 35, 36, 38, 39, 40, 42, 43, 45, 46, 49, 50, 51, 52, 66, 71, 73, 76, 77], "detect": [16, 20, 38, 62], "determin": [4, 8, 12, 17, 19, 20, 22, 25, 27, 29, 30, 32, 35, 38, 39, 43, 50, 52, 55, 57, 59, 67, 71, 72, 74, 76, 77], "determinist": [35, 54], "develop": [5, 8, 15, 33, 40, 52], "deviat": 71, "devis": [29, 52], "devoid": 67, "df": [4, 11, 20, 24, 35, 70, 77], "dfs_preprocess": 24, "dfse": [11, 20], "dfw": 75, "dg": [5, 20, 21, 35, 40, 71], "dg2006": [38, 49], "dhv": [22, 38], "di": [0, 3, 4, 9, 11, 12, 13, 18, 19, 20, 21, 22, 29, 35, 36, 38, 45, 50, 52, 53, 54, 57, 64, 80], "diagon": [3, 25, 26, 28, 29, 33, 35, 38, 41, 52, 76], "diagram": [20, 21], "diamet": [3, 10, 20, 21, 22, 25, 27, 28, 29, 32, 33, 34, 38, 40, 42, 49, 52], "diameter_dhv": [3, 38], "diamond": [22, 25, 29, 52, 55, 62, 64], "diamondgraph": [19, 20, 22, 25, 38, 52, 56], "dic": [32, 52], "dict": [4, 20, 26, 35, 38, 52, 54, 55, 57, 62], "dict_of_dict": [20, 38], "dict_of_list": [20, 38], "dictionari": [1, 3, 4, 6, 11, 12, 13, 14, 20, 21, 22, 23, 25, 29, 32, 33, 34, 35, 38, 39, 40, 45, 46, 48, 52, 54, 55, 57, 58, 59, 62, 64, 69, 70, 79, 80], "did": [33, 52, 70], "differ": [1, 3, 4, 8, 9, 11, 12, 18, 19, 20, 21, 23, 25, 27, 28, 29, 30, 31, 33, 35, 38, 39, 43, 45, 48, 49, 51, 52, 55, 57, 59, 61, 67, 69, 70, 73, 76, 77], "differenti": [9, 38], "difficult": [37, 39], "difub": [3, 20, 22], "dig": 52, "dig6": [20, 35, 36, 54], "dig6_str": [20, 38, 54], "digit": [29, 33, 40, 52], "digraph": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 22, 23, 24, 35, 36, 38, 43, 44, 45, 48, 50, 52, 55, 57, 58, 62, 64, 65, 69, 70, 71, 76, 77, 80], "digraph6": 21, "digraph_gener": [20, 21], "digraphgener": 21, "dihedr": [33, 52], "dihedralgroup": [33, 52], "dijkstra": [3, 4, 13, 20, 35, 38, 55, 71], "dijkstra_bid": 35, "dijkstra_bid_networkx": 35, "dijkstra_boost": [3, 20, 35, 38], "dijkstra_networkx": [20, 35, 38], "dik": 40, "dim": [33, 35, 36, 52, 57], "dim_list": [25, 26, 52], "dima": [28, 52, 65], "dimens": [21, 25, 26, 27, 28, 29, 31, 33, 35, 38, 52, 55, 57, 69, 70, 76], "dimension": [3, 20, 21, 25, 26, 27, 29, 31, 33, 35, 38, 49, 52], "dimensionless": 55, "diminish": 49, "dingman": [8, 78], "dinversea": 52, "dipol": [18, 29, 38, 52], "dipolegraph": [29, 52], "dir": 35, "direct": [0, 3, 4, 5, 6, 8, 9, 10, 11, 17, 18, 21, 22, 23, 24, 29, 36, 37, 38, 40, 42, 43, 48, 49, 50, 52, 53, 54, 55, 57, 58, 64, 66, 69, 70, 71, 77, 80], "direct_product": 35, "directe": 4, "directed_cliqu": 35, "directed_cycl": 35, "directed_graph": 20, "directg": 21, "directli": [7, 11, 27, 29, 35, 38, 40, 46, 52, 62, 75, 76], "directori": 62, "diregular": 21, "disabl": [1, 12, 35, 38, 52, 75, 76], "disallow": [9, 18, 35, 38], "disc": 35, "discard": [1, 18, 20, 23, 33, 35, 36, 52], "disconnect": [4, 18, 19, 22, 32, 35, 36, 37, 38, 46, 49, 52, 63, 66, 67, 69, 75], "disconnected": 35, "discov": [43, 50], "discoveri": [35, 38, 42, 77], "discret": 35, "discrimin": [27, 35, 52], "discuss": [28, 52], "disjoint": [1, 4, 16, 18, 22, 23, 24, 29, 33, 35, 38, 52, 67, 70, 73, 75, 76], "disjoint_routed_path": 35, "disjoint_union": [16, 29, 35, 38, 52, 67], "disjointset": 75, "disjointset_of_hash": 75, "disjunct": [35, 67], "disjunctive_product": [35, 67], "disk": [29, 32, 52], "displai": [19, 21, 25, 29, 31, 33, 35, 38, 39, 40, 43, 44, 47, 48, 50, 51, 52, 55, 56, 57, 58, 59, 64, 81], "display_col": [35, 38, 40, 56], "display_opt": 51, "dist": [13, 22, 35, 38, 57, 59], "dist2": [33, 52], "dist_dict": [20, 38], "dist_g": [38, 49], "distanc": [0, 3, 4, 11, 13, 18, 19, 20, 23, 26, 27, 29, 32, 33, 34, 35, 36, 38, 41, 45, 49, 52, 55, 57, 58, 62, 70, 76], "distance_3_doubly_truncated_golay_code_graph": [28, 52], "distance_all_pair": 35, "distance_flag": 4, "distance_graph": [10, 22, 38], "distance_matrix": 35, "distance_regular": [28, 52], "distance_regular_graph": [28, 52], "distances_all_pair": [11, 20, 22, 35, 38, 45], "distances_and_predecessors_all_pair": 22, "distances_distribut": [22, 35], "distant": 35, "distinct": [1, 18, 20, 21, 29, 30, 32, 33, 35, 38, 43, 46, 52, 66, 67, 76, 79], "distinguish": [20, 29, 38, 52, 69], "distribut": [22, 32, 35, 38, 52, 55, 57, 59, 75], "ditto": 38, "divid": [13, 20, 22, 32, 33, 35, 38, 52, 59, 69, 71], "divis": [35, 38, 66], "divisorlattic": 35, "dj": [15, 38], "dk": 40, "dlg": 52, "dlo": 40, "dlx": [38, 39], "do": [1, 4, 5, 8, 17, 18, 19, 20, 21, 22, 29, 32, 33, 35, 37, 38, 39, 49, 50, 52, 55, 57, 60, 62, 67, 73, 76], "doabl": [29, 50, 52], "dobcsanyi": 1, "doc": [38, 81], "docstr": [21, 38, 40, 52], "doctest": [6, 15, 16, 38, 55, 57, 76], "document": [2, 3, 4, 5, 8, 11, 12, 17, 20, 21, 22, 27, 29, 32, 35, 38, 41, 43, 47, 49, 50, 52, 55, 56, 57, 58, 59, 60, 61, 62, 64, 69, 70, 73, 76, 77, 79], "dodecagon": [28, 52], "dodecahedr": [31, 36, 52], "dodecahedralgraph": [29, 31, 35, 36, 38, 52, 56, 57, 58, 72], "dodecahedron": [35, 52], "doe": [1, 3, 4, 7, 9, 10, 13, 16, 18, 19, 20, 21, 22, 23, 28, 30, 32, 35, 36, 38, 46, 50, 51, 52, 55, 57, 62, 63, 64, 66, 67, 75, 76, 81], "doesn": [1, 18, 20, 28, 29, 35, 38, 40, 52], "doi": 37, "dollar": 55, "dom": [23, 35, 38, 59], "domain": [19, 25, 35, 38, 52], "domin": [0, 3, 18, 20, 35, 38, 45, 59, 62, 66], "dominat": [23, 35], "dominating_set": [23, 35, 45], "dominator_": [3, 35], "dominator_tre": [3, 18, 20, 35], "don": [20, 29, 35, 37, 52, 56], "done": [3, 9, 12, 17, 18, 20, 21, 25, 27, 33, 35, 36, 38, 40, 43, 45, 49, 50, 52, 55, 58, 59, 61, 62, 67, 75, 77, 80, 81], "dore": [29, 52], "dorogovtsev": [29, 52], "dorogovtsevgoltsevmendesgraph": [29, 52], "dot": [4, 17, 20, 29, 32, 35, 36, 38, 39, 52, 55, 57, 79], "dot2tex": [20, 35, 38, 55], "dot2tex_pictur": 55, "dotspec": 35, "doubl": [11, 12, 13, 22, 28, 29, 33, 35, 36, 38, 52, 67], "doublegeneralizedpetersengraph": [29, 52], "doublegrassmanngraph": [28, 52], "doubleoddgraph": [28, 52], "doublestarsnark": [33, 52], "doubleton": [33, 52, 67], "doubli": [3, 28, 35, 38, 52, 74], "doubly_lexical_ord": 38, "doublytruncatedwittgraph": [28, 52], "doubt": [20, 35], "douleur": 64, "down": [20, 29, 32, 35, 38, 52, 55, 57, 77], "download": [35, 55, 62], "downward": 35, "doyl": [33, 52], "dp": 35, "dr": 52, "dragan2018": [3, 22, 38], "drake": 40, "draw": [25, 29, 30, 32, 33, 35, 38, 52, 55, 56, 57, 58], "drawback": 22, "drawn": [25, 29, 31, 32, 33, 35, 51, 52, 55], "drop": 35, "ds_": 52, "dsc": 35, "dsd": 38, "dsp": [27, 52], "dst": 11, "du": [27, 52, 76], "dual": [1, 27, 28, 31, 33, 35, 38, 39, 52, 76], "dualiti": [38, 39, 68], "due": [2, 4, 13, 27, 28, 29, 31, 33, 35, 36, 38, 52, 57, 76], "dummi": 20, "dump": 55, "duplic": [18, 20, 29, 50, 52], "dure": [4, 11, 12, 18, 20, 35, 36, 38, 39, 42, 43, 48, 50, 59, 69, 76, 77, 80], "durer": [33, 52], "durergraph": [33, 52, 61], "dutch": [29, 52], "duv1988": 21, "dvipng": 55, "dw": 40, "dyck": [33, 52], "dyck_graph": [33, 52], "dyckgraph": [33, 52], "dynam": [38, 43], "d\u00fcrer": [33, 52], "e": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 17, 18, 20, 21, 22, 25, 27, 28, 29, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81], "e1": 80, "e2": [33, 52, 80], "e_": [35, 38, 40], "e_1": [20, 35, 38, 64], "e_2": [20, 38, 64], "e_3": [20, 38, 64], "e_cg": 40, "e_cw": 40, "e_h": 9, "e_i": [35, 38], "e_j": 35, "e_ko": 40, "e_m": 38, "e_max": [11, 35], "e_min": [11, 35], "e_n": 35, "ea": 55, "each": [1, 2, 3, 4, 5, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 80], "ear": [38, 67, 79], "ear_decomposit": 38, "earlier": [35, 38], "easi": [7, 11, 22, 35, 38, 43, 47, 50, 64, 70], "easiest": [39, 55], "easili": [11, 17, 20, 22, 35, 38, 45, 61, 64, 68], "east": 55, "eb": [27, 52], "ec": 3, "ec1": 24, "ec2": 24, "ec3": 24, "ecc": [3, 22], "eccentr": [3, 20, 22, 33, 38, 52], "eccentricity_dhv": [3, 38], "echecakkqkfpowo": 56, "ed": 52, "edg": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81], "edge_attr": [20, 35, 38], "edge_boundari": 35, "edge_color": [1, 35, 38, 39, 55, 57], "edge_connect": [3, 18, 24, 35, 38, 40], "edge_cut": [35, 38], "edge_disjoint_path": 35, "edge_disjoint_spanning_tre": [24, 35, 75], "edge_fil": 55, "edge_fill_color": 55, "edge_isoperimetric_numb": [38, 63], "edge_iter": [18, 20, 29, 33, 35, 38, 39, 50, 52, 67, 69, 75], "edge_label": [11, 12, 18, 20, 35, 38, 54, 55, 57, 58, 67, 75], "edge_label_color": 55, "edge_label_plac": 55, "edge_label_slop": 55, "edge_labels_background": [35, 57], "edge_labels_math": 55, "edge_multipl": 79, "edge_opt": [35, 55, 57], "edge_partit": 58, "edge_polytop": 35, "edge_properti": 35, "edge_s": 35, "edge_selector": [38, 79], "edge_size2": 35, "edge_spac": 35, "edge_str": 35, "edge_styl": [35, 57], "edge_thick": [55, 57, 58], "edge_transit": 40, "edge_vector": 35, "edgedataview": 35, "edgelabel": 35, "edgeless": [20, 38], "edgelist": 35, "edges_incid": [10, 35, 39], "edges_onli": [9, 35], "edgeselect": 79, "edgesview": [35, 38, 66, 67, 80], "edgetyp": 70, "edi2014": 13, "edit": [38, 51, 52, 55], "editor": 0, "edmond": [12, 35, 38, 66, 67], "edoaeq": 38, "edq_": 52, "edu": [38, 39, 40, 60, 70], "educ": [21, 52], "edward": 52, "ee": 80, "effect": [1, 22, 31, 38, 52, 55], "effective_resist": 38, "effective_resistance_matrix": 38, "effici": [3, 8, 10, 11, 13, 18, 19, 20, 22, 25, 27, 35, 38, 52, 55, 68, 69, 70, 71, 81], "efficient_ear_decomposit": 67, "effort": 55, "efz_": [33, 52], "eg": [36, 40, 80], "eg1": [35, 71], "eg2": [35, 71], "ega1981": [29, 52], "egawa": [29, 52], "egawagraph": [29, 52], "egcw": 40, "egypt": [34, 52], "eh": 80, "eigenmatrix": 76, "eigenspac": [35, 76], "eigenvalu": [11, 33, 35, 52, 76], "eigenvalues_sd": 40, "eigenvector": 35, "eight": [38, 52, 67], "eighth": [33, 52], "einstein": 46, "eisermann": [38, 52, 81], "either": [1, 4, 5, 6, 12, 16, 17, 20, 21, 23, 26, 27, 29, 32, 33, 35, 38, 39, 40, 41, 42, 46, 48, 50, 52, 55, 64, 67, 72, 76, 77, 80], "either_connected_or_not_connect": 46, "elaps": 36, "elect": 45, "electr": 38, "element": [1, 4, 10, 11, 12, 17, 18, 19, 21, 22, 25, 27, 28, 29, 30, 32, 33, 35, 38, 39, 40, 41, 44, 45, 46, 47, 52, 55, 58, 59, 60, 61, 63, 64, 66, 69, 73, 76], "elementari": [7, 29, 35, 52], "elimin": [32, 35, 38, 39, 52, 77], "ell": 1, "ellingham": [33, 52, 67], "ellinghamhorton54graph": [33, 52, 67], "ellinghamhorton78graph": [33, 52], "ellipsi": [1, 20, 35, 38, 52, 64, 66, 67], "ellipsis_rang": [1, 20, 35, 38, 52, 64, 66, 67], "ellipt": [27, 52], "els": [4, 20, 21, 30, 32, 33, 35, 38, 39, 46, 52, 55, 60, 67, 69, 75], "elsewher": [38, 55], "em": [35, 55], "embed": [0, 25, 29, 31, 32, 33, 35, 37, 38, 52, 57, 70, 72], "embedd": [29, 52], "emili": [21, 38, 40, 52, 56, 74], "emmn1998": [33, 52], "emphas": [33, 52], "emploi": 55, "empti": [1, 2, 3, 4, 9, 11, 12, 15, 18, 20, 22, 23, 25, 27, 29, 32, 33, 35, 38, 39, 42, 46, 47, 49, 52, 54, 60, 63, 67, 71, 73, 75, 77, 80], "empty1": [25, 52], "empty2": [25, 52], "empty_graph": 49, "emptygraph": [9, 22, 25, 35, 38, 49, 52], "emptyset": [19, 30, 33, 38, 43, 50, 52, 77], "emptyseterror": [35, 52, 75, 76], "emul": [18, 35], "en": [35, 38], "enabl": [4, 17, 20, 32, 35, 38, 46, 52, 80], "enclos": [11, 20, 35, 38], "encod": [16, 19, 20, 22, 26, 29, 35, 36, 38, 50, 52, 73, 75, 76], "encount": [33, 52], "encourag": [5, 8], "end": [4, 11, 13, 20, 21, 25, 32, 33, 35, 36, 38, 43, 48, 50, 52, 54, 55, 63, 66, 67, 68, 71, 73, 77, 80], "end_point": 79, "ending_vertic": [35, 71], "endlessli": [35, 36, 38, 39], "endomorph": 35, "endow": [27, 52], "endpoint": [12, 30, 35, 38, 52, 58, 64], "energi": 40, "enforc": 35, "engin": [35, 55], "enhanc": 38, "enjeck": 12, "enough": [4, 26, 35, 38, 52, 68], "enqueu": 4, "enrich": 19, "ensur": [12, 17, 21, 25, 35, 38, 41, 43, 45, 52, 55, 59, 62, 67, 69, 70, 73, 75], "enter": [17, 20, 35, 38, 40, 71], "entir": [29, 35, 38, 39, 52, 55], "entitl": [35, 38], "entrant": [15, 38], "entri": [3, 11, 21, 27, 28, 29, 33, 35, 38, 39, 40, 41, 52, 62, 72, 76], "enum": [28, 44], "enumer": [0, 5, 7, 11, 19, 20, 23, 35, 36, 37, 38, 42, 45, 46, 55, 60, 61, 69], "environ": 55, "eo": 35, "ep": [35, 38], "ep__": 52, "epp2008": [38, 70], "eppstein": [12, 38, 70], "epsilon": [27, 52], "equal": [1, 3, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 43, 45, 47, 49, 50, 52, 55, 59, 60, 64, 68, 69, 70, 76, 77, 80], "equinumer": 20, "equit": 35, "equiv": [21, 26, 52], "equival": [9, 12, 17, 18, 20, 22, 29, 30, 31, 32, 33, 35, 37, 38, 39, 41, 45, 46, 49, 52, 66, 67, 73, 76], "equivalence_class": 17, "equivalent_construct": [28, 52], "equivalent_tre": 46, "er": 52, "er1959": [21, 32, 52, 53], "eras": 35, "ercg": 52, "erfurt": 4, "ernesto": 47, "errera": [33, 52], "errera_graph": [33, 52], "erreragraph": [33, 52], "error": [3, 4, 8, 12, 18, 20, 21, 22, 24, 29, 33, 35, 38, 46, 52, 55, 59, 60, 61, 67, 69, 75], "ert1979": 35, "escap": 38, "especi": [27, 29, 36, 38, 45, 52, 55], "essenti": [32, 38, 39, 52], "estim": [13, 35], "et": [38, 62], "etc": [21, 27, 35, 36, 38, 51, 59, 67, 69], "euclidean": [29, 30, 32, 52], "euler": [35, 37], "euler_characterist": 35, "eulerian": [25, 29, 33, 35, 38, 40, 52, 69], "eulerian_circuit": 35, "eulerian_orient": [38, 69], "europ": [34, 52], "european": [4, 34, 52], "europemap": [4, 34, 52], "evalu": [38, 43, 50, 76, 79], "even": [3, 9, 11, 13, 18, 19, 20, 22, 26, 27, 29, 30, 32, 35, 36, 38, 39, 42, 52, 64, 66, 67, 69, 70, 76], "evenli": [35, 57], "eventu": [18, 35, 55], "everi": [1, 2, 3, 4, 9, 11, 13, 16, 18, 19, 20, 21, 23, 25, 27, 29, 30, 32, 33, 35, 36, 38, 39, 45, 48, 49, 52, 55, 59, 64, 66, 67, 69, 70, 71, 73, 75, 76, 77], "everyon": [3, 35], "everyth": [9, 25, 33, 35, 38, 39, 45, 52, 58, 64, 81], "ex": 55, "exact": [13, 15, 20, 22, 33, 35, 38, 39, 50, 52, 55, 59], "exact_connect": 52, "exactli": [1, 3, 11, 18, 20, 21, 26, 29, 30, 33, 35, 38, 39, 45, 46, 47, 52, 64, 67, 69, 76, 77], "exactly_k": [9, 35], "examin": [29, 52], "exampl": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "exce": [38, 63], "except": [4, 7, 9, 10, 12, 20, 21, 22, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 52, 55, 57, 64, 67, 69, 73, 77], "exchang": [21, 76], "exclud": [4, 34, 35, 52], "exclude_edg": 4, "exclude_vertic": 4, "exclus": [12, 62, 67], "execut": [18, 33, 35, 36, 38, 40, 42, 52, 57, 59], "exemplifi": 40, "exgg": 52, "exhaust": [21, 29, 36, 38, 50, 52, 55, 59, 73], "exist": [1, 3, 11, 12, 17, 18, 19, 20, 22, 27, 28, 29, 30, 32, 33, 35, 38, 39, 43, 45, 46, 49, 50, 51, 52, 55, 57, 59, 62, 64, 66, 67, 69, 73, 75, 76, 77, 81], "exit": [35, 71, 79], "exog": 52, "exoo": 52, "exp": 38, "expand": [38, 55], "expans": 38, "expect": [1, 3, 8, 10, 11, 17, 22, 28, 29, 30, 32, 33, 35, 37, 38, 39, 50, 52, 70, 76], "expected_degre": [4, 8], "expens": [4, 19, 52], "experi": 47, "experiment": 3, "explain": [35, 38, 45, 66, 73, 76], "explan": [1, 5, 8, 17, 20, 29, 35, 38, 43, 50, 52, 55, 76], "explanatori": 4, "explicit": [1, 20, 38], "explicitli": [11, 12, 18, 29, 35, 38, 52, 56, 57, 76], "exploit": [19, 59], "explor": [9, 11, 20, 38, 43, 49, 50, 59, 61, 73, 76], "expon": [32, 52], "exponenti": [3, 20, 35, 37, 38, 39], "export": 35, "export_to_fil": 35, "expos": [29, 52, 66], "express": [12, 23, 29, 35, 38, 40, 52, 62, 66, 67], "ext": [35, 38], "extend": [4, 7, 10, 24, 25, 28, 35, 38, 41, 46, 48, 50, 52, 55, 62, 64, 67, 69, 73, 77], "extens": [4, 6, 14, 20, 35, 38, 56, 77], "exterior": 55, "extern": [29, 35, 52, 55, 57], "external_fac": [35, 57], "external_face_po": [35, 57], "extra": [5, 8, 18, 22, 29, 32, 35, 38, 52, 66, 76], "extra_vertic": [4, 5, 8], "extract": [24, 33, 52, 62], "extrem": [29, 33, 37, 43, 52], "ey": [33, 52], "ezcg": 52, "f": [1, 6, 9, 12, 18, 19, 20, 21, 27, 28, 29, 32, 33, 35, 37, 38, 40, 42, 48, 52, 56, 57, 64, 66, 67, 68, 69, 75, 76, 77], "f1": [18, 29, 38, 52], "f2": [18, 29, 38, 52], "f26a": [33, 52], "f26a_graph": [33, 52], "f26agraph": [33, 52], "f3": 52, "f_": [1, 27, 29, 40, 52], "f_1": [1, 29, 52], "f_2": [25, 29, 52], "f_i": [1, 38], "f_n": [29, 52], "f_nonsym": 38, "f_q": [27, 52, 76], "f_sym": 38, "fa": [38, 59], "fa_pw": [38, 40], "face": [20, 29, 31, 32, 33, 35, 37, 38, 52, 57], "facet": 38, "facial": [38, 52], "fact": [29, 35, 38, 45, 52, 55], "factbook": [34, 52], "factor": [3, 14, 20, 29, 33, 35, 38, 45, 48, 52, 59, 66, 67, 79], "factori": [12, 29, 52], "fag1983": 1, "fail": [4, 5, 8, 22, 35, 38, 39, 64], "failur": [29, 32, 40, 46, 52], "fairli": 35, "fake_label": 35, "fall": 19, "fals": [1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "famili": [0, 21, 28, 30, 32, 33, 38, 49, 52, 64, 67, 73], "familiar": [40, 57], "famou": [29, 33, 35, 52], "fan": [25, 35, 38, 52], "fano": [1, 60], "fano1": 1, "fano2": 1, "fano_block": 1, "far": [19, 22, 25, 32, 35, 36, 38, 50, 52, 55, 59], "fashion": [35, 57, 80], "fast": [0, 20, 22, 32, 35, 36, 38, 47, 52, 77], "fast_digraph": 44, "fast_gnp_random_graph": [32, 52], "fastdigraph": 44, "faster": [3, 7, 12, 14, 17, 20, 21, 27, 29, 32, 35, 37, 38, 39, 40, 45, 49, 50, 52, 59, 61, 77, 80], "fastest": [35, 67, 80], "fc": [29, 52], "fdp": [35, 55, 57], "feasibl": [35, 38, 43, 49, 76], "featur": [3, 35, 54, 55, 76], "februari": 52, "fed": 14, "feed": [22, 38, 54, 58, 64], "feedback": [20, 35], "feedback_arc_set": 20, "feedback_edge_set": 20, "feedback_vertex_set": 35, "feel": [25, 37, 52, 64], "feng": [35, 71], "feng2014": [35, 71], "feng_k_shortest_simple_path": 71, "feohw": [38, 40], "fetch": [35, 40, 58], "few": [22, 29, 33, 37, 38, 39, 41, 52], "fewer": [25, 39, 40, 52], "fewest": 67, "ff": [29, 35, 52], "ff0000": [35, 38, 39, 57], "ff9900": [35, 57], "ffff00": [35, 57], "ffffff": 35, "fg": [40, 67], "fg1965": 35, "fg_hijhkfldmkncojp_bq": 56, "fgc": [38, 40], "fh": 36, "fi": [12, 35], "fiaho": [38, 40], "fibonacci": [29, 52], "fibonacci_sequ": [29, 52], "fibonaccitre": [29, 52], "fidel": 55, "field": [0, 11, 12, 33, 35, 38, 40, 52], "fifo": 4, "fifth": [25, 33, 52], "figsiz": [15, 29, 33, 35, 38, 52, 57], "figur": [33, 52, 76], "file": [12, 25, 35, 37, 38, 39, 52, 55, 56, 58, 62, 67], "filenam": [35, 38, 56], "fili2001": [33, 52], "fill": [9, 25, 29, 33, 41, 52, 54, 55], "fillcol": 55, "filldraw": 55, "filter": [38, 52, 75], "filter_krusk": [35, 75], "filter_kruskal_iter": 75, "final": [13, 20, 28, 29, 32, 33, 35, 36, 52, 55, 57], "find": [3, 4, 12, 18, 20, 22, 23, 24, 27, 29, 33, 35, 36, 37, 38, 39, 41, 43, 45, 46, 49, 50, 52, 62, 64, 66, 67, 70, 71, 74, 75, 76, 79, 81], "find_ear": 79, "find_hamiltonian": [35, 36], "find_path": 36, "find_pivot": 16, "fine": [12, 38], "finer": 35, "finish": [37, 38], "finit": [0, 12, 20, 29, 30, 33, 35, 52, 62, 71], "finite_r": [1, 12, 20, 21, 27, 28, 29, 33, 35, 38, 52, 76], "finitefield": 35, "finitesetmap": 35, "first": [1, 3, 4, 5, 8, 11, 12, 13, 16, 19, 20, 21, 22, 25, 26, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 48, 50, 52, 55, 57, 60, 62, 64, 69, 70, 71, 72, 75, 76, 77, 79, 80, 81], "first5": 35, "first_color": 39, "first_permut": [30, 52], "first_search": [35, 77], "firstli": 71, "fischer": [33, 52], "fish": 62, "fit": [36, 39], "fiv2012": 59, "five": [11, 29, 33, 36, 40, 52], "fix": [8, 10, 12, 13, 20, 21, 27, 29, 33, 35, 36, 38, 49, 52, 55, 59, 69, 70], "fk": 40, "fk1991": [33, 52, 76], "fl": [20, 33, 52], "flag": [20, 35, 38, 71, 76], "flatten": [25, 38, 48, 52, 73], "flexibl": [5, 8, 55, 57], "flint": [12, 20, 25, 28, 35, 38, 52, 66, 68, 79], "flip": 12, "float": [3, 11, 12, 18, 20, 21, 23, 25, 32, 35, 38, 39, 43, 50, 52, 55, 57, 58, 66, 67, 69, 75, 77], "florent": [23, 38, 51], "flow": [11, 20, 35, 38, 69], "flow_graph": 35, "flow_polytop": 20, "flower": [33, 35, 38, 52], "flower_snark": [33, 52], "flowersnark": [33, 35, 37, 38, 52, 81], "floyd": [3, 20, 22, 35, 38], "floyd_warshal": 22, "floyd_warshall_shortest_path": 3, "flush": 12, "fly": [21, 27, 38, 52, 81], "fmpz_poly_t": 68, "fname": 12, "fobj": 56, "foc": 20, "focu": [23, 35, 38, 61], "fold": [28, 29, 38, 52], "folded_cube_graph": [29, 52], "folded_graph": 38, "foldedcubegraph": [29, 52], "folkman": [33, 52], "folkman_graph": [33, 52], "folkmangraph": [33, 52], "follow": [1, 2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 43, 44, 45, 48, 49, 50, 52, 55, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 71, 73, 75, 76, 77, 81], "followingli": [33, 52], "font": [55, 57], "foo": [4, 35, 38, 75], "fooba": 38, "fool": 8, "foral": [12, 17, 19, 20, 22, 23, 35, 38, 39, 43, 50, 66, 73], "forbidden": [4, 12, 18, 29, 35, 38, 52, 62, 64, 67, 81], "forbidden_subgraph": [38, 62, 81], "forbidden_vertic": [4, 18, 35, 38], "forc": [17, 20, 35, 36, 38, 43, 58], "force_spring_layout": 58, "ford": [3, 35], "ford_boost": [3, 35], "foreshorten": [29, 52], "forest": [11, 18, 20, 32, 35, 38, 39, 46, 52, 57, 67, 75], "forest_root": [35, 57], "forget": [38, 45, 49], "forgotten": 49, "fork": [25, 52], "forkgraph": [25, 52, 56], "form": [1, 2, 3, 4, 5, 9, 12, 17, 18, 20, 27, 28, 29, 33, 35, 38, 46, 49, 52, 67, 69, 70, 73], "form_modul": 46, "formal": [35, 38, 45, 48], "format": [4, 11, 12, 20, 27, 29, 35, 36, 40, 42, 52, 55, 57, 58, 66, 67, 68, 69, 74, 75, 77], "format_color": 39, "former": [35, 64, 76], "formul": [12, 17, 19, 20, 27, 35, 38, 39, 52, 66, 67], "formula": [13, 35, 47], "forward": [6, 10, 21, 35, 38, 60], "foster": [28, 33, 52], "foster_graph": [33, 52], "fostergraph": [33, 52], "fostergraph3s6": [28, 52], "found": [2, 4, 8, 9, 11, 17, 20, 23, 28, 33, 35, 36, 37, 38, 39, 43, 45, 46, 48, 49, 50, 52, 55, 57, 58, 59, 64, 69, 76, 77], "four": [7, 18, 19, 28, 29, 31, 33, 38, 49, 52, 55, 59, 64, 67, 76], "four_srg": [29, 52], "fourth": [25, 28, 29, 33, 52], "frac": [3, 8, 11, 13, 22, 28, 29, 32, 35, 38, 39, 52, 59, 69], "fractal": [29, 52], "fraction": [21, 32, 35, 38, 39, 52], "fractional_chromatic_index": [38, 39], "fractional_chromatic_numb": [38, 39], "fractional_clique_numb": 38, "fractional_color": [38, 39], "fragil": 46, "frame": 57, "franc": [34, 52], "franci": 38, "francoi": 45, "frank": [20, 33, 52], "frankfurt": 4, "franklin": [33, 52], "franklin_graph": [33, 52], "franklingraph": [33, 52], "free": [2, 9, 11, 16, 25, 29, 33, 35, 38, 39, 52, 62, 64, 66, 67], "free_short_digraph": 11, "freeli": [5, 8], "french": [33, 52], "frequenc": 35, "friendship": [25, 29, 38, 52, 66], "friendship_graph": [29, 52], "friendshipgraph": [25, 29, 38, 52, 66], "fring": 22, "frobeniu": [11, 35], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "from_adjacency_matrix": 54, "from_dict_of_dict": 54, "from_dict_of_list": 54, "from_dictionari": [20, 38], "from_dig6": 54, "from_graph6": [54, 56], "from_incidence_matrix": 54, "from_networkx_graph": 54, "from_oriented_incidence_matrix": 54, "from_seidel_adjacency_matrix": 54, "from_sparse6": [38, 54, 56], "from_str": [33, 52], "from_whatev": 56, "frontend": 38, "frozenset": [9, 14, 38, 39, 46, 49, 69], "fru1977": [29, 52], "frucht": [29, 33, 52], "frucht_graph": [33, 52], "fruchtgraph": [33, 35, 38, 52], "fshgc": 35, "ft": [33, 52], "fulkerson": 35, "full": [4, 12, 35, 38, 40, 52, 73, 76], "fulleren": 52, "fulli": [4, 11, 20], "function": [0, 1, 4, 5, 6, 8, 12, 14, 15, 19, 20, 26, 27, 28, 29, 30, 32, 33, 35, 38, 39, 40, 43, 45, 46, 47, 49, 50, 56, 57, 59, 63, 66, 67, 69, 75, 77, 80, 81], "fundament": [38, 66], "funni": [33, 52], "furer": [29, 52], "furergadget": [29, 52], "further": [1, 3, 27, 36, 38, 39, 52, 59, 75, 76], "furthermor": [1, 18, 29, 35, 38, 42, 52, 55, 62, 70, 77], "furthest": [22, 33, 52], "fuse": 3, "fusen": 52, "futur": [6, 31, 34, 39, 52], "fuzzi": [29, 52], "fuzzyballgraph": [29, 52], "fv": 35, "g": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81], "g0": [30, 35, 52], "g1": [29, 30, 33, 35, 38, 39, 45, 46, 52, 56, 67], "g2": [29, 30, 33, 35, 38, 39, 45, 46, 52, 56, 67], "g3": [33, 38, 52], "g3x3": [29, 52], "g439": 35, "g6": [36, 56], "g6_string": 54, "g9": [29, 52], "g_": [17, 40], "g_1": [35, 45], "g_2": [35, 45, 76], "g_bliss": 35, "g_class": 46, "g_d": 38, "g_i": [35, 38, 45], "g_ia": 36, "g_imm": 38, "g_immut": 38, "g_j": [35, 45], "g_k": 45, "g_list": [29, 52], "g_n": [35, 45], "g_networkx": 35, "g_nonsym": 38, "g_revers": 11, "g_sage": [3, 35], "g_scc": 11, "g_str": [38, 69], "g_sym": 38, "g_with_label": 55, "ga": [30, 38, 52], "gabow": 24, "gabow1995": 24, "gabowedgeconnect": 24, "gadget": [29, 52], "gain": 19, "gale": 52, "gallai": [18, 35, 62], "gamma": [28, 32, 33, 35, 38, 39, 46, 52], "gamma_1": [33, 52], "gamma_2": [33, 52], "gamma_3": 76, "gamma_class": 46, "gap": [1, 11, 27, 28, 29, 30, 33, 35, 38, 52, 59, 76], "gap_packag": [1, 28, 33, 35, 52], "gap_package_atlasrep": [28, 52], "gap_package_design": [1, 33, 52, 76], "gap_package_grap": [27, 33, 52], "gaqw": 35, "gara": 20, "garbag": 38, "garrai": 56, "gasket": [29, 52], "gather": [9, 19, 39, 45, 54, 62, 64, 73], "gavrilyuk": [52, 76], "gavrilyukmakhnev05": [52, 76], "gb": [21, 30, 37, 38, 52], "gbomw": [18, 38], "gc": [29, 36, 52, 62], "gc1": 62, "gc2": 62, "gc_1": 62, "gc_151": 62, "gc_2": 62, "gc_215": 62, "gc_249": 62, "gc_274": 62, "gc_3": 62, "gc_309": 62, "gc_32": 62, "gc_441": 62, "gc_5": 62, "gc_541": 62, "gc_56": 62, "gc_6": 62, "gc_62": 62, "gc_69": 62, "gc_7": 62, "gc_76": 62, "gc_990": 62, "gc_991": 62, "gc_992": 62, "gc_993": 62, "gc_994": 62, "gc_995": 62, "gc_996": 62, "gc_997": 62, "gc_998": 62, "gc_999": 62, "gc_id": 62, "gcd": 20, "gd": [38, 40, 56], "ge": [30, 52], "gem": [25, 52], "gemgraph": [25, 52, 56], "gen": [21, 29, 35, 38, 52], "gen_html_cod": [35, 58], "genbg": 52, "genbgl": [52, 60], "gener": [0, 1, 3, 4, 5, 6, 7, 8, 14, 16, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 46, 47, 52, 55, 61, 62, 63, 66, 67, 69, 70, 75, 76, 77, 79], "generalis": [28, 35, 52], "generaliseddodecagongraph": [28, 52], "generalisedhexagongraph": [28, 52], "generalisedoctagongraph": [28, 52], "generalized_quadrangl": [1, 27, 52], "generalizeddebruijn": [20, 21], "generalizedpetersengraph": [29, 36, 52], "generalizedsierpinskigraph": [29, 52], "generating_set": 19, "generic_graph": [3, 9, 16, 20, 21, 22, 35, 38, 41, 45, 52, 55, 71, 75], "generic_graph_pyx": [35, 36], "genericgraph": [0, 3, 16, 18, 20, 21, 35, 38, 41, 45, 52, 55, 71, 75], "genericgraph_pyx": [35, 36], "genericgraphbackend": [4, 6], "genericgraphqueri": 40, "genericsqldatabas": 40, "genfrac": [28, 52], "geng": 52, "genktreeg": 52, "genposetg": 21, "gentourng": 21, "gentreeg": [29, 52], "genu": [0, 33, 35, 38, 52], "geodet": [19, 35, 38], "geodetic_closur": [19, 38], "geodetic_graph": [19, 35], "geometr": [27, 29, 35, 52, 74], "geometri": [0, 20, 29, 33, 35, 38, 52, 76], "geq": [12, 16, 19, 20, 21, 22, 23, 25, 26, 29, 32, 35, 37, 38, 39, 41, 42, 47, 50, 52, 59, 64, 66, 67, 68, 76, 77], "german": 4, "germani": 4, "get": [2, 4, 5, 6, 8, 16, 19, 20, 21, 24, 27, 29, 30, 32, 33, 35, 38, 39, 41, 42, 50, 52, 56, 61, 67, 77, 80], "get_class": 62, "get_edge_label": [5, 6, 8, 10], "get_embed": [35, 37, 52, 72], "get_graph": 51, "get_graphs_list": [35, 38, 40, 56], "get_length": 49, "get_match": 67, "get_module_typ": 46, "get_opt": [35, 55], "get_po": [21, 29, 32, 33, 35, 38, 52, 57, 75], "get_query_str": 40, "get_skeleton": 40, "get_spqr_tre": 18, "get_tree_decomposit": 49, "get_triconnected_compon": 18, "get_valu": [1, 12, 18, 20, 23, 35, 38, 39, 43, 50, 66, 67, 69], "get_vertex": [30, 32, 35, 38, 49, 52], "get_vertic": [30, 32, 35, 46, 52], "gewirtz": [27, 33, 52], "gewirtz_graph": [33, 52], "gexf": 35, "gf": [1, 12, 21, 27, 28, 29, 33, 35, 38, 47, 52, 76], "gg": [22, 36, 38, 39, 40, 45], "ggg": [33, 52], "gglkcmo": 56, "gh": [28, 52], "ghi": [38, 69], "gi": 10, "gigabyt": 22, "gil1959": [21, 32, 52, 53], "gipc": 52, "giqcc": 52, "girth": [25, 29, 32, 33, 35, 38, 40, 52, 67], "github": [51, 58], "give": [1, 4, 18, 20, 27, 29, 33, 35, 38, 39, 45, 50, 52, 55, 59, 69, 76], "given": [1, 3, 4, 8, 11, 12, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 30, 32, 33, 35, 38, 39, 40, 41, 43, 45, 46, 47, 48, 50, 52, 55, 56, 57, 61, 62, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 81], "gk_": 56, "gklp2021": 24, "gkp2011": [29, 52], "glist": [52, 56], "global": 55, "glpk": [1, 38, 39], "glue": 35, "gm1987": [33, 52], "gml": 35, "gmp": [33, 52], "gn": 21, "gnc": 21, "gnm": [32, 52], "gnm_random_graph": [32, 52], "gnp": [32, 52], "gnp_random_graph": [32, 52], "gnr": 21, "gnx": 54, "go": [3, 17, 20, 22, 27, 29, 32, 35, 36, 43, 45, 50, 52, 57, 76, 79], "goal": [29, 52], "god1993": [12, 38, 68], "godsil": [12, 38, 68], "goe": [1, 21, 22, 35, 38, 42, 69, 77], "goethal": [29, 52, 76], "goethalsseidelgraph": [29, 52, 76], "gojbdo": 56, "golai": [28, 52], "goldberg": 35, "goldner": [33, 52], "goldnerhararygraph": [33, 52], "golomb": [33, 52], "golomb_graph": [33, 52], "golombgraph": [33, 52], "goltsev": [29, 52], "gomori": 38, "gomory_hu_tre": 38, "gon": [25, 32, 52], "gonal": [29, 32, 52], "good": [3, 17, 22, 25, 26, 29, 35, 36, 38, 39, 40, 49, 52, 55, 59, 61, 64], "gordon": [14, 38], "gosset": [33, 52], "gosset_3_21": [33, 52], "gosset_graph": [33, 52], "gossetgraph": [33, 52], "got": 38, "govern": [11, 35], "gp": [33, 34, 35, 52, 57], "gpo": [32, 52], "gps_coordin": [34, 52], "gq": [27, 28, 36, 52, 56, 76], "gqg": [38, 40], "gr": [33, 36, 52], "gr2001": [33, 52], "graham": [35, 38], "grai": [33, 38, 52], "graph": [1, 2, 3, 13, 14, 15, 16, 18, 21, 22, 23, 24, 31, 36, 37, 42, 43, 44, 46, 48, 49, 50, 59, 60, 61, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80], "graph6": [12, 20, 21, 35, 36, 38, 40, 52, 54, 56], "graph6_str": [12, 20, 29, 33, 36, 38, 40, 52, 75], "graph6_to_plot": 40, "graph_": 38, "graph_3o73": [28, 52], "graph_4": 76, "graph_backend": 6, "graph_bord": [35, 38, 57], "graph_canon": [12, 35], "graph_class": [2, 32, 38, 52, 62], "graph_color": [38, 39], "graph_data": 40, "graph_databas": 40, "graph_db": 40, "graph_db_info": [38, 40], "graph_decomposit": [38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "graph_editor": 51, "graph_from_gq_spread": 28, "graph_gen": 46, "graph_gener": [25, 26, 27, 29, 30, 31, 32, 33, 34, 38, 46, 52, 76], "graph_generators_pyx": [32, 52, 53], "graph_homomorph": 38, "graph_id": 40, "graph_input": 54, "graph_isom_equivalent_non_edge_labeled_graph": 35, "graph_latex": [35, 38, 48, 55, 57], "graph_list": 56, "graph_plot": [35, 57], "graph_plot_j": 58, "graph_product": [35, 38, 45], "graph_td": 49, "graph_theori": [3, 12, 18, 20, 21, 35, 38, 61, 66], "graph_with_classical_paramet": 28, "graphclass": 62, "graphdatabas": 40, "graphgener": [29, 52, 76], "graphic": [12, 25, 29, 31, 32, 35, 38, 40, 52, 55, 56, 57, 74], "graphic_s": 55, "graphics3d": [35, 52], "graphics_arrai": [25, 29, 31, 32, 35, 52], "graphics_array_default": 35, "graphinit": 55, "graphlatex": 35, "graphml": 35, "graphplot": [35, 57], "graphplot_opt": 35, "graphqueri": [35, 38, 40, 56], "graphs_list": [18, 21, 35, 38, 52, 56], "graphs_queri": 35, "graphviz": [20, 35, 38, 55, 57], "graphviz_str": [35, 55], "graphviz_to_file_nam": 35, "grassmann": [28, 52], "grassmanngraph": [28, 52], "graviti": 58, "gray_graph": [33, 52], "graygraph": [33, 38, 52], "grayscal": 55, "great": 11, "greater": [21, 25, 28, 29, 35, 43, 46, 50, 52], "greatest": [29, 52], "greatli": 35, "greec": 4, "greedi": [17, 23, 35, 38, 50], "greedili": [19, 50], "greedy_dominating_set": [23, 35], "greedy_is_compar": 17, "greedy_is_comparability_with_certif": 17, "green": [35, 55, 57, 71, 74], "gri2021": [33, 52], "grid": [3, 18, 19, 22, 25, 26, 35, 38, 39, 43, 45, 49, 50, 52, 59, 62, 74, 75], "grid2dgraph": [18, 19, 20, 22, 23, 25, 35, 38, 39, 42, 43, 45, 49, 50, 52, 59, 62, 75], "gridgraph": [3, 18, 25, 26, 35, 38, 52, 59, 62, 66], "gritsenko": [33, 52], "gritsenkograph": [33, 52], "grl": 35, "gro1987": [38, 59], "gromov": [38, 59], "grotzsch": [29, 33, 52], "grotzschgraph": [29, 33, 52], "ground": [1, 9, 60, 73], "ground_set": [1, 27, 52], "group": [1, 21, 25, 28, 29, 32, 33, 35, 37, 38, 52, 55, 57, 58, 76], "grout": [35, 38, 40, 52], "grow": [21, 32, 35, 52], "growing_subtre": [32, 52], "grown": [32, 52], "growth": [32, 52], "grp": 40, "gru2003": [29, 52], "grunbaum": [33, 52], "grundi": 39, "grundy_color": 39, "gr\u00f6tzsch": [33, 52], "gs1970": [29, 52, 76], "gs1975": 76, "gt2001": 75, "gua": 38, "guao": [54, 56], "guarante": [4, 11, 35, 40, 46, 80], "guess": [1, 20, 38, 45, 69, 76], "guid": 52, "gurobi": 1, "gut2001": [18, 38], "gutweng": [18, 38], "gw": [40, 56], "gyll1993": [22, 35], "gz": 39, "h": [1, 4, 9, 10, 12, 17, 18, 19, 20, 26, 27, 28, 29, 30, 32, 33, 35, 36, 38, 42, 45, 48, 50, 51, 52, 54, 55, 57, 59, 60, 62, 64, 66, 67, 68, 70, 75, 76, 77, 79, 80, 81], "h1": [35, 38], "h2": [1, 35, 38, 64], "h_": [29, 52], "h_1": [1, 35, 36, 45, 76], "h_2": [1, 35, 36, 45, 76], "h_3": [36, 76], "h_imm": 38, "h_j": [35, 45], "h_k": [35, 36, 45], "h_m": [35, 45], "h_x": 1, "ha": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 54, 55, 57, 59, 62, 64, 66, 67, 69, 70, 71, 73, 75, 76, 77], "habib": [38, 46], "habib_maur": [38, 46], "habib_maurer_algorithm": [38, 46], "had": [20, 35], "hadamard": [21, 29, 52, 76], "hadamard_matrix": [21, 29, 38, 52], "hadi": [33, 52], "haemer": [27, 33, 52, 76], "haemersgraph": [27, 52, 76], "haf2004": [33, 52], "haj2000": 73, "hajiaghayi": 73, "hakimi": 52, "half": [22, 27, 33, 35, 38, 52, 59, 63, 66, 67], "halfcub": [28, 52], "hall": [33, 41, 52], "halljankograph": [33, 35, 52], "halv": [28, 52], "halved_cube_graph": [28, 52], "ham": [28, 29, 33, 38, 52, 70, 76], "hamalainen": 39, "hamilton": 35, "hamiltonian": [26, 29, 33, 35, 36, 38, 52, 66], "hamiltonian_cycl": 35, "hamiltonian_path": 35, "hamming_graph": [29, 52], "hamminggraph": [28, 29, 38, 52], "hand": [4, 17, 35, 38, 43, 50, 55], "handbook": 45, "handili": 37, "handl": [4, 9, 15, 18, 20, 35, 38, 40, 47, 55], "hang": 37, "hanoi": [29, 52], "hanoitowergraph": [29, 35, 52], "hansen": [20, 38, 79], "happen": [20, 22, 35, 38, 55, 56, 64], "har1962": 35, "har1969": 64, "har1994": [33, 52], "harald": [29, 52], "harari": [29, 33, 52], "hararygraph": [29, 52], "harborth": [33, 52], "harborth_graph": [33, 52], "harborthgraph": [33, 52], "hard": [3, 4, 11, 19, 20, 25, 32, 35, 38, 39, 52], "hardcod": [29, 52], "harder": 59, "hardwar": [37, 47], "harpri": [18, 35], "harri": [33, 52], "harries_graph": [33, 52], "harriesgraph": [33, 52], "harrieswonggraph": [33, 52], "hartk": 38, "has_arc": [4, 5, 8, 10], "has_arc_label": 4, "has_arc_unsaf": 4, "has_edg": [1, 5, 6, 8, 10, 11, 17, 18, 20, 34, 35, 38, 39, 47, 48, 52, 62, 80], "has_fil": 55, "has_homomorphism_to": 38, "has_loop": [35, 52, 67], "has_multiple_edg": [35, 52], "has_perfect_match": [38, 66, 67], "has_vertex": [4, 6, 10, 35], "hash": [8, 12, 20, 35, 38, 67, 69], "hash_label": [12, 20, 35, 38, 69], "hash_length": 8, "hash_mask": 8, "hashabl": [1, 4, 7, 29, 30, 35, 38, 49, 52, 64], "hass": [20, 21], "hasse_diagram": [20, 35, 36], "hassediagram": 20, "have": [1, 3, 4, 7, 8, 9, 11, 12, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 59, 62, 64, 66, 67, 69, 71, 73, 75, 76, 77, 80, 81], "have_tkz_graph": 55, "havel": 52, "hawaii": [34, 52], "hbox": 55, "hdict": 59, "he": 22, "he2006": [38, 77], "head": [4, 12, 35, 71], "heavili": 39, "heawood": [21, 33, 35, 52, 67], "heawood_graph": [33, 52], "heawoodgraph": [29, 33, 35, 52, 55, 57, 67], "hecke_matrix": 35, "hei": 35, "height": [20, 29, 35, 36, 51, 52, 57], "help": [8, 20, 21, 29, 35, 50, 52, 76], "helper": [16, 35, 36, 38, 39, 40, 52, 69], "henc": [3, 4, 9, 11, 16, 17, 18, 19, 20, 22, 29, 32, 34, 35, 36, 38, 39, 43, 47, 50, 52, 62, 64, 66, 69, 77, 80], "herbert": [33, 52], "here": [1, 3, 4, 6, 14, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 52, 54, 55, 57, 59, 64, 70, 76, 79], "hermitean": [27, 33, 52], "hermitian": [28, 52], "hermitianformsgraph": [28, 52], "herschel": [33, 52], "herschel_graph": [33, 52], "herschelgraph": [33, 38, 52], "heurist": [3, 23, 35, 38, 41, 79], "hex": [39, 55], "hex_color": [38, 39], "hexadecim": [35, 58], "hexagon": [28, 33, 52], "hexagon_count": 52, "hexahedr": [31, 38, 52, 66, 67], "hexahedralgraph": [31, 38, 46, 52, 66, 67], "hexahedron": [31, 52], "hg": 40, "hh": 45, "hhl2009": [27, 52], "hi": [10, 22, 38, 76, 79], "hierarch": 35, "hierholz": 35, "high": [7, 19, 22, 29, 32, 35, 40, 43, 52, 70], "higher": [26, 32, 35, 39, 52], "highest": [33, 52], "highli": [38, 44], "highlight": 55, "higman": [33, 52, 76], "higmansimsgraph": [33, 52], "hik2011": 45, "hinton": 12, "hit": [1, 19, 20, 21, 38, 52], "hitotumatu": 39, "hjti": 35, "hk2002a": [32, 52], "hlt1993": [19, 38], "hm1979": [38, 46], "hmcbcbq": 56, "hmpv2000": [35, 38, 48, 77], "hn": 19, "hoffman": [33, 35, 52], "hoffman_graph": [33, 52], "hoffmangraph": [33, 38, 52], "hoffmann": [28, 52], "hoffmansingletongraph": [33, 35, 52, 57, 76], "hold": [4, 20, 21, 35, 38, 50, 52, 55, 76], "hole": [32, 35, 38, 52, 81], "holland": 45, "holm": [32, 52], "holt": [33, 38, 52], "holt_graph": [33, 52], "holtgraph": [33, 38, 52], "home": 62, "homogen": 76, "homomorph": 38, "hopcroft": [12, 18, 38], "hopcroft1973": [18, 38], "hopcroft_tarjan": [18, 38], "hope": [21, 31, 36, 41, 43, 50, 52], "horizont": [25, 29, 30, 36, 39, 52, 55], "horn": [25, 52], "horton": [33, 52, 67], "horton_graph": [33, 52], "hortongraph": [33, 52], "hous": [9, 25, 35, 38, 52, 64], "housegraph": [9, 25, 29, 35, 38, 52, 56, 64, 77, 80], "housexgraph": [25, 38, 52, 56], "how": [1, 5, 8, 11, 13, 17, 20, 21, 25, 29, 32, 33, 34, 35, 38, 41, 52, 55, 57, 58, 64, 76, 77, 80, 81], "howev": [3, 4, 11, 12, 17, 18, 20, 22, 29, 33, 35, 38, 50, 52, 55, 61, 80], "hp2010": 38, "hpo": [32, 52], "hpr2010": 79, "hqkhqojykc_uhwgx": 56, "href": [52, 76], "hrs1993": 38, "hs1968": [33, 52], "hsing": 35, "hss": 35, "hst2001": 38, "hsu": 35, "hsv": 35, "ht1996": 76, "hthugm": 35, "html": [12, 28, 29, 33, 35, 52, 58, 76], "http": [12, 21, 25, 28, 29, 33, 35, 38, 39, 40, 51, 52, 55, 58, 60, 70, 76], "hu": 38, "hu_tre": 38, "hub": [29, 52], "hub1975": [27, 33, 52, 76], "huge": [9, 18, 19, 32, 38, 43, 50, 52, 59, 62], "hull": [19, 20, 35, 38], "hull_numb": 19, "hungri": [38, 39], "hw": 40, "hydrocarbon": 52, "hyp": [38, 59], "hyper": [29, 52], "hyperbol": [0, 27, 33, 38, 52], "hyperbolicity_distribut": 59, "hypercub": [29, 38, 52, 70], "hyperedg": 60, "hypergraph": [32, 52], "hypergraph_gener": 60, "hypergraphgener": 60, "hyperov": [27, 52], "hyperoval_match": [27, 52], "hyperplan": [27, 29, 52, 76], "hyperstar": 52, "hyperstargraph": [29, 36, 52], "hypohamiltonian": [33, 35, 36, 52], "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "i1": 35, "i2": [1, 35], "i_": [27, 52], "i_1": [27, 52], "i_2": [27, 52], "i_i": [30, 32, 52], "i_j": [27, 30, 52], "i_k": [27, 52], "ic": [1, 38, 70], "iceland": [34, 52], "icosahedr": [31, 46, 52], "icosahedralgraph": [3, 29, 31, 35, 46, 52], "icosahedron": [31, 52], "icosidodecahedron": [33, 52], "id": [10, 25, 28, 52, 58, 62], "idea": [11, 19, 20, 33, 36, 39, 40, 47, 52], "ideal": 39, "ident": [21, 25, 29, 33, 35, 38, 46, 49, 52, 55, 76], "identifi": [2, 19, 22, 28, 29, 30, 33, 35, 38, 40, 45, 46, 52], "identity_matrix": [25, 52], "iff": [1, 20, 29, 35, 38, 52], "ifub": [22, 38], "igmoqocuoqeb": 38, "ignor": [4, 5, 9, 12, 18, 20, 21, 22, 27, 35, 38, 39, 42, 48, 49, 52, 54, 55, 56, 57, 58, 59, 64, 67, 69, 71, 77, 80], "ignore_direct": [4, 35, 80], "ignore_edge_label": 35, "ignore_label": 4, "igraph": [20, 29, 35, 38, 52, 67], "igraph_graph": [20, 35, 38], "ih": 38, "ihara": 38, "ihara_zeta_function_invers": 38, "ihea": 54, "ii": 21, "ii1983": 21, "ij": [29, 33, 35, 52], "ik2003": [33, 52], "il": 47, "illustr": [12, 23, 29, 33, 35, 38, 52, 55, 57, 80], "ils2012": [18, 20], "im": [54, 61], "imag": [35, 38, 55, 56], "imagemagick": 55, "imaginari": 35, "imas": 21, "imaseitoh": 21, "immedi": [3, 4, 11, 18, 20, 35, 43, 47, 59], "immerman": [29, 52], "immut": [10, 12, 16, 20, 21, 25, 35, 36, 38, 40, 45, 48, 52, 53, 56, 64, 66, 67, 69], "impact": 50, "impati": [33, 52], "implement": [1, 2, 3, 4, 6, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 79, 80, 81], "impli": [17, 18, 19, 20, 21, 32, 33, 35, 38, 45, 52, 56, 73], "implicitli": 57, "import": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "imposs": [17, 35, 38, 39, 69, 73], "improv": [3, 19, 22, 32, 35, 37, 38, 40, 42, 43, 50, 52, 59, 61, 62, 69, 71, 75], "in1": [32, 52], "in2": [32, 52], "in3": [32, 52], "in_branch": 20, "in_degre": [4, 5, 6, 8, 10, 20, 35, 38, 69, 77], "in_degree_iter": 20, "in_degree_sequ": 20, "in_neighbor": [4, 5, 8, 10], "in_ord": [12, 35, 67], "incid": [0, 4, 6, 10, 12, 17, 20, 21, 32, 33, 35, 38, 39, 45, 52, 54, 60, 64, 66, 67, 69, 70, 74, 80], "incidence_graph": 1, "incidence_matrix": [1, 20, 35, 38, 54], "incidence_structur": [1, 32, 52], "incidencestructur": [1, 32, 52], "includ": [1, 4, 12, 18, 20, 21, 27, 28, 29, 32, 35, 37, 38, 40, 46, 52, 55, 62, 69, 75], "include_anticorrel": [25, 52], "include_vertic": 4, "includegraph": 38, "inclus": [0, 23, 38], "inclusion_digraph": 62, "inclusionwis": [61, 64], "incom": [4, 6, 10, 20], "incoming_edg": [20, 35], "incoming_edge_iter": 20, "incompar": [17, 35, 36, 75], "incompat": [35, 52], "incomplet": [1, 19], "inconsist": [33, 52], "incorpor": [55, 67], "incorrect": [1, 12, 33, 35, 38, 52, 76], "increas": [4, 18, 20, 23, 26, 35, 38, 50, 52, 71], "increasingli": [38, 41], "incredibli": 11, "increment": [38, 77], "incur": [29, 52], "inde": [2, 4, 8, 17, 19, 20, 22, 27, 33, 35, 38, 39, 41, 43, 45, 47, 49, 50, 52, 62, 64, 70], "indegre": [20, 35], "independ": [0, 2, 12, 19, 21, 23, 27, 29, 32, 33, 34, 35, 38, 39, 52, 53, 60, 62, 63, 64, 65, 76, 77], "independence_numb": 40, "independent_set": [23, 29, 35, 38, 52, 61, 62], "independent_set_": [38, 61], "independent_set_of_repres": 38, "independentset": 61, "index": [0, 1, 3, 11, 12, 20, 22, 25, 29, 32, 33, 35, 38, 39, 40, 42, 45, 46, 47, 48, 52, 55, 57, 58], "indexerror": 35, "indic": [3, 4, 8, 11, 18, 20, 21, 25, 26, 28, 29, 32, 35, 38, 39, 45, 46, 49, 52, 54, 57, 60, 66, 73], "indirect": [15, 16, 38, 57, 76], "indirectli": [28, 52, 75], "indistinguish": 4, "individu": [8, 25, 35, 38, 52, 55, 56, 67], "individualis": [29, 52], "indiviud": [38, 66], "induc": [1, 4, 9, 15, 16, 17, 18, 23, 27, 29, 32, 33, 35, 36, 38, 43, 45, 46, 48, 49, 50, 52, 62, 64, 67, 76, 77, 79, 81], "induced_subgraph": [9, 35, 40], "induced_substructur": 1, "induct": 77, "ineffici": 38, "inequ": [0, 11, 35], "inexact": [1, 12, 18, 20, 23, 35, 38, 39, 43, 50, 66, 67, 69], "inf": 3, "infeas": [19, 52, 76], "infer": [12, 35], "infin": [3, 4, 20, 22, 35, 38, 49], "infinit": [20, 21, 22, 33, 35, 38, 49, 52], "influenc": [23, 35, 38, 52, 55, 69], "info": [16, 40], "inform": [0, 1, 3, 4, 7, 9, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 25, 27, 29, 30, 33, 35, 38, 39, 43, 45, 46, 47, 50, 52, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 69, 70, 73, 76], "infti": 4, "inherit": [5, 8, 40, 52], "init_empty_copi": 11, "init_revers": 11, "init_short_digraph": 11, "initi": [3, 4, 5, 8, 11, 12, 15, 21, 22, 23, 24, 28, 29, 32, 35, 36, 38, 39, 40, 43, 48, 50, 51, 52, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 69, 70, 73, 74, 77, 78, 81], "initial_vertex": [35, 38, 48, 77], "inject": [1, 29, 35, 52], "inlin": [22, 55], "inneighbor": 22, "inner": [25, 29, 32, 33, 35, 52, 55, 59], "inplac": [1, 20, 29, 35, 38, 48, 52, 54], "input": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81], "input_": [28, 52], "inscrib": 38, "insert": [21, 22, 32, 35, 38, 42, 46, 52, 53, 58, 60], "insid": [18, 29, 33, 35, 38, 52, 55, 62, 64, 73], "insight": 35, "insilab": 38, "inspect": [25, 33, 35, 38, 52], "inspir": [32, 38, 52, 66, 67], "instal": [1, 12, 14, 20, 33, 35, 38, 48, 49, 51, 52, 55, 58, 65], "instanc": [1, 3, 5, 8, 10, 11, 12, 17, 19, 20, 21, 27, 29, 32, 35, 36, 38, 40, 42, 43, 45, 47, 50, 52, 59, 60, 62, 66, 67, 73], "instanti": [8, 73], "instead": [1, 4, 8, 9, 11, 12, 20, 21, 22, 23, 28, 30, 32, 35, 36, 38, 45, 50, 52, 54, 55, 58, 59, 61, 62, 64, 75, 76, 77], "instruct": [33, 35, 52, 55], "int": [4, 5, 8, 11, 20, 21, 22, 29, 32, 35, 36, 38, 40, 44, 52, 53, 58], "int32_max": 22, "int_to_binary_str": 36, "intact": [20, 35], "integ": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81], "integer_ceil": [38, 69], "integer_floor": 38, "integr": [33, 35, 50, 52, 76], "integrality_toler": [1, 12, 18, 20, 23, 35, 38, 39, 43, 50, 66, 67, 69], "intend": [4, 5, 8, 28, 40], "intens": [7, 35], "intent": 64, "intenum": 46, "inter": [32, 52], "interact": [35, 40], "interactive_queri": 40, "interconnect": [26, 35, 52], "intercycl": [33, 52, 67], "interest": [5, 8, 20, 22, 37, 38, 45, 59, 76], "interestingli": [21, 52], "interfac": [0, 18, 27, 35, 38, 40, 47, 51, 52, 55, 62], "interior": [38, 55, 79], "intermedi": [33, 38, 52], "intern": [1, 4, 10, 16, 18, 35, 38, 42, 46, 47, 54, 55, 67], "internet": [28, 33, 52, 58, 62, 76], "interpret": [1, 4, 6, 33, 35, 52, 55], "interrupt": 15, "intersect": [0, 1, 4, 17, 20, 27, 28, 32, 33, 35, 38, 41, 52, 60, 62, 64, 73, 76], "intersection_graph": [1, 76], "intersectiongraph": [30, 32, 52], "intertext": 43, "interv": [11, 25, 30, 32, 35, 38, 41, 52, 62, 73], "interval_graph": [32, 35, 52], "intervalgraph": [30, 32, 35, 52, 62], "intra": [32, 52], "intro": 49, "introduc": [23, 29, 35, 38, 49, 52, 59, 77], "introduct": [35, 55], "intuit": [29, 35, 40, 52, 67], "invalid": [12, 35, 67], "invari": [27, 29, 38, 52], "invers": [16, 17, 30, 32, 35, 36, 38, 52], "inverse_ord": 79, "invest": [17, 38], "invis": 35, "invok": [35, 55], "involut": [37, 76], "involv": [1, 8, 19, 20, 22, 29, 35, 38, 52, 55, 69, 76], "ionin": [33, 52], "ioninkharaghani": [33, 52], "ioninkharaghani765graph": [33, 52], "ip": 1, "ipr": 52, "ipug": 35, "iraadci": 20, "iraadciioeokcpwao": 20, "iraadciioweokcpwao": 20, "ireland": [34, 52], "irrat": [33, 52], "is2006": 76, "is4": 61, "is_affine_polar": 76, "is_antipod": 38, "is_aperiod": 20, "is_apex": [35, 38, 62], "is_arc_transit": 38, "is_asteroidal_triple_fre": [2, 38, 62], "is_berge_cycl": 1, "is_biconnect": [18, 35, 38, 62, 67], "is_bicrit": [38, 66, 67], "is_bipartit": [12, 17, 29, 32, 33, 35, 38, 52, 62, 66, 67], "is_block_graph": [32, 38, 52, 62, 67], "is_brac": 67, "is_brick": 67, "is_cactu": 38, "is_cartesian_product": [35, 38, 45], "is_caylei": 35, "is_chord": [32, 33, 35, 38, 52, 62, 77], "is_chordal_bipartit": 38, "is_circul": [21, 29, 35, 52], "is_circular_planar": [35, 62], "is_circumscrib": 38, "is_classical_parameters_graph": 28, "is_cliqu": [9, 21, 32, 35, 52, 77], "is_cograph": [38, 67], "is_combinatorially_isomorph": 35, "is_compar": [17, 38], "is_comparability_milp": 17, "is_complete_multipartit": 76, "is_connect": [1, 4, 9, 18, 21, 23, 26, 35, 37, 38, 42, 49, 52, 60, 67, 79], "is_cossidente_penttila": 76, "is_cut_edg": [18, 35], "is_cut_vertex": [18, 35, 38, 66], "is_cycl": [35, 38, 79], "is_direct": [8, 20, 35, 38], "is_directed_acycl": [4, 10, 18, 20, 21, 35, 38, 62, 69], "is_disjoint": 67, "is_distance_regular": [22, 27, 28, 29, 33, 38, 52], "is_domin": [23, 35, 38], "is_drawn_free_of_edge_cross": 35, "is_edge_cut": [18, 35], "is_edge_transit": 38, "is_empti": 46, "is_equit": 35, "is_eulerian": [25, 29, 33, 35, 52], "is_even_hole_fre": 38, "is_factor_crit": [38, 66, 67], "is_forest": [35, 38, 39, 67], "is_from_gq_spread": 28, "is_gallai_tre": [35, 62], "is_gamma_fre": 38, "is_generalized_quadrangl": 1, "is_geodet": [19, 35], "is_goethals_seidel": [29, 52, 76], "is_gqqmqp": 76, "is_haem": 76, "is_half_transit": 38, "is_hamiltonian": [25, 26, 29, 33, 35, 38, 52, 66], "is_immut": [35, 40, 56], "is_independent_set": 35, "is_inscrib": 38, "is_interv": [30, 32, 35, 52, 62, 73], "is_isomorph": [1, 12, 17, 18, 20, 21, 22, 26, 27, 29, 30, 33, 35, 38, 45, 46, 52, 54, 62, 64, 67, 78, 81], "is_johnson": 76, "is_leaf": 46, "is_less_than_k": 49, "is_lin": [38, 64], "is_line_graph": [35, 38, 62, 64], "is_long_antihole_fre": [38, 81], "is_long_hole_fre": [38, 81], "is_matching_cov": [38, 66, 67], "is_mathon_pc_srg": [29, 52, 76], "is_mccuaig_brac": 67, "is_modul": 38, "is_muzychuk_s6": [29, 52, 76], "is_near_polygon": 28, "is_no_f2": 76, "is_no_f3": 76, "is_noodd": 76, "is_noperp_f5": 76, "is_norine_thomas_brick": 67, "is_nowhere0_twoweight": [27, 52, 76], "is_nu": 76, "is_odd_hole_fre": 38, "is_orthogonal_array_block_graph": [29, 52, 76], "is_orthogonal_polar": 76, "is_overful": 38, "is_palei": 76, "is_partial_cub": [38, 70], "is_path": [38, 67], "is_perfect": [33, 38, 52, 62], "is_permut": [17, 38], "is_planar": [25, 29, 32, 33, 35, 38, 52, 62, 67, 72], "is_polhil": 76, "is_polyhedr": [35, 38, 62], "is_prim": [38, 46], "is_pseudo_partition_graph": 28, "is_redund": [23, 38], "is_regular": [1, 22, 25, 27, 29, 32, 33, 35, 38, 52, 67], "is_removable_double_ear": 67, "is_removable_doubleton": 67, "is_removable_ear": 67, "is_removable_edg": 67, "is_resolv": 1, "is_rshcd": 76, "is_self_complementari": [29, 35, 52], "is_semi_symmetr": 38, "is_seri": 46, "is_simpl": [1, 33, 52], "is_split": [38, 62], "is_spread": 1, "is_squar": [20, 38], "is_stein": 76, "is_strongly_connect": [4, 11, 18, 20, 24, 35], "is_strongly_regular": [1, 9, 22, 27, 29, 30, 33, 38, 52, 76], "is_subgraph": [4, 32, 35, 45, 52, 67], "is_switch_oa_srg": 76, "is_switch_skewhad": [29, 52, 76], "is_symmetr": 38, "is_t_design": 1, "is_taylor_twograph_srg": 76, "is_tourna": [20, 21], "is_transit": [17, 20, 21], "is_transitively_reduc": 35, "is_tre": [18, 21, 29, 32, 35, 38, 42, 45, 52, 62, 67, 75, 78], "is_triangle_fre": [9, 29, 33, 38, 52], "is_triconnect": [18, 38, 67], "is_twograph_descendant_of_srg": 76, "is_uniform": 1, "is_unitary_dual_polar": 76, "is_unitary_polar": 76, "is_valid_lex_m_ord": [38, 77], "is_valid_ord": 50, "is_valid_tree_decomposit": 49, "is_vertex_cut": [18, 35, 38], "is_vertex_transit": [25, 27, 29, 33, 35, 52], "is_weakly_chord": [30, 38, 52, 81], "is_weight": 35, "isgci": [0, 38], "isinst": [5, 8, 35], "isit": 38, "isol": [12, 18, 21, 26, 35, 38, 48, 52, 67, 76, 77], "isom": [38, 52, 64], "isometr": [14, 35, 38, 70], "isomoph": 67, "isomorph": [1, 12, 18, 20, 21, 25, 26, 27, 29, 30, 33, 35, 36, 38, 40, 45, 46, 52, 60, 64, 67, 76, 78, 81], "isomorphic_substructures_iter": 1, "isoperimetr": [0, 38], "isoperimetric_inequ": 63, "isospectr": [30, 52], "isotrop": [27, 52, 76], "isr": 38, "issu": [1, 9, 10, 15, 18, 20, 23, 25, 29, 33, 35, 36, 38, 39, 49, 52, 55, 64, 67], "issubset": 66, "issuperset": 49, "itali": [4, 34, 52], "item": [18, 34, 35, 38, 52, 79], "iter": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 15, 16, 18, 20, 21, 22, 23, 24, 26, 29, 30, 32, 35, 36, 38, 40, 52, 56, 57, 59, 61, 64, 66, 67, 69, 70, 71, 73, 75, 77, 78, 80], "iterator_edg": [4, 5, 6, 8, 10], "iterator_in_edg": [4, 6, 10], "iterator_in_nbr": [4, 6, 10], "iterator_nbr": [4, 6, 10], "iterator_out_edg": [4, 5, 6, 8, 10], "iterator_out_nbr": [4, 6, 10], "iterator_unsorted_edg": [4, 10], "iterator_vert": [4, 6, 10], "itertool": [29, 35, 48, 52], "itoh": 21, "its": [1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 57, 58, 59, 60, 62, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 80, 81], "itself": [1, 12, 18, 19, 20, 21, 23, 32, 35, 38, 40, 46, 49, 50, 52, 54, 55, 64, 73, 80], "iv": 76, "ivanovivanovfaradjev": [28, 52], "ivanovivanovfaradjevgraph": [28, 52], "ivcu_": 35, "ivo": 28, "ivuqwk": 38, "j": [0, 1, 4, 11, 15, 16, 17, 20, 21, 22, 25, 29, 30, 31, 32, 33, 35, 36, 38, 39, 41, 42, 43, 52, 63, 64, 66, 67, 73, 75, 76, 77], "j1": [33, 52], "j2": [33, 52], "j2graph": [28, 52], "j_2": [28, 33, 52, 76], "j_q": [28, 52], "ja": 21, "jain": 46, "janko": [33, 52], "janko_graph": [33, 52], "jankokharaghanigraph": [33, 52], "jankokharaghanitonchevgraph": [33, 52], "janmenjaya": [21, 25, 29, 33, 38, 52, 66, 67], "jason": [35, 38, 40, 52], "java": 35, "javascript": [0, 35], "jcc": [35, 57], "jean": [23, 38, 51], "jernej": 79, "jeroen": 15, "jfk": 75, "jfraymond": 51, "jg": 40, "jk2002": [33, 52], "jk2003": 76, "jkt2001": [33, 52], "jmol": 35, "jnc2010": 75, "job": [39, 64], "joeycdozdkqgo": 35, "john": [35, 76], "johnson": [3, 20, 28, 29, 35, 38, 52, 76], "johnson_boost": [20, 35, 38], "johnson_closeness_centr": 3, "johnson_graph": [29, 52], "johnson_shortest_path": 3, "johnsongraph": [29, 38, 52, 76], "join": [2, 16, 20, 25, 29, 33, 35, 38, 44, 48, 49, 52, 55, 56, 67], "jonathan": 74, "jonsson": [29, 35, 38, 52], "journal": 52, "joyner": [1, 38], "jpd2018": [16, 52], "juli": 58, "julian": 38, "jump": 22, "june": 58, "jupyt": [40, 51], "jupyterlab": 51, "just": [4, 17, 18, 19, 20, 22, 29, 33, 35, 38, 39, 43, 46, 50, 52, 55, 56, 68, 71, 80, 81], "jv": 38, "k": [1, 3, 4, 9, 10, 12, 13, 14, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 49, 50, 52, 54, 56, 60, 63, 67, 68, 69, 70, 71, 73, 75, 76, 77, 79], "k0": 76, "k12": 35, "k22": 35, "k23": 35, "k3": [35, 38, 75], "k33": [35, 38], "k33_minor": 38, "k4": [9, 18, 35, 38, 50, 52, 67, 75], "k43": 35, "k5": 38, "k5_minor": 38, "k8": [29, 52], "k_": [33, 35, 38, 52, 64, 66, 67, 68, 69, 72, 76], "k_0": 76, "k_1": [29, 52, 76], "k_2": [29, 38, 52, 67], "k_3": [35, 38, 64], "k_4": [33, 38, 52, 62, 64, 66, 67], "k_5": [35, 38, 72], "k_6": 37, "k_7": 37, "k_8": [29, 37, 52], "k_i": [32, 35, 52], "k_k": [29, 38, 52], "k_m": [26, 52], "k_n": [26, 29, 38, 52, 68], "k_n1": [29, 52], "kai2012": 35, "kaiser": 35, "kantor": [29, 33, 35, 36, 38, 52], "karan": 59, "karlsruh": 4, "karp": 12, "kassel": 4, "kate": 38, "katz": 35, "katz_centr": 35, "katz_matrix": 35, "kau1968": 21, "kautz": 21, "kautz_graph": 21, "keep": [1, 4, 11, 19, 20, 33, 35, 38, 50, 52, 61, 73, 77], "keep_label": [18, 20, 35, 75], "kei": [1, 5, 8, 14, 17, 18, 20, 29, 35, 36, 38, 39, 40, 46, 48, 50, 52, 55, 57, 58, 62, 67, 71, 74, 80], "kept": [18, 20, 35, 71], "kerbosch": 38, "kernel": [12, 21, 38], "keshav": 52, "keyerror": 35, "keyword": [6, 12, 20, 35, 38, 39, 40, 67, 80], "kg": [29, 52], "kharaghani": [33, 52], "khckm": [33, 52], "kihecqpokvkew_wmnkqpwwcrkoowskigcqhwt": 56, "kim": [32, 52], "kin1992": 50, "kind": [3, 11, 18, 19, 26, 35, 36, 38, 47, 52, 56, 66], "king": [3, 26, 52], "kingdom": [34, 52], "kinggraph": [26, 52], "kini": 52, "kinnerslei": 50, "kirchhoff": [35, 38], "kirchhoff_matrix": 35, "kirchhoff_symanzik_polynomi": 38, "kirkman": [21, 38, 40, 52, 56, 74], "kirkmann": 38, "kirov": 51, "kite": [33, 52], "kittel": [33, 52], "kittellgraph": [33, 52], "kj": 21, "kkd1995": 38, "klau": 47, "klein": [33, 52], "klein3regulargraph": [33, 52], "klein7regulargraph": [33, 52], "klein_graph": [33, 52], "km1997": [29, 52], "km2015": [33, 52], "kmax": [32, 38, 52], "kmin": [38, 49], "kn": [29, 52, 71], "knauer": 69, "kneser": [29, 38, 52], "knesergraph": [29, 38, 52], "knew": 64, "knight": [26, 52], "knight_i": [26, 52], "knight_x": [26, 52], "knightgraph": [26, 52], "know": [6, 10, 16, 18, 20, 21, 28, 29, 32, 33, 35, 38, 39, 40, 43, 45, 47, 50, 52, 59, 62, 64, 76], "knowledg": [13, 33, 52], "known": [2, 3, 9, 18, 28, 29, 33, 35, 36, 37, 38, 52, 59, 69, 76, 81], "knuth": 39, "ko": [40, 56], "koh": 21, "koh2004": 2, "kohtindelldigraph": 21, "kolja": 69, "konc": [12, 38], "konig": 12, "kothari": [33, 52], "kprwz2010": 76, "kr2001b": 21, "kr2005": 21, "krackhardt": [33, 52], "krackhardt_kite_graph": [33, 52], "krackhardtkitegraph": [3, 18, 20, 33, 35, 38, 52, 56], "kraus": 47, "kre2002": [33, 52], "krg1996": [3, 22, 35], "kroneck": 35, "kronecker_product": 35, "kruskal": [3, 35, 75], "kruskal_boost": 35, "kruskal_iter": 75, "kruskal_iterator_from_edg": 75, "kth": 35, "kuan": 35, "kuratowski": [35, 72], "kv2003": [32, 52], "kvler": 56, "kw": 40, "kwarg": 6, "kwd": [6, 12, 35, 38, 40, 55, 56, 57, 67, 79], "k\u0151nig": 12, "l": [1, 3, 4, 5, 6, 8, 9, 10, 12, 18, 20, 21, 25, 29, 32, 33, 35, 36, 38, 39, 40, 43, 48, 50, 52, 54, 55, 56, 57, 59, 64, 66, 67, 68, 71, 73, 75, 76, 77, 80, 81], "l1": [29, 33, 52], "l2": [29, 33, 52], "l3": [33, 38, 52, 59], "l4": [33, 52], "l_": [29, 33, 52], "l_0": [30, 32, 52], "l_1": [30, 32, 52, 77], "l_2": 77, "l_g": 76, "l_i": [30, 32, 52], "l_k": [30, 32, 52], "l_m": 76, "la": 39, "label": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 20, 21, 22, 25, 29, 30, 32, 33, 35, 36, 39, 42, 45, 46, 48, 49, 50, 52, 53, 54, 55, 57, 58, 64, 66, 67, 69, 70, 71, 74, 75, 77, 80], "label1": 35, "label2": 35, "label_fonts": 57, "label_nice_tree_decomposit": 49, "label_styl": 35, "label_td": 49, "labelledrootedtre": [38, 42], "labelout": 55, "lack": 58, "ladder": [25, 29, 33, 38, 52, 66, 67], "laddergraph": [25, 29, 35, 52, 56, 67], "laguerr": 12, "laid": [35, 36], "laigl": [29, 52], "lambda": [1, 3, 4, 5, 8, 9, 11, 18, 20, 21, 22, 27, 29, 30, 33, 35, 38, 46, 48, 52, 55, 57, 64, 66, 67, 69, 71, 74, 75, 76, 80], "laminar": 67, "land": [34, 52], "langl": [27, 52], "languag": 35, "laplacian": [29, 35, 52], "laplacian_matrix": [29, 35, 52], "larg": [12, 19, 20, 22, 26, 27, 28, 29, 32, 35, 38, 43, 50, 52, 59, 62, 76], "larger": [8, 11, 12, 16, 18, 22, 25, 26, 29, 35, 36, 38, 43, 50, 52, 57, 59, 63, 74], "largest": [11, 13, 15, 18, 20, 22, 29, 32, 35, 38, 49, 52, 59, 77], "largewittgraph": [28, 52], "last": [1, 3, 4, 5, 6, 8, 9, 11, 12, 18, 20, 21, 22, 24, 25, 28, 29, 33, 35, 36, 38, 39, 40, 46, 47, 48, 49, 52, 55, 61, 62, 67, 73, 75, 76, 77, 80], "later": [18, 35, 38, 50], "latest": [41, 62], "latex": [0, 35, 38, 48, 57], "latex_opt": [35, 55], "latex_standalon": 35, "latin": [29, 52, 76], "latin_squares_graph_paramet": 76, "latter": [27, 29, 33, 35, 52, 76], "lattic": 52, "launch": [38, 69], "law": [32, 52], "lax": 75, "layer": [29, 33, 52], "layout": [4, 20, 21, 25, 29, 31, 32, 33, 35, 36, 38, 43, 50, 52, 55, 56, 57, 58], "layout_acycl": [20, 35], "layout_acyclic_dummi": 20, "layout_blah": 35, "layout_circular": 35, "layout_default": 35, "layout_extend_randomli": 35, "layout_forest": 35, "layout_funct": 36, "layout_graphviz": [20, 35, 55], "layout_opt": 35, "layout_planar": 35, "layout_rank": [20, 35], "layout_split": 36, "layout_spr": 35, "layout_tre": [35, 57], "layout_tutt": 35, "lazi": [35, 43, 50], "lazili": [43, 50], "lb1962": 2, "lb2": 22, "lbm": 22, "lceil": [28, 29, 38, 39, 49, 52, 63, 69], "lcf": [29, 33, 52], "lcf_notat": [29, 52], "lcfgraph": [14, 29, 33, 38, 52], "lcg": 40, "ldot": [1, 3, 13, 20, 22, 26, 29, 30, 35, 38, 39, 42, 45, 49, 52, 77], "le": [1, 43, 50], "lead": [4, 19, 20, 21, 27, 29, 33, 35, 38, 43, 50, 52, 60, 70], "leaf": [4, 16, 23, 32, 35, 46, 49, 52], "leaf_prob": 46, "least": [4, 6, 10, 11, 12, 14, 18, 19, 20, 21, 26, 28, 29, 32, 33, 35, 38, 39, 42, 43, 46, 49, 50, 52, 66, 67, 69, 74, 75, 77, 81], "least_effective_resist": 38, "leav": [16, 17, 18, 20, 23, 27, 32, 33, 35, 38, 42, 46, 47, 52, 55, 67, 73, 77], "led1965": [29, 52], "lederberg": [29, 52], "left": [4, 8, 12, 20, 25, 29, 30, 32, 33, 35, 38, 39, 45, 48, 52, 55, 57, 69, 73, 77], "leftarrow": 4, "leftmost": 21, "leftov": 38, "leftrightarrow": 38, "legaci": 35, "legal": [26, 29, 52], "legibl": 35, "lehamn": [29, 52], "lein": 38, "leinster": 38, "lemma": 38, "len": [1, 4, 9, 10, 12, 18, 19, 20, 21, 22, 23, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 47, 48, 49, 52, 56, 60, 61, 62, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 79], "length": [1, 3, 4, 8, 11, 12, 17, 20, 21, 22, 23, 25, 27, 29, 30, 32, 33, 35, 36, 38, 40, 46, 48, 49, 50, 52, 55, 56, 59, 64, 66, 70, 71, 76, 81], "length_and_string_from_graph6": 36, "length_of_tree_decomposit": 49, "leonard": [1, 28, 52], "leonardgraph": [28, 52], "leq": [3, 11, 13, 17, 20, 21, 22, 25, 28, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43, 49, 50, 52, 59, 60, 63, 65, 66, 69, 76, 77], "less": [0, 4, 18, 21, 23, 25, 28, 29, 32, 33, 35, 36, 38, 39, 40, 43, 50, 52, 56, 59, 69, 70, 77, 80], "let": [1, 13, 22, 25, 27, 28, 29, 33, 35, 36, 38, 39, 41, 42, 45, 46, 50, 52, 59, 62, 66, 67, 77], "letter": [21, 38, 52], "level": [1, 4, 5, 7, 8, 12, 17, 18, 20, 23, 29, 35, 38, 39, 43, 45, 46, 50, 52, 57, 59, 66, 67, 69], "level_set": 20, "lex": [35, 38, 77], "lex_bf": [35, 38, 77], "lex_df": [35, 77], "lex_down": [35, 77], "lex_m": [38, 77], "lex_m_fast": [38, 77], "lex_m_slow": [38, 77], "lex_up": [35, 77], "lexbf": [35, 38, 46, 48, 77], "lexbfs_ord": 48, "lexdf": [35, 77], "lexdown": [35, 77], "lexic": 38, "lexicograph": [19, 35, 38, 47, 48, 67, 77], "lexicographic_breadth": [35, 77], "lexicographic_label": 48, "lexicographic_product": [35, 67, 77], "lexm": [38, 77], "lexup": [35, 77], "lf": [32, 52], "lfloor": [28, 29, 32, 38, 52, 63, 75], "lg": [2, 38, 64], "li": [45, 64], "lib": [12, 20, 25, 27, 28, 29, 30, 33, 35, 38, 52, 66, 76, 79], "libgap": [29, 52], "librari": [3, 18, 20, 27, 35, 38, 52, 55, 62, 70], "libya": [34, 52], "licens": 70, "lie": [19, 27, 32, 38, 52, 67], "lienkaemp": 38, "life": 11, "lifo": 4, "lift": 79, "lighter": 7, "lih": 35, "like": [3, 5, 8, 10, 25, 26, 27, 29, 32, 35, 38, 46, 49, 52, 55, 56, 58, 73, 77, 80], "likewis": [29, 52], "limit": [9, 32, 38, 50, 52], "lin": [33, 35, 52], "line": [0, 2, 12, 17, 20, 21, 25, 27, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 52, 55, 57, 58, 60, 62, 76], "line_graph": [2, 25, 29, 35, 38, 52, 62, 64], "line_graph_forbidden_subgraph": [29, 35, 38, 52, 62, 64], "linear": [1, 12, 17, 18, 19, 20, 21, 22, 23, 27, 28, 33, 35, 38, 39, 43, 46, 49, 50, 52, 55, 62, 66, 67, 69, 76], "linear_arbor": 39, "linear_ordering_to_path_decomposit": 50, "linearcod": 76, "linesep": 44, "linestyl": 57, "link": [8, 17, 20, 21, 23, 30, 32, 33, 35, 38, 39, 45, 52, 66, 67, 69, 74, 77], "link_dist": 58, "link_strength": 58, "linklessli": [29, 52], "lint": [28, 52], "list": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 32, 33, 35, 36, 38, 39, 40, 42, 45, 46, 48, 50, 52, 54, 55, 57, 58, 59, 60, 61, 62, 64, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80], "list_edg": 11, "list_of_edg": [20, 35, 38, 74, 75, 77], "list_of_vertic": [20, 38], "listen": 64, "lists_of_paramet": 35, "littl": [33, 52, 80], "livingston": [33, 52], "livingstone_graph": [33, 52], "livingstonegraph": [33, 52], "ljubljana": [33, 38, 52], "ljubljana_graph": [33, 52], "ljubljanagraph": [33, 38, 52], "lkol2002": [29, 52], "ll": [23, 33, 38, 52], "lla": 48, "llcg": [18, 38], "llg": [2, 38], "llwc2011": [29, 52], "lm": [33, 52], "lm2024": [21, 29, 33, 38, 52, 66, 67], "lo": 40, "load": [12, 55, 62, 67], "load_afil": [12, 67], "lobster": [32, 35, 38, 52], "local": [28, 32, 33, 52, 62, 76], "locally_gq42_distance_transitive_graph": [28, 52], "localmclaughlingraph": [33, 52], "locat": [19, 29, 38, 40, 52, 55], "lock": 73, "log": [3, 7, 11, 35, 38, 71, 75, 81], "log_2": [32, 52], "lokesh": 46, "lokshtanov2009": 49, "lollipop": [29, 52], "lollipopgraph": [18, 29, 35, 52, 56], "long": [4, 9, 11, 12, 14, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 31, 32, 33, 35, 37, 38, 39, 43, 50, 52, 55, 57, 59, 61, 62, 67, 68, 71, 76], "longer": [4, 10, 13, 25, 35, 40, 52], "longest": [35, 36], "longest_cycl": 35, "longest_path": 35, "look": [12, 17, 22, 23, 25, 28, 29, 35, 36, 38, 45, 52, 55, 64], "lookuperror": [4, 5, 8, 38], "loop": [1, 4, 5, 6, 7, 9, 10, 11, 12, 18, 20, 21, 22, 25, 29, 35, 36, 37, 38, 39, 42, 48, 52, 53, 54, 55, 56, 57, 59, 64, 66, 67, 71, 75, 77, 79], "loop_edg": [35, 67], "loop_plac": 55, "loop_siz": 57, "loop_vertic": [35, 67], "lose": 20, "loss": 38, "lost": [19, 35, 38], "lot": [43, 50, 55], "lov1979": 65, "lov1983": [33, 52], "lovasz_numb": 40, "lovasz_theta": [38, 65], "love": 38, "lov\u00e1sz": [0, 33, 38, 52], "lov\u00e1sz_numb": [38, 65], "low": [22, 29, 32, 35, 40, 50, 52], "lower": [3, 9, 18, 20, 22, 25, 29, 35, 37, 38, 39, 43, 49, 50, 52, 59, 71], "lower_bound": [43, 50], "lowlink": [11, 20], "lp": [1, 12, 19, 20, 35, 38, 39, 66, 67], "lp_match": [38, 66, 67], "lr": 35, "lr2004": [38, 66, 67], "ls1981": 76, "lub1987": 38, "lucchesi": [33, 52, 67], "lump": 12, "lw": [40, 55], "ly": [19, 38], "lybanon": 47, "lz2001": [38, 66, 67], "lz2004": 67, "lzf": 52, "m": [1, 2, 3, 11, 12, 19, 20, 21, 22, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 41, 46, 47, 48, 50, 52, 54, 55, 59, 60, 66, 67, 69, 71, 75, 76, 77, 79, 81], "m22": [33, 52], "m22graph": [33, 52], "m3": 52, "m4": 52, "m5": 52, "m_": [28, 29, 33, 38, 52], "m_0": [29, 52], "m_1": [29, 38, 39, 46, 52, 59], "m_2": [29, 38, 46, 52, 59], "m_3": 46, "m_4": [29, 46, 52], "m_alternating_even_mark": 66, "m_i": [29, 38, 39, 52], "m_k": [29, 38, 39, 52], "m_n": [16, 46, 52], "ma": 38, "mackai": 12, "macro": 35, "mad": [38, 69], "mad_g": 38, "mad_h": 38, "madagaskar": [34, 52], "made": [1, 3, 11, 23, 27, 29, 33, 35, 38, 43, 45, 50, 52, 54, 67, 68, 76], "maffei": 28, "magick": 55, "magnifi": [38, 63], "magnitud": 38, "magnitude_funct": 38, "mai": [1, 4, 8, 9, 16, 18, 19, 20, 21, 22, 25, 26, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 50, 52, 53, 54, 55, 57, 62, 66, 67, 69, 71, 73, 76, 77, 80], "main": [11, 18, 35, 38, 43, 52, 64], "mainli": [4, 5, 8, 26, 29, 39, 52, 58], "maintain": [4, 22, 29, 36, 52, 59, 62, 77], "major": 1, "make": [1, 4, 5, 8, 12, 14, 15, 16, 19, 20, 21, 22, 25, 27, 29, 32, 33, 35, 37, 38, 40, 47, 49, 52, 55, 57, 69, 76, 79], "make_clique_bipartit": 12, "make_labelled_rooted_tre": 42, "make_nice_tree_decomposit": 49, "make_tre": 42, "makhnev": [52, 76], "manag": [10, 55, 76, 79], "mandatori": [29, 52], "mani": [1, 5, 8, 11, 19, 20, 22, 25, 26, 29, 30, 32, 33, 34, 35, 38, 40, 50, 52, 55, 56, 70, 71, 73], "manipul": [40, 55], "manner": [25, 29, 52], "mannheim": 4, "manual": [1, 29, 52], "map": [0, 1, 3, 4, 12, 18, 22, 23, 28, 29, 30, 32, 35, 38, 52, 57, 64, 70, 76], "map1": 35, "map2": 35, "mapsto": [1, 35, 38, 41], "mar2009a": 38, "marc": 46, "marco": 52, "margin": 55, "mark": [30, 34, 40, 52], "markers_api": 35, "markstroem": [33, 52], "markstroemgraph": [33, 52], "markstr\u00f6m": [33, 52], "mask": 47, "mass": [20, 35, 71], "master": 35, "mat1978": [29, 52], "match": [0, 12, 28, 29, 30, 33, 35, 38, 39, 46, 52, 62, 70, 76], "matchabl": 67, "matching_": [12, 38, 66], "matching_covered_graph": 67, "matching_polynomi": [12, 38, 66, 68], "matchingcoveredgraph": 67, "matchpoli": [38, 68], "matchstick": [33, 52], "math": [14, 29, 35, 38, 52, 57, 68], "mathbb": [28, 38, 52], "mathcal": [1, 33, 38, 39, 52, 66], "mathemat": [38, 55, 65], "mathon": [29, 33, 52, 76], "mathonpseudocyclicmerginggraph": [29, 52], "mathonpseudocyclicstronglyregulargraph": [29, 52], "mathonstronglyregulargraph": [33, 52], "mathworld": [28, 29, 33, 35, 52], "matplotlib": [35, 38, 55, 57], "matric": [11, 12, 21, 22, 28, 29, 35, 38, 52, 76], "matrix": [1, 2, 3, 5, 9, 11, 12, 20, 21, 22, 25, 29, 33, 35, 38, 39, 41, 44, 47, 52, 54, 67, 73, 76], "matrix_funct": 52, "matrix_numpy_integer_dens": 35, "matrix_real_double_dens": 35, "matrixspac": 12, "matrixtreetheorem": 35, "matroid": [35, 38], "matter": [1, 35], "matth": 55, "maurer": [38, 46], "max": [3, 11, 21, 22, 25, 28, 35, 37, 38, 39, 40, 43, 50, 52, 57, 59, 60, 66, 69, 77], "max_": [38, 43, 49, 50, 59], "max_cliqu": 15, "max_cut": 35, "max_degre": 40, "max_depth": 46, "max_dist": 57, "max_edg": 9, "max_eigenvalu": 40, "max_fan_out": 46, "max_field_s": 40, "max_flow": 35, "max_i": [11, 35], "max_intersect": 60, "max_it": 36, "max_length": [20, 35, 71], "max_level": 38, "max_out_degre": 21, "max_prefix_length": [38, 50], "max_prefix_numb": [38, 50], "max_siz": [15, 38], "max_vert": 52, "maxcliqu": [12, 38], "maxflow_valu": 35, "maxim": [1, 4, 15, 17, 18, 33, 35, 37, 38, 39, 46, 52, 61, 64, 66, 67, 74, 77], "maxima": 52, "maximal_barri": 67, "maximizedegre": 79, "maximum": [1, 3, 9, 11, 12, 15, 16, 20, 22, 23, 29, 32, 35, 36, 37, 38, 39, 43, 46, 47, 49, 50, 52, 54, 56, 59, 60, 61, 65, 66, 67, 69, 71, 75, 76, 77], "maximum_average_degre": [38, 69], "maximum_cardinality_search": [38, 77], "maximum_cardinality_search_m": [38, 42, 77], "maximum_cut": 35, "maximum_edg": 52, "maximum_face_s": 52, "maximum_leaf_numb": [23, 35], "mbostock": 58, "mbox": [12, 17, 20, 23, 35, 38, 39, 66], "mc": [38, 77], "mcad": 38, "mccuaig": 67, "mcg": 38, "mcgee": [33, 35, 52], "mcgee_graph": [33, 52], "mcgeegraph": [33, 35, 52], "mck1998": 21, "mck2015": 36, "mckai": [35, 52, 60], "mckee": 3, "mcl": 76, "mclaughlin": [33, 52], "mclaughlingraph": [33, 52, 76], "mcqd": [12, 38], "md": 46, "md_": 3, "md_tree_to_graph": 46, "mean": [1, 4, 6, 12, 17, 18, 20, 22, 23, 29, 32, 33, 35, 36, 38, 39, 41, 43, 45, 50, 52, 55, 62, 64, 66, 67, 69, 75, 76], "meaning": [29, 52], "meant": [13, 28, 33, 35, 39, 44, 52, 71], "meantim": [9, 18, 35, 38], "meanwhil": 39, "measur": [35, 41, 49, 55], "mechan": [6, 35], "medium": [29, 52], "meet": [25, 27, 29, 33, 52, 55, 70], "megr": 76, "melbourn": 35, "member": [34, 38, 52], "membership": 80, "memori": [3, 4, 7, 10, 11, 18, 20, 22, 29, 35, 38, 39, 43, 50, 52, 80, 81], "mend": [29, 52], "menger": 35, "mention": [29, 33, 52, 67], "menu": 58, "meredith": [33, 52], "meredith_graph": [33, 52], "meredithgraph": [33, 52], "merg": [20, 29, 33, 35, 38, 49, 52, 55, 67], "merge_vertic": [18, 35, 38, 67], "messag": [1, 4, 52], "met": [38, 75], "method": [2, 3, 4, 7, 9, 11, 12, 14, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 46, 48, 55, 57, 58, 63, 64, 71, 79, 80], "metric": [35, 38], "mf": [33, 52], "mg1992": 39, "mheghc": [33, 52], "mi": 38, "mia": 75, "micha": 63, "michael": [21, 29, 38, 47, 52], "michel": [38, 59], "michigan": [34, 52], "micro": 35, "mid": [27, 43, 52, 67], "middl": [23, 29, 32, 33, 52, 55], "midpoint": 55, "might": [3, 4, 11, 12, 13, 18, 24, 29, 30, 35, 38, 43, 52, 67, 68], "mike": [20, 79], "mil2017": 77, "millennia": 37, "miller": [12, 14, 20, 21, 29, 36, 38, 52, 56, 66, 68], "million": [38, 68], "millisecond": 37, "milp": [1, 12, 17, 18, 20, 23, 35, 38, 39, 66, 67, 69], "min": [14, 18, 21, 22, 28, 30, 35, 38, 40, 47, 52, 60, 66, 75], "min_": [43, 50], "min_cycle_basi": 3, "min_degre": 40, "min_edg": 9, "min_eigenvalu": 40, "min_genus_backtrack": 37, "min_i": [11, 35], "min_out_degre": 21, "min_siz": [1, 15, 38], "min_spanning_tre": [3, 22, 35, 38, 57, 75], "min_vertex_cover_s": 40, "mind": [9, 11, 17, 38, 64], "mine": 52, "minh": 52, "minim": [0, 1, 3, 12, 18, 19, 20, 23, 29, 32, 35, 37, 38, 39, 43, 47, 49, 50, 52, 55, 69, 74, 75, 77], "minimal_dominating_set": [23, 38], "minimal_schnyder_wood": 74, "minimal_separ": [18, 38], "minimizedegre": 79, "minimizesingledegre": 79, "minimum": [1, 3, 9, 12, 15, 18, 19, 20, 21, 23, 29, 32, 35, 37, 38, 39, 41, 43, 49, 50, 52, 55, 57, 60, 61, 63, 71, 75, 76], "minimum_connect": 52, "minimum_cycle_basi": [3, 35], "minimum_degre": 52, "minimum_edg": 52, "minimum_outdegree_orient": [38, 69], "minnesota": [34, 52], "minor": [29, 33, 38, 39, 52, 59, 62, 67], "minor_": 38, "minpoli": 38, "minu": [12, 14, 21, 26, 29, 35, 38, 49, 52, 60, 68], "mip": [1, 17, 18, 19, 20, 23, 25, 26, 29, 33, 35, 38, 39, 43, 45, 50, 52, 60, 66, 69], "misc": [32, 35, 40, 44, 52, 55, 76], "miscellan": [20, 35, 38, 52, 67], "miss": [3, 4, 19, 21, 27, 33, 35, 38, 39, 52, 76], "mit": 70, "mittal": 38, "mix": [1, 12, 17, 18, 20, 23, 35, 38, 39, 43, 50, 56, 66, 67, 69], "mixedintegerlinearprogram": [1, 12, 17, 18, 20, 23, 35, 38, 39, 43, 50, 66, 67, 69], "mk": [33, 52], "mkgraph": 47, "mkoepp": 52, "ml": 67, "mlh2008": 22, "mln": [23, 35], "mm": 55, "mmrs2022": 35, "mn": [3, 29, 38, 52, 69, 77], "mobiuskantorgraph": [33, 52], "mod": [21, 29, 52], "mode": [12, 35, 40, 45, 56, 57], "model": [17, 21, 25, 32, 36, 38, 52, 73], "moder": 37, "modern": 37, "modif": [23, 33, 35, 38, 52, 61, 67], "modifi": [1, 3, 13, 16, 20, 21, 23, 35, 38, 52, 54, 55], "modifyiong": 12, "modul": [0, 1, 2, 3, 6, 7, 9, 10, 12, 13, 15, 16, 17, 18, 20, 21, 23, 24, 25, 28, 29, 30, 32, 33, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81], "modular": [0, 35, 38, 62], "modular_decomposit": [38, 46, 62], "module_form": 46, "modulu": [11, 35], "moebiu": [33, 35, 38, 52, 67], "moebiuskantorgraph": [33, 35, 36, 38, 52], "moebiusladdergraph": [25, 52, 67], "moment": [17, 35, 45, 62], "monochromat": 1, "monomi": [35, 38], "monteil": 58, "moor": [33, 52], "more": [1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 80], "moreov": [28, 52], "moretti": 38, "morphism": [35, 52], "moser": [33, 52], "moser_spindl": [33, 52], "moserspindl": [33, 52], "most": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 20, 21, 22, 23, 24, 26, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 47, 48, 49, 50, 52, 54, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 75, 76, 80], "most_common_neighbor": 38, "mostli": [7, 20, 48], "mous": 20, "move": [25, 26, 29, 52, 55], "movement": [26, 52], "mpc": [38, 66], "mpn": 48, "mpppkqynooookhhdbp": 56, "mr1985": 76, "mu": [9, 12, 27, 28, 29, 30, 33, 38, 52, 68, 76], "much": [3, 4, 7, 10, 11, 13, 17, 18, 22, 25, 29, 33, 35, 38, 39, 49, 50, 52, 56, 59, 61, 71], "multi": [12, 18, 20, 22, 29, 35, 38, 52, 56, 57, 67, 69, 75, 79], "multicommod": 35, "multicommodity_flow": 35, "multidigraph": [20, 54], "multiedg": [9, 11, 12, 18, 20, 35, 38, 48, 54, 57, 64, 67, 69, 71, 75, 79], "multiedgedataview": 54, "multigraph": [3, 18, 29, 35, 37, 38, 51, 52, 54, 58, 69], "multiline_adjlist": 35, "multipartit": [25, 29, 38, 52, 76], "multipl": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 18, 19, 20, 22, 24, 29, 32, 33, 35, 38, 42, 48, 50, 52, 54, 57, 59, 63, 64, 66, 67, 69, 71, 75, 76, 77, 79, 80], "multiple_edg": [4, 5, 6, 8, 10, 35], "multiple_set": 60, "multipli": [27, 29, 35, 52, 55], "multiset": 1, "multiwai": 35, "multiway_cut": 35, "munchen": 4, "murti": [33, 52, 67], "murtygraph": [33, 52, 67], "must": [1, 3, 4, 6, 8, 11, 12, 15, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 32, 33, 35, 38, 39, 41, 45, 46, 48, 50, 52, 55, 56, 66, 67, 69, 71, 76], "mutabl": [4, 12, 16, 20, 21, 25, 35, 36, 40, 45, 52, 53, 56, 64, 69], "mutual": [12, 67], "mutualis": 35, "mutzel": [18, 38], "muz2007": [29, 52], "muzychuk": 76, "muzychuks6graph": [29, 52, 76], "mw1990": [32, 52], "my": 55, "my_label": [35, 55], "mycielski": [29, 52], "mycielskian": [29, 52], "mycielskigraph": [29, 50, 52], "mycielskistep": [29, 52], "myrvold": 35, "m\u00f6biu": [25, 29, 33, 36, 52, 67], "m\u00f6bius_ladd": [25, 52], "n": [1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 56, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81], "n1": [25, 29, 32, 33, 35, 52], "n2": [12, 21, 25, 29, 32, 33, 34, 35, 52], "n3": 35, "n_1": [26, 29, 52], "n_2": [26, 29, 52], "n_d": [26, 52], "n_edg": 11, "n_g": [22, 38], "n_i": [26, 52], "n_u": [22, 35, 70], "n_v": [22, 35], "naiv": [36, 37, 59, 61], "name": [1, 3, 4, 6, 11, 12, 16, 20, 21, 22, 25, 26, 27, 29, 30, 32, 33, 35, 36, 38, 40, 46, 49, 52, 55, 58, 62, 67, 68, 73, 76], "namedtemporaryfil": [12, 35], "naphthalen": [38, 52], "nathann": [11, 15, 17, 22, 35, 36, 38, 39, 45, 47, 50, 52, 58, 62, 64, 73, 81], "nativ": [7, 11, 35, 38], "natur": [5, 8, 12, 21, 35, 38, 39, 45, 46, 47, 52, 55, 70], "nauru": [33, 52], "nauru_graph": [33, 52], "naurugraph": [33, 52], "nauti": [18, 21, 29, 35, 38, 52, 60], "nauty_directg": [21, 38, 69], "nauty_genbg": 52, "nauty_geng": [21, 52], "nauty_genktreeg": 52, "nauty_gentreeg": [29, 52], "nauty_posetg": 21, "nb_color": 39, "nb_u": 35, "nb_v": 35, "nbunch": 35, "ncol": 56, "nd": 52, "nd_i": 38, "near_polygon_graph": 28, "nearest": [32, 52], "nearpolygongraph": 28, "neato": [35, 55, 57], "necessari": [3, 17, 18, 20, 22, 29, 35, 38, 39, 43, 50, 52, 62], "necessarili": [3, 11, 17, 20, 32, 35, 38, 42, 45, 52, 70, 81], "need": [1, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 63, 64, 66, 67, 69, 70, 71, 74, 75, 76, 77, 79, 80], "neg": [3, 8, 17, 20, 21, 22, 35, 38, 71], "neigh": [30, 52], "neighbor": [4, 5, 6, 7, 9, 10, 11, 13, 17, 20, 22, 23, 25, 27, 29, 30, 32, 33, 34, 35, 38, 39, 43, 45, 46, 48, 50, 52, 66, 67, 70, 74, 75, 76, 77], "neighbor1": 35, "neighbor2": 35, "neighbor3": 35, "neighbor_in_iter": [20, 35], "neighbor_iter": [18, 35, 48, 66, 67], "neighbor_out_iter": [20, 35], "neighborhood": [2, 4, 22, 32, 33, 35, 38, 39, 43, 44, 46, 48, 50, 52, 77, 80], "neighbors_in": [10, 20, 35], "neighbors_out": [10, 20, 35], "neighbour": [4, 11, 43, 50, 52, 70], "neighbourhood": 52, "neither": [38, 46, 69], "neq": [13, 19, 21, 27, 29, 30, 33, 35, 45, 52, 76], "nest": [3, 38, 46], "nested_tuple_to_tre": 46, "net": 55, "network": [13, 21, 32, 33, 35, 38, 52], "networkx": [1, 12, 17, 18, 20, 21, 22, 24, 25, 29, 31, 32, 33, 35, 38, 39, 52, 54, 56, 59, 61, 63, 66, 67, 75], "networkx_graph": [12, 35], "neumann": [33, 52], "never": [20, 21, 22, 27, 35, 38, 43, 50, 52, 81], "nevertheless": [30, 52], "new": [1, 4, 5, 6, 8, 11, 12, 16, 18, 20, 21, 22, 27, 28, 29, 32, 33, 35, 38, 40, 45, 52, 55, 59, 61, 67, 69, 70, 73, 75], "new2003": 52, "newcommand": 35, "newg": 74, "newg2": 74, "newli": [28, 32, 52], "newman": [32, 52], "newvedge0": 18, "newvedge1": 18, "newvedge10": 18, "newvedge11": 18, "newvedge2": 18, "newvedge3": 18, "newvedge4": 18, "newvedge5": 18, "newvedge7": 18, "newvedge8": 18, "newvedge9": 18, "next": [5, 8, 9, 12, 16, 17, 20, 21, 23, 25, 29, 32, 33, 35, 38, 40, 43, 50, 52, 60, 66, 67, 69, 71, 75], "next_tre": 16, "ng": 40, "nggwsojidbhh": 56, "nguyen": 52, "nice": [19, 22, 25, 33, 35, 38, 40, 49, 52, 55, 57, 62], "nice_copi": 35, "nice_td": 49, "nicer": 56, "nico": [15, 52], "nicola": [38, 55], "niger": [34, 52], "nihea": 56, "nina": 64, "nine": [33, 52], "niskanen": 15, "nk": [29, 52], "nkstargraph": [29, 52], "nl": [29, 33, 52, 76], "nm": [3, 19, 22, 26, 35, 38, 52, 59, 69, 77], "nn": [17, 38, 76], "no2003": [15, 38], "no_certif": 17, "no_nonfacial_quadrangl": 52, "node": [3, 4, 8, 11, 13, 16, 18, 19, 20, 21, 22, 25, 29, 31, 32, 33, 35, 38, 40, 42, 46, 47, 49, 52, 53, 55, 57, 58, 60, 62, 71, 74], "node92": 35, "node_": 55, "node_0": [35, 55], "node_1": [35, 55], "node_10": 35, "node_11": 35, "node_2": 35, "node_3": 35, "node_4": 35, "node_5": 35, "node_6": 35, "node_7": 35, "node_8": 35, "node_9": 35, "node_typ": 46, "nodetyp": 46, "nois": [35, 57], "non": [1, 3, 4, 9, 12, 14, 19, 20, 21, 22, 25, 27, 29, 32, 33, 35, 36, 38, 39, 40, 41, 50, 52, 54, 56, 60, 62, 63, 66, 67, 69, 76], "nonadjac": [66, 67], "nonbipartit": [38, 66, 67], "noncub": [33, 52], "nondegener": [27, 52], "none": [1, 3, 4, 5, 6, 8, 9, 10, 12, 14, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 38, 39, 40, 41, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80], "nonedgesonli": [35, 38], "nonempti": [35, 64, 76], "nonexist": 67, "nongener": [27, 52], "nonintuit": [35, 67], "nonisotrop": [27, 52], "nonisotropicorthogonalpolargraph": [27, 52, 76], "nonisotropicunitarypolargraph": [27, 52, 76], "nonloop": [66, 67], "nonneg": [1, 4, 5, 8, 11, 12, 20, 21, 23, 25, 29, 35, 38, 52, 60, 71], "nonplanar": [29, 33, 35, 38, 52, 67], "nonsens": 55, "nonsingular": [33, 52], "nonsolid": [33, 52], "nonsquar": 20, "nontriv": 67, "nontrivi": [21, 32, 33, 38, 52, 66, 67], "nontrivial_odd_compon": 67, "nontrivial_tight_cut": 67, "nontrivial_tight_cut_vari": 67, "nonzero": [3, 35, 38, 41, 76], "nonzero_posit": 38, "nonzero_positions_in_row": 52, "nor": [11, 18, 20, 33, 35, 38, 52, 62], "norin": [33, 52, 67], "norm": [27, 52], "normal": [13, 29, 33, 35, 46, 52, 55], "normal_subgroup": [29, 33, 52], "normalsubgroup": [29, 52], "north": 55, "noshita": 39, "notat": [27, 29, 30, 33, 38, 52, 73], "note": [1, 3, 4, 5, 6, 8, 12, 18, 20, 25, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 48, 52, 54, 55, 56, 57, 59, 61, 62, 66, 67, 75, 76, 77], "notebook": [40, 51, 55, 56], "noth": [9, 12, 13, 17, 19, 35, 38, 67], "notic": [20, 25, 30, 35, 38, 43, 50, 52], "notimplementederror": [4, 5, 6, 24, 28, 35, 40], "notion": [14, 17, 23, 29, 30, 35, 38, 52, 59, 77], "novel": [33, 52], "now": [2, 4, 12, 23, 30, 33, 35, 36, 38, 52, 57, 59, 64, 68, 76], "nowher": [27, 35, 52, 76], "nowhere0wordstwoweightcodegraph": [27, 52, 76], "nowhere_zero_flow": 35, "np": [1, 3, 19, 35, 38, 39, 49, 62, 66, 69], "np2007": [38, 81], "nrow": [25, 52, 56], "nrv": 48, "nscc": 11, "nstargraph": [29, 52], "nt": [33, 49, 52], "nt2007": [33, 52], "nu": [27, 33, 52, 76], "null": [11, 22, 38, 42, 75], "num": 40, "num_arc": [4, 5, 8], "num_block": [1, 60], "num_compon": 40, "num_cut_vertic": 40, "num_cycl": 40, "num_edg": [4, 6, 10, 20, 21, 29, 35, 40, 52, 78], "num_fac": 35, "num_fixed_point": 40, "num_hamiltonian_cycl": 40, "num_orbit": 40, "num_point": 1, "num_spanning_tre": 40, "num_vert": [4, 5, 6, 8, 10, 20, 21, 29, 32, 33, 35, 38, 52, 53, 78], "num_vertic": [35, 38, 40, 47, 56], "number": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 50, 52, 53, 54, 55, 57, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 81], "number_field": [11, 27, 28, 30, 33, 35, 52], "number_of": [40, 61], "number_of_brac": 67, "number_of_brick": 67, "number_of_children": 73, "number_of_descend": 74, "number_of_loop": [35, 67], "number_of_n_color": 39, "number_of_petersen_brick": 67, "number_of_set": 60, "number_of_vertic": 60, "numberfield": 35, "numbers_of_color": 39, "numer": [1, 12, 17, 18, 19, 20, 23, 25, 26, 29, 33, 35, 38, 39, 40, 43, 45, 47, 50, 52, 57, 58, 60, 66, 69], "numerica": 47, "numerical_mip": [33, 38, 52], "numpi": [12, 25, 32, 35, 38, 52, 60, 66], "nurnberg": 4, "nv": [33, 52], "nvert": [4, 5, 8], "nws2002": [32, 52], "nx": [20, 31, 38, 52], "nx_pydot": 35, "nzf": 35, "o": [1, 2, 3, 5, 7, 11, 16, 18, 19, 20, 21, 22, 25, 27, 28, 29, 32, 33, 35, 36, 38, 39, 40, 42, 44, 48, 52, 59, 66, 67, 69, 70, 71, 73, 75, 76, 77, 81], "o_": [17, 27, 52], "o_1": [27, 52], "o_6": [27, 52], "o_j": [27, 52], "oa": [29, 30, 36, 52, 56, 76], "oa0": [30, 52], "oa1": [30, 52], "oaa": [30, 52], "oab": [30, 52], "oacc": 36, "oadj": 4, "obgkqegw": [38, 54, 56, 57], "object": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 17, 18, 19, 20, 21, 24, 29, 30, 32, 35, 36, 37, 38, 39, 40, 43, 44, 46, 48, 49, 50, 52, 55, 56, 57, 58, 60, 61, 62, 64, 67, 69, 73, 74, 78, 79, 80], "obliqu": [29, 52], "observ": [3, 14, 22, 32, 33, 35, 38, 45, 49, 52, 68, 77], "obtain": [4, 11, 12, 13, 17, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 33, 35, 38, 39, 41, 47, 48, 50, 52, 55, 57, 59, 62, 63, 66, 67, 69, 76], "obviou": [29, 33, 39, 52], "obvious": [4, 12, 18, 20, 33, 35, 38, 39, 52, 57, 61, 64, 76, 77], "oc": 20, "occas": 1, "occupi": [38, 77], "occur": [20, 35], "occurr": [35, 36, 67, 73], "ock": 58, "octagon": [28, 52], "octahedr": [31, 38, 46, 52], "octahedralgraph": [12, 14, 31, 38, 46, 52, 79], "octahedron": [31, 46, 52, 64], "octob": [33, 52], "odd": [17, 19, 27, 28, 29, 33, 35, 38, 39, 52, 64, 66, 67, 69], "odd_cycl": 17, "odd_girth": 35, "oddcycl": 35, "oddgraph": [10, 22, 29, 37, 38, 52], "odot": [33, 38, 52, 66, 67], "oei": [16, 21, 29, 35, 52], "off": [29, 33, 35, 38, 40, 52, 55, 57, 75], "offend": 12, "offer": [25, 29, 52, 76], "offlin": 58, "often": [32, 35, 52, 55], "ofth": 67, "og": [29, 36, 52], "og_ukebg": 56, "ohcgk": [33, 52], "ohlj_": 35, "ohm": 38, "okg": [38, 40], "old": [51, 62], "older": 55, "olj2014": 35, "omega": [33, 38, 52], "omega_3": [27, 52], "omit": [1, 35, 52, 55], "on_embed": 35, "onc": [4, 11, 20, 29, 30, 33, 35, 38, 43, 45, 46, 50, 52, 55, 59, 70, 71], "one": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 80], "one_of": 40, "ones": [4, 17, 21, 22, 27, 29, 33, 38, 45, 52, 60, 73], "ones_matrix": 21, "onfroi": 58, "onli": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 45, 46, 48, 50, 52, 53, 55, 57, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 73, 75, 76, 77, 80], "onlin": 40, "only_bipartit": 52, "only_eulerian": 52, "onto": [12, 29, 52], "ooahca___": 36, "open": [33, 35, 51, 52, 56, 58, 80], "oper": [0, 3, 5, 8, 11, 16, 17, 19, 20, 22, 29, 33, 35, 38, 40, 41, 49, 52, 67, 80], "operand": 35, "operatornam": [20, 38], "oplu": [29, 52], "opportun": [25, 52], "oppos": [29, 45, 52], "opposit": [4, 11, 30, 35, 52, 70, 73], "opt": [35, 55], "optim": [1, 8, 12, 18, 19, 23, 35, 37, 38, 39, 43, 47, 49, 50, 59, 66, 67, 68, 69, 81], "optimal_ear_decomposit": 67, "optimis": [38, 39], "optimum": [38, 39], "option": [0, 1, 3, 4, 5, 8, 9, 11, 12, 14, 20, 21, 27, 28, 29, 30, 33, 35, 36, 38, 39, 40, 49, 50, 51, 52, 56, 57, 58, 60, 62, 65, 67, 68, 76, 79], "option_nam": 55, "option_valu": 55, "orang": [35, 51], "orb": 35, "orbit": [27, 29, 33, 35, 37, 52, 76], "orchid": 35, "ord": [35, 38, 75, 77], "order": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 45, 48, 49, 50, 52, 54, 55, 57, 59, 61, 62, 64, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79, 80, 81], "ordered_edg": 20, "orderli": [21, 52], "ordinari": 38, "org": [1, 12, 21, 25, 35, 38, 52, 55, 58, 62], "organ": [18, 25, 35, 52], "orient": [0, 4, 9, 10, 17, 18, 20, 21, 29, 35, 38, 52, 54, 57, 74], "origin": [1, 12, 14, 18, 20, 29, 33, 35, 38, 46, 47, 52, 64, 68, 70], "orthogon": [27, 29, 30, 33, 52, 76], "orthogonal_arrai": [30, 52], "orthogonal_poli": 12, "orthogonalarrayblockgraph": [29, 30, 52, 76], "orthogonaldualpolargraph": [27, 52], "orthogonalpolargraph": [27, 52, 76], "oss2009": [35, 75], "ostergard": 15, "other": [1, 3, 4, 5, 7, 10, 11, 12, 13, 14, 17, 18, 20, 21, 22, 23, 25, 27, 28, 29, 30, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 52, 54, 55, 56, 58, 62, 64, 66, 67, 70, 71, 73], "other_index": 46, "otherwis": [1, 2, 3, 4, 6, 12, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 32, 33, 35, 37, 38, 39, 42, 43, 45, 46, 49, 50, 52, 55, 59, 64, 66, 67, 69, 71, 72, 75, 76, 77], "oum": 47, "oum2009": 47, "our": [3, 28, 29, 33, 35, 36, 38, 48, 52, 73, 77], "out": [4, 5, 6, 8, 10, 11, 13, 20, 21, 22, 29, 32, 35, 36, 38, 43, 44, 45, 46, 50, 52, 55, 57, 64, 69, 75, 76], "out_branch": 20, "out_degre": [4, 5, 6, 8, 10, 11, 20, 35, 38, 69], "out_degree_iter": 20, "out_degree_sequ": 20, "out_neighbor": [4, 5, 8, 10], "out_neighbors_unsaf": 4, "outbound": [4, 6, 10], "outdegre": [20, 38, 69], "outedg": 35, "outer": [25, 29, 32, 33, 38, 52, 74], "outerplanar": [35, 62], "outgo": [4, 20, 35], "outgoing_edg": [20, 35], "outgoing_edge_iter": 20, "outlin": [55, 76], "outmultiedgedataview": [35, 54], "outneighbor": [4, 11, 21, 22], "output": [1, 3, 4, 6, 10, 11, 12, 13, 16, 17, 18, 20, 21, 22, 23, 25, 26, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 52, 55, 56, 59, 60, 62, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77], "output_as_graph": [38, 75], "output_list": 56, "outsid": [11, 19, 20, 27, 33, 38, 52], "outward": [17, 25, 35, 52], "over": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 15, 16, 18, 20, 21, 23, 24, 25, 28, 29, 32, 33, 35, 38, 39, 40, 41, 43, 49, 50, 52, 55, 59, 61, 63, 66, 67, 69, 71, 73, 75, 78, 79, 80], "overal": [16, 18, 38, 52, 55, 59], "overful": 38, "overlap": [8, 18, 25, 28, 35, 52, 55], "overlin": [33, 38, 47, 52, 65, 67, 68, 81], "overrid": [12, 25, 29, 33, 35, 52, 55], "overridden": [4, 35, 80], "overrul": 57, "overview": [0, 4, 5, 6, 8, 9, 10, 11, 20, 38, 52, 55, 70], "overwrit": [12, 20, 67], "overwritten": [20, 35, 55, 67], "ow": 40, "oweokcpwao": 20, "own": [4, 27, 29, 35, 38, 40, 49, 52, 79], "owondbo": 56, "oymfp": 56, "p": [1, 4, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 29, 30, 32, 33, 35, 36, 38, 39, 43, 45, 47, 50, 52, 53, 56, 57, 60, 62, 66, 67, 68, 71, 73, 76, 79, 81], "p1": [17, 35, 38, 45], "p11": 35, "p15": 35, "p2": [17, 35, 38, 45], "p3": 35, "p3d": 35, "p4": [1, 35], "p5": 35, "p_": [33, 38, 41, 52, 56], "p_1": [33, 35, 41, 52, 76, 77], "p_2": [33, 35, 52, 76, 77], "p_3": [33, 35, 36, 52, 76], "p_4": [16, 33, 35, 38, 39, 52, 62, 81], "p_5": [33, 35, 36, 38, 39, 52, 81], "p_6": [33, 35, 52], "p_7": [33, 52], "p_8": [33, 52], "p_9": [33, 52], "p_i": [33, 41, 52, 76, 77], "p_j": [33, 41, 52, 77], "p_k": 77, "p_n": [38, 41], "p_n2": [29, 52], "pack": [1, 24, 35, 60], "packag": [1, 12, 14, 28, 35, 38, 40, 49, 51, 52, 55, 58, 65, 76], "packing_in_a_hypergraph": 1, "pad": [38, 70], "padsto": [29, 52], "page": [0, 2, 7, 27, 29, 30, 33, 35, 38, 49, 52, 58, 75], "pagerank": 35, "pai": [35, 64], "pair": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 49, 50, 52, 55, 59, 64, 66, 67, 69, 70, 71, 74, 75, 80], "pairwis": [27, 33, 35, 38, 52, 66, 67], "pajek": 35, "palei": [21, 29, 35, 38, 52, 76], "paley_graph": 21, "paleygraph": [21, 29, 35, 52], "pallini": 21, "panda": [21, 25, 29, 33, 38, 52, 66, 67], "paper": [18, 29, 33, 35, 39, 46, 52, 76, 79], "pappu": [33, 35, 38, 52, 66], "pappusgraph": [18, 23, 33, 35, 38, 52, 66], "parabol": [27, 52], "parachut": 38, "parallel": [11, 16, 17, 18, 20, 25, 29, 33, 35, 38, 46, 52, 75], "parallel_nod": 46, "param": [28, 35, 40], "param_tupl": 40, "paramet": [1, 4, 6, 9, 11, 12, 14, 15, 16, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 38, 39, 40, 42, 43, 46, 48, 49, 50, 52, 54, 55, 56, 57, 59, 66, 67, 69, 71, 76, 77, 80], "parametr": [20, 35, 71], "parametris": [29, 52], "parent": [3, 12, 20, 21, 25, 33, 35, 38, 49, 52, 57, 74], "pari": [20, 28, 29, 33, 35, 38, 52, 76], "pars": 62, "part": [1, 12, 17, 18, 21, 25, 27, 29, 32, 33, 35, 38, 39, 45, 46, 52, 55, 67, 71, 76], "partial": [0, 13, 20, 32, 35, 38, 52, 63, 69, 73], "partial_cub": [38, 70], "partial_g": 67, "particip": [38, 66, 67], "particular": [1, 3, 6, 19, 20, 21, 22, 27, 28, 29, 33, 35, 38, 39, 49, 50, 52, 64, 67, 77], "partit": [1, 12, 16, 17, 20, 22, 25, 27, 28, 29, 33, 35, 38, 39, 42, 46, 48, 52, 57, 58, 59, 66, 67, 75, 76, 77], "partli": [52, 76], "pas1992": [29, 52, 76], "pascal": [29, 47, 52], "pasechnik": [28, 29, 52, 65, 76], "pasechnikgraph": [29, 52], "pass": [11, 12, 20, 21, 28, 29, 35, 38, 39, 50, 52, 57, 67, 69, 76], "past": [4, 5, 8], "path": [0, 2, 3, 4, 11, 12, 13, 16, 17, 18, 19, 20, 21, 23, 25, 29, 32, 33, 35, 36, 38, 39, 41, 43, 45, 46, 49, 50, 52, 62, 64, 66, 67, 69, 70, 77, 79], "path_decomposit": [38, 49, 50], "path_enumer": 71, "path_semigroup": 20, "pathgraph": [3, 4, 13, 18, 22, 23, 25, 29, 30, 35, 36, 38, 39, 42, 43, 45, 46, 49, 50, 52, 56, 57, 62, 66, 67, 77, 79], "paths2": 35, "pathwidth": [38, 49, 50], "patric": 15, "pattern": 73, "paul": [38, 46], "pb": 52, "pc": [29, 35, 52, 76], "pccssge": 38, "pdf": [33, 35, 38, 52, 76], "pdflatex": [38, 55], "peac": 38, "peculiar": [29, 52], "peg": [29, 52], "peleg": 63, "penal": 35, "penalti": [29, 52], "pend": [18, 35], "pendant": 38, "pennsylvania": [34, 52], "pentagon": [33, 52], "pentagonposet": 20, "pentagram": [33, 52], "pentaval": [29, 52], "penttila": [27, 52], "peo": [35, 77], "peopl": 38, "per": [18, 20, 21, 22, 25, 29, 32, 33, 35, 38, 40, 52, 55, 56, 69, 77, 78], "perfect": [12, 29, 32, 33, 35, 38, 40, 52, 62, 66, 67, 77], "perfect_id": 62, "perfect_match": [12, 29, 38, 52, 66], "perfectli": [29, 52], "perform": [1, 4, 8, 13, 17, 19, 20, 22, 29, 32, 35, 38, 39, 41, 44, 52, 59, 62, 64, 70, 75, 76, 77], "perhap": [9, 18, 35, 38], "perimet": 55, "period": 20, "peripheri": [20, 38], "perkel": [33, 52], "perkel_graph": [33, 52], "perkelgraph": [33, 52], "perm": [1, 4, 6, 10, 17, 35, 38, 46], "perm_gp": 35, "perman": 57, "permgroup_nam": 35, "permiss": 4, "permit": [12, 35, 38, 52, 67], "permut": [0, 1, 4, 6, 12, 29, 30, 33, 35, 37, 38, 46, 50, 52, 73], "permutahedron": [29, 52], "permutation_graph": 17, "permutationgraph": [17, 30, 38, 52], "permutationmat": [29, 52], "permute_decomposit": 46, "perp": [27, 52, 76], "perron": [11, 35], "person": 35, "pertain": [66, 67], "peter": 1, "petergraph": 35, "petersen": [1, 4, 9, 13, 17, 18, 19, 20, 22, 23, 27, 29, 33, 35, 36, 38, 39, 45, 48, 49, 50, 52, 55, 57, 59, 64, 66, 67, 69, 70, 76, 79, 81], "petersen_databas": [33, 52, 57], "petersen_famili": [29, 52], "petersen_spr": [33, 52, 57], "petersen_td": 49, "petersengraph": [1, 2, 4, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 29, 33, 35, 36, 37, 38, 39, 41, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 79, 81], "petru": 69, "pewveo": 38, "pfaffian": [21, 33, 52], "pg": [27, 30, 35, 52, 76], "pgf": 55, "pgfsetfillcolor": 55, "pgfsetstrokecolor": 55, "pgl": [1, 76], "pgl_3": 76, "ph": 35, "phi": [11, 29, 33, 35, 38, 52], "phi_1": [33, 38, 52], "phi_2": [33, 38, 52], "phi_3": [33, 52], "phi_4": [33, 52], "phi_i": [29, 33, 52], "phi_j": [29, 52], "phi_v": 35, "philip": [33, 52], "philipp": 47, "phitigra": 51, "phrag": [30, 52], "phy": [12, 29, 52], "pi": [17, 25, 27, 29, 33, 35, 38, 52, 57, 71], "pi_1": 17, "pi_2": 17, "pi_i": 17, "pi_j": 17, "pi_n": 17, "pick": [4, 20, 27, 29, 32, 35, 52], "pickl": [5, 6, 8], "pictur": [25, 33, 35, 40, 52, 58], "pidq": 56, "piec": [18, 26, 38, 40, 52], "pitman": 20, "pivot": [16, 48], "pkg": 55, "pl": [35, 57], "place": [1, 4, 8, 25, 29, 33, 35, 36, 38, 39, 40, 43, 52, 55, 57, 73, 76, 77], "placehold": 6, "placement": [20, 35, 55], "plai": [38, 66], "plain": 55, "plaintext": 35, "plan": [33, 52], "planar": [0, 25, 29, 31, 32, 33, 35, 37, 38, 39, 40, 52, 57, 62, 67], "planar_du": [35, 38], "planar_graph": 52, "plane": [1, 27, 29, 30, 32, 33, 35, 52, 60, 76], "plantri": 52, "plantri_gen": 52, "platform": 35, "platon": [0, 52], "platonic_solid": [31, 52], "pleas": [9, 17, 18, 33, 35, 38, 39, 45, 47, 52, 67], "plot": [0, 4, 12, 15, 17, 18, 20, 21, 25, 29, 31, 32, 33, 35, 36, 38, 39, 40, 48, 52, 56, 64, 74, 75], "plot3d": [35, 52], "plu": [12, 18, 33, 35, 38, 39, 42, 52, 64], "plus_on": 39, "pm": [27, 33, 52], "pmod": [21, 29, 52], "png": [35, 46], "po": [20, 21, 25, 33, 35, 36, 38, 40, 48, 52, 57, 58, 67, 75], "point": [1, 18, 20, 27, 28, 29, 30, 32, 33, 34, 35, 38, 41, 52, 55, 59, 60, 64, 71, 73, 76], "pointer": [3, 22, 68], "pointi": [25, 52], "points_ord": [30, 52], "poisson": [32, 52], "pol2009": 76, "polar": [27, 28, 30, 33, 38, 52, 55, 76], "polhil": 76, "poli": 35, "pollak": 35, "polycycl": 52, "polygen": [12, 35], "polygon": [18, 28, 29, 35, 52, 57], "polyhedr": 62, "polyhedra": 38, "polyhedral_graph": 38, "polyhedron": [20, 31, 33, 35, 38, 52], "polynomi": [0, 12, 20, 25, 33, 35, 38, 39, 52, 62, 65, 69], "polynomial_rational_flint": 35, "polynomialr": [38, 79], "polytop": [20, 33, 35, 38, 52], "pop": 4, "popcount32": 44, "portion": [12, 20, 35, 55], "portug": 4, "pos3d": 35, "pos_dict": [35, 57], "posdict23": [25, 29, 52], "posdict389": [25, 52], "posdict_big": [25, 52], "posdict_m": [25, 52], "poset": [17, 19, 20, 21, 35, 36, 38, 69], "posit": [1, 2, 3, 4, 8, 11, 13, 14, 17, 20, 21, 25, 26, 29, 30, 32, 33, 35, 38, 39, 41, 43, 52, 55, 57, 58, 59, 67, 72, 77], "position_": 35, "position_d": 35, "positiveinteg": 1, "posn": 35, "possess": 52, "possibl": [1, 3, 4, 8, 9, 12, 13, 17, 19, 20, 21, 23, 29, 30, 32, 33, 35, 36, 38, 39, 40, 41, 42, 45, 49, 50, 51, 52, 55, 59, 61, 62, 64, 67, 69, 71, 73, 76, 80], "possibli": [4, 11, 18, 20, 21, 23, 29, 35, 38, 52, 67, 70], "post": 35, "postord": 16, "potenti": [4, 12, 35, 43, 50], "poussin": [33, 52], "poussingraph": [33, 52], "power": [1, 21, 26, 27, 28, 29, 32, 35, 38, 52, 76], "powersum": 38, "pp": [1, 20, 23, 27, 28, 29, 38, 52], "ppl": [38, 39], "pq": [0, 35], "pq_tree": 73, "practic": [7, 8, 22, 38, 49, 59], "practiv": 22, "prasad": 38, "pre": [12, 20, 33, 35, 38, 40, 52, 55], "preambl": [35, 38, 55], "prec": [11, 35], "preced": [28, 35, 40, 57], "precis": [3, 11, 17, 18, 19, 20, 23, 25, 29, 33, 35, 38, 43, 50, 52, 57, 67, 71, 80], "pred": 35, "predecessor": [3, 6, 20, 22, 35], "predefin": [25, 29, 35, 52], "prefer": [3, 20, 35, 38, 62, 71], "preferenti": [21, 32, 52], "prefil": 57, "prefix": [29, 38, 50, 52, 71], "prendr": 64, "prepend": 77, "preprocess": [38, 69, 75], "prerequisit": 35, "prescrib": [26, 52], "presenc": 35, "present": [4, 6, 11, 17, 19, 29, 33, 35, 38, 45, 52, 55, 62, 67, 69, 71, 76], "preserv": [12, 18, 20, 33, 35, 52, 67], "preset": [40, 57], "press": 40, "pretti": [11, 17, 37, 38, 39, 57, 76], "prettier": [29, 52], "prevent": [35, 38, 50], "previou": [4, 16, 17, 33, 36, 37, 38, 41, 43, 45, 46, 50, 52, 70, 71, 75, 77], "previous": [21, 29, 35, 46, 52, 57, 58, 70], "prim": [3, 35], "prim_boost": 35, "prim_edg": 35, "prim_fring": 35, "primal": 35, "primari": [40, 55], "primarili": 36, "primary_kei": 40, "prime": [21, 27, 28, 29, 38, 45, 46, 52, 76], "prime_node_gener": 46, "primit": [12, 29, 32, 35, 38, 52, 57, 74], "principl": 50, "print": [1, 4, 11, 13, 16, 18, 20, 21, 22, 25, 26, 29, 30, 32, 33, 35, 38, 39, 40, 42, 46, 49, 50, 52, 55, 57, 59, 60, 62, 66, 67, 69, 71, 73, 75, 80], "print_adjacency_matrix": 44, "print_md_tre": 46, "print_triconnected_compon": 18, "prior": 75, "priori": [37, 76], "prioriti": 35, "prism": [38, 70], "privaci": 58, "privat": [23, 38], "private_neighbor": [23, 38], "prob": 46, "probabl": [1, 5, 8, 18, 21, 32, 35, 36, 38, 46, 52, 53, 55, 60, 64, 67, 68, 75], "problem": [0, 1, 3, 11, 12, 17, 19, 20, 23, 33, 35, 37, 38, 39, 50, 52, 59, 62, 64, 66, 67, 69, 80], "procedur": [4, 33, 35, 36, 39, 52, 70], "process": [12, 22, 29, 35, 38, 46, 52, 55, 69, 77, 79], "prod": [38, 68], "prod_": [37, 38], "produc": [4, 21, 22, 25, 27, 28, 29, 33, 35, 38, 52, 55, 67, 69, 76, 77], "product": [0, 14, 20, 26, 29, 35, 38, 52, 67, 71], "prof": [33, 52], "prog": [35, 55, 57], "program": [1, 12, 17, 18, 19, 20, 21, 23, 29, 35, 38, 39, 43, 47, 50, 52, 55, 57, 60, 66, 67, 69], "progress": [29, 38, 47, 52, 70], "project": [1, 12, 27, 29, 33, 52, 55, 76], "project_left": 12, "project_right": 12, "projective_plan": 1, "promis": 76, "prompt": 40, "proof": [4, 17, 20, 33, 35, 41, 52, 73], "prop": 35, "proper": [1, 4, 12, 19, 32, 33, 35, 38, 39, 52, 55, 62, 67], "properli": [32, 33, 35, 38, 52, 69], "properti": [0, 2, 12, 17, 18, 21, 29, 33, 35, 38, 39, 46, 49, 52, 55, 59, 60, 62, 65, 67, 69, 73, 79], "proport": 21, "proportionali": [38, 75], "propos": [3, 16, 18, 22, 24, 29, 32, 35, 38, 42, 49, 50, 52, 59, 66, 75], "proposit": 38, "protect": 58, "protocol": 4, "prove": [38, 50, 52, 59, 64, 69, 73, 76], "proven": 59, "provid": [1, 3, 4, 11, 12, 14, 20, 23, 26, 27, 29, 32, 33, 35, 38, 39, 40, 41, 49, 50, 51, 52, 55, 57, 58, 66, 67, 76, 79, 81], "prt": 35, "pruess": 20, "prufer": [32, 52], "prune": [32, 38, 50, 52], "pruned_tre": [32, 52], "ps2002": 20, "ps2006": [32, 52], "ps2pdf": 38, "pseudo": [28, 29, 52, 76], "pseudo_partition_graph": 28, "pseudocycl": 76, "pseudofract": [29, 52], "pseudograph": 52, "psi_g": 38, "psw1996": 38, "pt": 55, "pt2009": [1, 27, 52], "publish": [38, 69], "pure": [5, 8, 19], "purpl": 35, "purpos": [7, 8, 11, 18, 19, 33, 36, 52, 55, 73], "push": [4, 25, 36, 52], "put": [4, 12, 35, 38, 40, 56, 66, 67], "puzzl": [29, 52], "pvd": 75, "pw": [38, 50], "pw_l": 50, "pxd": 9, "py": [1, 40, 52], "pygraphviz": [20, 38], "pyramid": [31, 52], "pyscipopt": 50, "python": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "python3": [40, 52], "python_igraph": [20, 35, 38, 67], "pyx": [32, 52], "q": [1, 4, 18, 20, 21, 25, 27, 28, 29, 32, 35, 36, 38, 40, 43, 52, 56, 73, 76], "q_": 36, "q_1": 77, "q_2": 77, "q_a": [33, 52], "q_i": 77, "q_j": 77, "q_l": 77, "qaa": 56, "qm2c2": 52, "qq": [12, 20, 35, 38, 52], "qqb": 35, "quad": 43, "quadrangl": [1, 27, 28, 52], "quadrangul": 52, "quadrat": [22, 27, 52, 70, 76], "quadric": 52, "quadrupl": [1, 9, 38], "qualnam": 46, "quantiti": [38, 63], "quasisymmetr": 38, "queen": [26, 52], "queengraph": [26, 52], "queri": [22, 38, 40, 55, 62], "query_dict": 40, "query_iter": 40, "query_str": 40, "question": [33, 40, 45, 52], "queue": 4, "quick": [17, 29, 36, 38, 52], "quickli": [3, 22, 35, 39, 41, 44, 55], "quicksort": 75, "quiet": [1, 12, 17, 18, 20, 23, 35, 38, 39, 43, 50, 66, 67, 69], "quietli": 56, "quintupl": [33, 52], "quit": [20, 32, 33, 35, 38, 52], "quiver": 20, "quotient_matrix": 35, "qw": 40, "r": [1, 11, 12, 15, 18, 20, 25, 26, 27, 28, 29, 30, 33, 35, 36, 38, 40, 45, 52, 57, 64, 76, 79, 81], "r1": [35, 45], "r2": [35, 45], "r_": [38, 39], "r_0": [30, 32, 52], "r_1": [30, 32, 38, 52], "r_2": 38, "r_i": [30, 32, 38, 52], "r_k": [30, 32, 52], "race": [25, 52], "radii": [29, 52], "radiu": [3, 11, 20, 22, 23, 25, 26, 29, 32, 33, 35, 38, 40, 52, 57], "radius_dhv": [3, 22, 38], "radoslav": 51, "rai": 35, "rainbow": [35, 57], "rais": [3, 4, 6, 9, 10, 12, 18, 20, 22, 24, 28, 29, 35, 38, 39, 42, 46, 52, 55, 61, 67, 68, 69, 73, 75, 77], "rajat": 38, "randint": [14, 29, 32, 35, 38, 52, 59, 66, 67, 75, 77], "random": [0, 1, 4, 11, 12, 13, 18, 20, 21, 22, 24, 25, 29, 33, 35, 36, 38, 39, 45, 46, 48, 49, 52, 53, 55, 57, 59, 60, 62, 66, 67, 69, 73, 75], "random_acycl": [4, 20], "random_all_graph_color": 39, "random_edg": 35, "random_edge_iter": 35, "random_el": [30, 32, 35, 38, 52, 73], "random_matrix": 38, "random_md_tre": 46, "random_orient": [21, 35, 38, 69], "random_spanning_tre": [38, 75], "random_subgraph": [35, 67], "random_vertex": [22, 33, 35, 38, 52, 77], "random_vertex_iter": 35, "randombarabasialbert": [18, 22, 24, 32, 35, 38, 52, 59, 75], "randombicubicplanar": [32, 52], "randombipartit": [12, 32, 35, 38, 52, 66], "randomblockgraph": [32, 35, 38, 52, 62], "randomboundedtolerancegraph": [32, 52], "randomchordalgraph": [32, 38, 49, 52, 77], "randomdag": 21, "randomdirectedacyclicgraph": [21, 50], "randomdirectedgn": 21, "randomdirectedgnc": 21, "randomdirectedgnm": [21, 35], "randomdirectedgnp": [17, 18, 20, 21, 35, 45, 50], "randomdirectedgnr": [21, 35], "randomgnm": [32, 38, 52, 59], "randomgnp": [4, 14, 18, 20, 22, 29, 32, 35, 38, 42, 45, 46, 47, 49, 51, 52, 53, 56, 66, 68, 69, 77, 79], "randomholmekim": [32, 52], "randomintervalgraph": [32, 35, 38, 52, 62], "randomktre": [32, 52], "randomli": [13, 21, 32, 35, 52], "randomlobst": [32, 35, 38, 52, 56], "randomnewmanwattsstrogatz": [32, 52], "randompartialktre": [32, 52], "randomproperintervalgraph": [32, 52], "randomregular": [24, 32, 38, 52, 63], "randomregularbipartit": [32, 52], "randomsemicomplet": 21, "randomshel": [32, 52], "randomtolerancegraph": [32, 52], "randomtourna": [20, 21], "randomtre": [12, 18, 19, 32, 35, 38, 45, 49, 52, 58, 69], "randomtreepowerlaw": [32, 52], "randomtriangul": [32, 52], "randomtwospher": [32, 52], "randomunitdiskgraph": [32, 52], "randomweighteddag": 21, "randrang": 35, "randstat": [32, 52], "rang": [1, 4, 5, 6, 8, 10, 11, 12, 14, 16, 18, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 38, 39, 41, 42, 46, 49, 52, 54, 55, 56, 57, 59, 63, 66, 67, 68, 69, 71, 73, 75, 77, 79], "rangl": [27, 52], "rank": [0, 1, 20, 28, 35, 38, 52, 57], "rank_decomposit": [38, 47], "rankdir": [20, 35], "rankwidth": [38, 47], "rare": [1, 35], "rather": [6, 28, 35, 52], "ratio": [13, 32, 38, 52, 59], "ration": [13, 32, 35, 38, 39, 52, 77], "raw": 36, "raymond": [23, 38, 51], "rceil": [28, 29, 38, 39, 49, 52, 63, 69], "rcm": 3, "rdf": [12, 35, 38], "re": [15, 20, 27, 29, 38, 52], "rea1968": [14, 38], "reaaaaaaaaaaaalllli": 17, "reach": [11, 35, 36, 38, 43, 46, 50, 69, 71, 73, 77], "reachabl": [3, 4, 11, 20, 35, 66], "reaction": [29, 52], "read": [0, 3, 11, 14, 20, 21, 29, 32, 33, 35, 38, 43, 50, 52, 55, 75, 80], "read_edgelist": 35, "read_pajek": 35, "readabl": 56, "readwrit": 35, "real": [12, 18, 20, 30, 32, 35, 38, 39, 40, 52], "real_mpfr": [38, 59], "realiz": [17, 33, 38, 52, 74, 76], "realli": [33, 35, 38, 49, 52], "realloc": [4, 5, 8], "realnumb": [4, 11, 12, 14, 17, 18, 20, 21, 22, 25, 29, 30, 32, 35, 38, 42, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 66, 68, 69, 77, 79], "reason": [3, 4, 18, 22, 35, 38, 39, 43, 50, 55, 75, 76], "rebas": 52, "rebuild_nod": 16, "recal": [2, 80], "receiv": [1, 32, 35, 38, 77], "recent": [1, 3, 4, 5, 6, 8, 9, 12, 18, 20, 21, 22, 24, 28, 29, 33, 35, 38, 39, 40, 47, 48, 49, 52, 55, 61, 62, 67, 73, 75, 76, 80], "recip": [33, 52], "reciproc": 35, "recogn": [20, 35, 38, 55, 57, 70, 77], "recognit": [30, 32, 35, 38, 52, 73], "recognition_funct": 62, "recogniz": [29, 35, 52, 57], "recommend": [9, 14, 19], "recomput": [14, 19, 38], "reconstruct": 11, "record": [18, 32, 38, 49, 52, 72], "record_embed": 37, "recov": [11, 20, 30, 32, 35, 38, 52], "recreat": 46, "recreate_decomposit": 46, "rectangl": [35, 55], "rectangular": 38, "recurr": [38, 79], "recurs": [12, 14, 18, 20, 22, 29, 35, 38, 46, 49, 52, 61, 66, 68, 69, 73, 76, 79, 81], "recursivelyenumeratedset": 35, "red": [8, 32, 35, 38, 52, 55, 71, 74], "redefin": [6, 27, 52], "redirect": 21, "reduc": [4, 12, 18, 21, 26, 28, 32, 35, 38, 49, 52, 59, 75], "reduced_adjacency_matrix": [12, 38], "reduced_tree_decomposit": 49, "reduced_weight": 4, "reduct": [12, 35, 36, 38, 50, 67], "reduction_rul": [12, 38], "redund": [12, 23, 26, 38, 52], "refactor": 38, "refer": [1, 5, 8, 14, 15, 17, 18, 20, 21, 25, 27, 28, 29, 32, 33, 35, 37, 38, 39, 40, 45, 52, 53, 55, 65, 66, 67, 68, 76], "referenc": 35, "refin": [22, 35, 38, 48, 77], "reflect": 35, "reformat": 40, "regardless": [35, 67], "regexp": [40, 73], "regular": [0, 1, 9, 21, 22, 24, 25, 27, 29, 30, 31, 32, 33, 35, 37, 38, 40, 52, 57, 60, 63, 66, 67, 69], "regular_graph": [22, 38], "regular_symmetric_hadamard_matrix_with_constant_diagon": [38, 76], "reintroduc": 38, "reiten": 20, "rel": [11, 20, 27, 35, 37, 38, 52, 55], "relabel": [1, 3, 4, 6, 10, 16, 20, 23, 26, 29, 30, 33, 35, 38, 41, 45, 46, 48, 52, 66, 69], "relabel_tre": 46, "relat": [0, 9, 11, 13, 17, 19, 23, 27, 28, 29, 35, 38, 39, 42, 45, 46, 52, 55, 62, 64, 71, 76, 81], "relax": [38, 39, 50], "relev": [4, 19, 35, 52], "reli": [29, 35, 52, 76], "reliabl": [18, 35], "remain": [4, 11, 12, 20, 25, 33, 38, 39, 48, 52, 55, 59, 67, 70], "remark": [13, 22, 33, 35, 37, 45, 52], "rememb": [19, 22, 37, 43, 50, 52, 62], "remov": [1, 4, 5, 7, 9, 10, 11, 12, 18, 20, 21, 27, 28, 29, 32, 33, 35, 38, 42, 44, 47, 52, 55, 66, 67, 74, 75, 76, 77, 79, 81], "removable_double_ear": 67, "removable_doubleton": 67, "removable_ear": 67, "removable_edg": 67, "removble_edg": 67, "remove_loop": [4, 5, 10, 33, 35, 52, 67], "remove_multiple_edg": 35, "removed_edg": 79, "removed_from": 79, "removed_loop": 79, "removed_multiedg": 79, "renam": 35, "render": [35, 38, 55], "renorm": 13, "renumb": [29, 52], "reorder": [38, 69, 73], "reorder_set": 73, "repeat": [1, 4, 22, 23, 29, 35, 38, 39, 42, 46, 50, 52, 69], "repeatedli": [4, 52], "repetit": [35, 38, 42, 71], "replac": [5, 9, 16, 20, 22, 29, 32, 33, 35, 38, 40, 43, 45, 49, 50, 51, 52, 54, 68, 79], "report": [1, 4, 9, 15, 23, 29, 33, 35, 38, 39, 47, 52, 71, 76, 80], "report_dist": [4, 35], "report_edg": [35, 71], "report_weight": [20, 35, 71], "repres": [1, 4, 8, 9, 11, 12, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 32, 33, 35, 36, 38, 40, 41, 43, 44, 45, 46, 48, 50, 52, 54, 55, 57, 58, 62, 64, 66, 67, 69, 70, 71, 73, 74, 76], "represent": [17, 20, 21, 29, 30, 32, 33, 35, 36, 38, 39, 52, 55, 57], "reproduc": 35, "republ": 38, "repuls": 58, "request": [4, 5, 8, 35, 75, 76], "requir": [1, 4, 5, 8, 11, 17, 22, 28, 29, 31, 33, 35, 36, 37, 38, 39, 40, 43, 49, 50, 52, 55, 60, 65, 66, 67, 69, 75, 76], "rescal": 36, "rescale_row": 52, "research": [33, 52], "resembl": [25, 52], "reserv": [34, 52], "reset": [16, 57], "reset_bound": 36, "reset_info": 16, "resid": [29, 52], "resist": 38, "resistance_dist": 38, "resistor": 38, "resolut": 35, "resolv": 1, "resort": 52, "resourc": 11, "resp": [35, 38, 76], "respect": [1, 7, 12, 20, 21, 22, 23, 25, 27, 29, 33, 35, 37, 38, 40, 42, 49, 52, 57, 65, 66, 67, 69, 76], "rest": [17, 25, 29, 33, 38, 52], "restart": 36, "restor": 79, "restrict": [20, 26, 35, 38, 40, 43, 50, 52, 61, 73, 79], "result": [4, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 35, 36, 38, 39, 40, 42, 45, 50, 52, 54, 55, 59, 62, 64, 66, 67, 68, 73, 74, 76, 77], "resum": [38, 69], "retain": 35, "retract": 67, "retreat": 52, "retriev": [4, 35, 37, 51, 55, 62], "return": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "return_dict": [3, 35], "return_edge_label": 35, "return_graph": [12, 35], "return_group": 35, "return_label": [35, 64], "return_map": 35, "return_paramet": 1, "return_relabel": 35, "return_set": [23, 35], "return_tree_basi": [14, 38], "return_vertic": 35, "rev": [29, 52], "rev_interv": [30, 52], "revers": [3, 4, 11, 17, 19, 20, 29, 35, 36, 38, 41, 52, 70, 73, 77], "reverse_cuthill_mcke": 3, "reverse_edg": 20, "revert": 35, "revisit": [11, 20], "rewrit": [1, 35], "rewritten": 45, "rfloor": [28, 29, 32, 38, 52, 63, 75], "rg": [38, 75], "rgb": [35, 39, 55], "rgbcmykw": 55, "rgbtupl": 35, "ridder": 62, "right": [5, 8, 12, 20, 21, 25, 29, 30, 32, 33, 35, 38, 39, 52, 55, 57, 58, 64, 68, 69, 73, 76], "rightarrow": 38, "rightmost": 21, "rigid": [18, 38], "rim": [29, 52], "ring": [1, 11, 12, 18, 20, 21, 23, 27, 28, 29, 30, 32, 33, 35, 38, 39, 43, 50, 52, 59, 66, 67, 69, 76], "ringedtre": [29, 52], "risk": 35, "rivin": 38, "rl": 35, "rm": 38, "rob": [29, 33, 38, 52, 55], "robbin": [20, 38, 69], "robbins_theorem": [38, 69], "robert": [12, 14, 20, 21, 29, 36, 38, 52, 56, 66, 68], "robertson": [33, 52], "robertson_graph": [33, 52], "robertsongraph": [33, 52], "robin": 39, "robust": [55, 75], "role": [38, 66], "roof": [25, 52], "rook": [12, 26, 52], "rook_radiu": [26, 52], "rookgraph": [26, 52], "room": [5, 8], "root": [3, 4, 8, 11, 16, 20, 29, 32, 35, 42, 45, 46, 49, 52, 57, 74], "root1": 46, "root2": 46, "root_edg": 74, "root_graph": 64, "root_vertex": 35, "rooted_product": [35, 45], "rooted_product_of_graph": [35, 45], "rooted_tre": [38, 42], "rosa": 76, "rose": [29, 52], "rosewindowgraph": [29, 52], "roskind": [35, 75], "rot_si": 35, "rotat": [25, 31, 32, 35, 52, 55], "roughli": [9, 19, 22, 38], "round": 39, "round_robin": 39, "rout": [35, 40], "routin": [3, 11, 20, 29, 35, 52, 55], "row": [1, 3, 9, 12, 25, 29, 33, 35, 38, 39, 52, 73, 76], "royl": [14, 38], "rpk1980": 21, "rpk1983": 21, "rr": [11, 20, 35], "rshcd": [38, 76], "rst": [33, 52], "rst2019": [33, 52], "rt1975": 35, "rt1975a": [38, 75], "rt1985": [35, 75], "rtl76": [38, 77], "rule": [12, 20, 29, 38, 41, 45, 52], "run": [0, 4, 5, 6, 8, 13, 21, 22, 29, 32, 33, 35, 36, 37, 38, 39, 40, 45, 46, 47, 50, 52, 55, 58, 69, 70, 71, 75, 81], "run_spr": 36, "rung": [25, 52], "runtim": [37, 70, 75], "runtimeerror": [4, 5, 8, 20, 35, 38, 39, 47, 52, 68, 76, 80], "ruskei": 20, "rw": 47, "rw_g": 47, "ryan": [8, 12, 78], "ryser": 52, "r\u00fcth": 38, "s0": 66, "s00373": 37, "s1": [18, 38, 52, 66, 67], "s13": 1, "s2": [1, 18, 38, 52, 67], "s3": 67, "s3_9": 1, "s4": [29, 52], "s4_14": 1, "s4_8": 1, "s6": [29, 52, 56, 76], "s_": [29, 38, 41, 42, 50, 52, 56, 64, 73], "s_0": [29, 38, 41, 42, 50, 52], "s_1": [1, 29, 30, 38, 41, 52, 59, 73], "s_2": [1, 30, 38, 50, 52, 59], "s_3": [38, 59], "s_7": 76, "s_c": [38, 42], "s_g": 19, "s_h": [38, 42], "s_i": [29, 35, 41, 52, 73], "s_j": 73, "s_k": [29, 52, 73], "s_l": 73, "s_n": [29, 30, 52, 73], "s_p": [29, 52], "s_t": 50, "s_v": 64, "sadli": 22, "safe": 35, "safer": 40, "safeti": 35, "sage": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "sagemath": [3, 35], "sagemath_tdlib": [38, 49], "sageobject": [6, 36, 48, 55, 57, 62], "sah2000": 75, "sai": [8, 17, 19, 23, 32, 35, 38, 41, 52, 59, 62, 66, 73, 76], "said": [1, 9, 19, 32, 35, 38, 47, 48, 52, 59, 61, 62, 64, 69, 70, 76], "sake": 39, "salesman": 35, "sam": 54, "sam2012": 38, "same": [1, 2, 3, 4, 9, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 24, 25, 27, 29, 30, 32, 33, 35, 36, 38, 39, 45, 46, 48, 50, 52, 55, 57, 58, 62, 64, 66, 67, 68, 69, 70, 71, 75, 76, 77, 80], "sampl": [32, 35, 52, 59, 60, 67], "sampling_s": 59, "sampo": 15, "sang": 47, "sanit": 75, "saniti": [35, 75], "saoecea": 56, "satisfi": [1, 2, 19, 21, 27, 28, 30, 33, 35, 38, 40, 49, 50, 52, 59, 61, 70, 73, 76], "satsifi": 38, "satz": 38, "save": [3, 11, 12, 22, 30, 32, 35, 43, 45, 50, 52, 55, 56, 57, 58, 62, 67], "save_afil": [12, 67], "save_po": [35, 57], "saw": [35, 38, 77], "sc": [21, 38, 42], "scale": [29, 36, 52, 55, 59], "scan": 39, "scc": [11, 18, 20], "scc_digraph": [18, 20], "sch1990": 74, "sch1999": [32, 52], "sch2003": [35, 38], "sch2013": 38, "scheinerman": 52, "scheme": [1, 3, 22, 29, 30, 38, 52, 77], "schilli": [29, 52], "schlaefligraph": [33, 52], "schl\u00e4fli": [33, 52], "schl\u00e4fli_graph": [33, 52], "schnyder": [0, 35, 72], "schrijver": [28, 52], "schur": 38, "scip": 50, "scipi": [32, 35, 52], "scope": 55, "script": 57, "scroll": 58, "sd": [35, 38, 48], "sd2": [38, 48], "se": 35, "seach": 67, "search": [0, 4, 11, 13, 15, 16, 18, 19, 20, 22, 35, 36, 37, 38, 40, 43, 49, 50, 52, 59, 62, 64, 66, 67, 70, 71, 77, 80, 81], "search_iter": 4, "sec": 38, "second": [1, 11, 12, 21, 22, 25, 26, 29, 30, 33, 35, 38, 40, 46, 48, 52, 55, 60, 64, 70, 72, 73, 79], "second_permut": [30, 52], "secondli": [38, 69], "sect": [27, 52, 76], "section": [1, 17, 25, 28, 29, 32, 33, 35, 38, 39, 41, 48, 52, 74, 77], "see": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77], "seed": [21, 32, 35, 36, 38, 52, 53, 59], "seem": [14, 19, 20, 32, 38, 52], "seen": [4, 14, 19, 20, 21, 35, 37, 38, 43, 50, 52, 70], "segfault": 37, "segment": [17, 30, 38, 52], "seidel": [27, 29, 38, 52, 54, 76], "seidel_adjacency_matrix": [38, 54], "seidel_switch": [29, 38, 52, 76], "seidman": 38, "select": [12, 13, 18, 20, 21, 22, 31, 32, 33, 35, 38, 40, 45, 52, 66, 67, 70, 71, 73, 75, 76, 77, 79], "self": [1, 4, 5, 6, 8, 12, 16, 17, 18, 20, 21, 29, 35, 37, 38, 39, 40, 44, 46, 50, 52, 66, 67, 71, 73, 74, 75, 76, 77], "semi": [21, 35, 38], "semigroup": 20, "send": [35, 52], "sens": [18, 32, 35, 38, 52], "sensibl": [33, 52], "sent": 38, "sep": [18, 35, 38, 55], "separ": [0, 18, 25, 29, 32, 33, 36, 38, 43, 49, 52, 57, 59, 67, 71, 77], "seq": [25, 50, 52, 73], "seqb": 50, "seqd": 50, "sequenc": [4, 6, 10, 12, 16, 20, 21, 25, 29, 30, 32, 33, 35, 38, 40, 43, 48, 50, 52, 62, 67, 70, 73, 79], "sequenti": [17, 20, 35, 38, 39], "seri": [16, 18, 27, 38, 46, 52, 76], "series_nod": 46, "serv": [22, 55], "session": 55, "set": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80], "set1": 35, "set2": 35, "set_contigu": 73, "set_edg": [35, 57], "set_edge_label": [4, 5, 6, 8, 10, 18, 35, 38, 57, 69, 75], "set_emb": 35, "set_embed": [35, 37, 52, 72, 74], "set_latex_opt": [35, 55], "set_max_s": 60, "set_min_s": 60, "set_object_enumer": 49, "set_object_enumerated_with_categori": 49, "set_opt": [35, 55], "set_po": [35, 38, 57, 72, 75], "set_posit": [25, 32, 52], "set_printopt": 35, "set_random_se": [32, 35, 36, 38, 46, 52], "set_vertex": [35, 38], "set_vertic": [35, 38, 57], "seta": [18, 35], "setb": [18, 35], "setminu": [2, 18, 23, 38, 42, 43, 49, 50, 59, 63, 77], "setup": 55, "setup_latex_preambl": 55, "setwis": 21, "seven": [33, 38, 52], "seven_acre_wood": 38, "seventh": [33, 52], "sever": [11, 19, 21, 22, 25, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 50, 52, 55, 59, 60, 62, 69, 76], "sey1981": 35, "seymour": [33, 52], "sfo": 75, "sg": 8, "sha1997": 17, "shade": 55, "shall": 67, "shape": [25, 29, 35, 52, 55, 57], "share": [18, 20, 29, 33, 35, 38, 39, 46, 52, 55, 64, 71, 76], "sharp": [25, 52], "shcghc": [33, 52], "shchgd": 56, "shell": [32, 40, 52], "shet2018": [32, 52], "shift": [29, 32, 35, 40, 52, 57, 74], "shift_list": [29, 52], "shore": 67, "short": [1, 2, 20, 22, 30, 35, 38, 52, 55, 57], "short_digraph": [10, 11, 22], "short_vers": 35, "shortcut": [20, 32, 35, 38, 52, 60, 69], "shortened_000_111_extended_binary_golay_code_graph": [28, 52], "shortened_00_11_binary_golay_code_graph": [28, 52], "shorter": [25, 35, 52], "shortest": [0, 3, 4, 13, 19, 20, 29, 33, 35, 38, 41, 45, 52, 70, 71], "shortest_path": [3, 4, 17, 20, 29, 35, 38, 52, 62], "shortest_path_all_pair": [20, 22, 35, 38], "shortest_path_all_vertic": 4, "shortest_path_length": [4, 20, 34, 35, 38, 52], "shortest_path_speci": 4, "shortest_paths_from_vertic": 3, "shortest_simple_path": [20, 35, 71], "should": [1, 3, 4, 5, 8, 10, 11, 12, 13, 17, 19, 20, 21, 22, 25, 29, 30, 31, 35, 38, 39, 40, 46, 51, 52, 55, 57, 60, 64, 70, 73, 75, 76, 80], "show": [4, 12, 15, 17, 20, 21, 25, 29, 30, 31, 32, 33, 35, 36, 38, 40, 51, 52, 55, 56, 57, 58, 64, 66, 67, 69, 75], "show3d": [35, 38], "show_al": 62, "show_graph": [18, 21, 35, 38, 52, 56], "show_vertex_label": 51, "showcas": 35, "shown": [25, 33, 38, 48, 52, 55, 57, 69], "shrikhand": [29, 33, 52], "shrikhande_graph": [33, 52], "shrikhandegraph": [33, 52], "shrink": 55, "shuffl": [11, 35], "siam": 20, "sicmm": [12, 38], "side": [18, 25, 31, 32, 35, 38, 49, 52, 58, 73], "sierpinski": [29, 52], "sierpinskigasketgraph": [29, 52], "sigma": [27, 29, 30, 33, 38, 52, 76], "sigma_": [29, 52], "sigma_1": 38, "sigma_i": 38, "sigma_n": 38, "sign": [27, 38, 52, 55], "signifi": 4, "signific": [29, 50, 52], "significantli": [1, 8, 38, 59], "signless": [35, 38, 68], "silent": [4, 8, 35, 55], "silli": [6, 18, 35], "sim": [17, 27, 33, 38, 41, 52, 76], "similar": [20, 25, 35, 38, 43, 52, 55, 63, 75], "similarli": [1, 35, 37, 38, 52, 55, 59, 69], "simon": 64, "simpl": [1, 8, 9, 11, 12, 18, 19, 20, 22, 24, 29, 33, 35, 37, 38, 39, 45, 46, 48, 49, 52, 55, 61, 62, 64, 66, 67, 69, 71, 75, 80], "simple_connected_genus_backtrack": 37, "simple_connected_graph_genu": 37, "simpler": 7, "simplex": [33, 52], "simpli": [12, 19, 20, 35, 38, 39, 71, 80], "simplic": 11, "simplici": [35, 38, 77], "simplifi": [29, 38, 52, 70, 73], "sims_graph": [33, 52], "simsgewirtzgraph": [33, 52], "simultan": [4, 32, 35, 41, 76], "sin": [35, 57], "sinc": [1, 5, 8, 14, 20, 22, 28, 29, 32, 33, 35, 38, 39, 40, 42, 50, 52, 58, 59, 67, 68, 71, 75, 80], "singl": [3, 4, 9, 16, 18, 20, 25, 29, 32, 35, 38, 40, 49, 52, 55, 56, 70, 79], "singleton": [28, 33, 35, 38, 47, 48, 49, 52, 66, 67], "singleton_graph": [33, 52], "singular": [27, 52], "sink": [20, 21, 35], "site": 52, "situat": [18, 20, 35, 38, 45, 64, 73], "six": [38, 52, 66, 67], "sixth": [33, 52], "size": [1, 4, 5, 8, 9, 10, 11, 12, 15, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 35, 38, 39, 40, 43, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 75, 76, 77, 80], "sizeof": [22, 44], "skeleton": [0, 33, 38, 52], "skew": [21, 28, 29, 52, 76], "skew_hadamard_matrix": 21, "skewhad": 76, "skip": 76, "sleev": 35, "slice": [0, 35, 38, 46, 77, 80], "slice_decomposit": [35, 38, 46, 48, 77], "slicedecomposit": [38, 48], "slide": 35, "slight": [33, 35, 52], "slightli": [1, 13, 29, 35, 38, 52, 55, 61], "sloan": [29, 52], "slope": [25, 52, 55], "slow": [1, 7, 12, 19, 29, 35, 37, 38, 39, 45, 52, 77], "slower": [17, 20, 33, 35, 38, 39, 52, 59, 77], "small": [0, 8, 10, 11, 13, 18, 22, 25, 29, 32, 35, 36, 38, 50, 52, 55, 56, 60], "small_feas": 76, "small_integer_to_graph6": 36, "smaller": [13, 20, 29, 35, 38, 43, 45, 47, 50, 52, 71], "smallest": [3, 11, 18, 19, 20, 21, 29, 33, 35, 38, 39, 41, 49, 50, 52, 57, 67, 69], "smallgraph": [33, 52, 62], "smart": [11, 19, 35], "smith": [28, 33, 52], "smith_graph": [33, 52], "snappi": 37, "snark": [33, 35, 38, 52], "so": [2, 3, 4, 5, 6, 8, 11, 16, 18, 19, 20, 21, 22, 24, 25, 27, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 43, 46, 49, 50, 52, 55, 56, 59, 62, 63, 67, 68, 73, 76, 77, 80], "sobj": 35, "soccer": [33, 52], "social": [33, 52], "softwar": [12, 33, 35, 52, 55], "soicher": 1, "sole": 35, "solid": [0, 33, 35, 52, 55, 57], "solut": [19, 23, 29, 35, 38, 39, 43, 50, 52, 59, 69], "solv": [1, 3, 12, 17, 18, 19, 20, 23, 29, 35, 38, 39, 43, 45, 50, 52, 59, 66, 67, 69], "solver": [1, 12, 17, 18, 19, 20, 23, 35, 38, 39, 43, 50, 66, 67, 69], "some": [1, 2, 3, 4, 11, 12, 14, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 32, 33, 35, 38, 39, 41, 43, 45, 47, 48, 50, 52, 55, 57, 58, 59, 60, 62, 64, 66, 67, 69, 70, 73, 75, 76, 77, 81], "someth": [5, 6, 8, 22, 33, 38, 39, 42, 52, 68, 77], "sometim": [1, 22, 25, 35, 36, 38, 39, 50, 52, 59, 63], "somewhat": 35, "song": 64, "soon": [11, 13, 20, 26, 38, 43, 50, 52, 59], "sopra": 47, "sort": [1, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 18, 20, 21, 22, 23, 25, 26, 29, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 57, 59, 62, 63, 64, 66, 67, 69, 71, 74, 75, 77, 79, 80], "sort_vertic": [35, 67, 80], "sortabl": 35, "sot2011": [38, 59], "sourc": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "sourceforg": 55, "sousseli": [33, 52], "sousselier_graph": [33, 52], "sousseliergraph": [33, 52], "south": 55, "sp": [27, 52], "sp2010": 50, "sp_4": [33, 52], "space": [2, 11, 12, 19, 20, 22, 27, 28, 33, 35, 38, 43, 50, 52, 56, 59], "spain": 4, "spam": [35, 57], "span": [0, 3, 11, 20, 23, 24, 35, 38, 46, 66, 67, 69, 79], "spanner": 41, "spanning_tre": [20, 35, 38, 75], "spanning_trees_count": [20, 35, 38, 75, 79], "spars": [0, 3, 4, 5, 7, 12, 20, 21, 32, 35, 37, 38, 39, 52, 56, 57, 66, 67, 69], "sparse6": [29, 33, 38, 52, 54, 56], "sparse6_str": [38, 64], "sparse_copi": 35, "sparse_graph": [4, 6, 7, 8, 10, 20, 38], "sparsegraph": [4, 7, 8, 19, 22, 35, 38, 48, 69, 77, 81], "sparsegraphbackend": [4, 6, 7, 8, 10], "sparsegraphbtnod": 8, "sparsegraphllnod": 8, "special": [4, 29, 35, 38, 40, 52, 57, 62, 64, 66, 77, 79], "specif": [3, 4, 12, 35, 38, 41, 50, 55, 62, 69, 71, 76], "specifi": [1, 3, 8, 9, 11, 12, 17, 18, 20, 21, 22, 23, 25, 27, 29, 32, 35, 38, 39, 40, 43, 46, 48, 49, 50, 52, 55, 56, 57, 59, 66, 67, 69, 76, 77, 79, 80], "spectra": [52, 76], "spectral": [11, 35], "spectral_radiu": [11, 35], "spectrum": [27, 30, 33, 35, 40, 52], "sped": 68, "speed": [1, 8, 11, 24, 29, 30, 35, 36, 38, 52, 76], "speedup": 38, "speedwis": 38, "spent": [16, 35, 43, 50, 52], "sphere": [33, 35, 38, 52, 55], "spindl": [33, 52], "spirit": 55, "spkg": [1, 33, 35, 52, 58], "splice": [33, 38, 52, 66], "split": [18, 21, 33, 35, 36, 38, 47, 52, 62, 64], "spoke": [29, 52], "sporad": [28, 33, 52], "spqr": [18, 38], "spqr_tree": [18, 38], "spqr_tree_to_graph": [18, 38], "spr": [25, 29, 52], "spread": [1, 28], "spring": [20, 21, 25, 29, 31, 32, 33, 35, 36, 52, 56, 57, 58], "spring23": [25, 29, 52], "spring389": [25, 52], "spring_big": [25, 52], "spring_layout_fast": [35, 36], "spring_m": [25, 52], "sq1998": [38, 69], "sql": 40, "sql_db": 40, "sqldatabas": 40, "sqlite": 40, "sqlqueri": 40, "sqrt": [11, 32, 35, 52], "squar": [5, 11, 20, 25, 26, 27, 29, 33, 35, 36, 38, 39, 45, 52, 76], "squaredskewhadamardmatrixgraph": [29, 52, 76], "squish": 36, "src": 11, "srg": [27, 29, 33, 52, 76], "srg_100_44_18_20": 76, "srg_100_45_20_20": 76, "srg_105_32_4_12": 76, "srg_120_63_30_36": 76, "srg_120_77_52_44": 76, "srg_126_25_8_4": 76, "srg_126_50_13_24": 76, "srg_1288_792_476_504": 76, "srg_144_39_6_12": 76, "srg_175_72_20_36": 76, "srg_176_105_68_54": 76, "srg_176_49_12_14": 76, "srg_176_90_38_54": 76, "srg_196_91_42_42": 76, "srg_210_99_48_45": 76, "srg_220_84_38_28": 76, "srg_243_110_37_60": 76, "srg_253_140_87_65": 76, "srg_276_140_58_84": 76, "srg_280_117_44_52": 76, "srg_280_135_70_60": 76, "srg_416_100_36_20": 76, "srg_560_208_72_80": 76, "srg_630_85_20_10": 76, "srg_from_rshcd": 76, "srghub": 76, "srgtabref": [52, 76], "ss": 35, "ss2008": 38, "st": [13, 35, 67], "st1922": 38, "st1981": [29, 52], "st1994": 17, "sta1995": 38, "sta1998": 38, "stabil": [33, 52], "stabilis": [33, 52], "stabl": [23, 33, 35, 38, 52, 76], "stack": [4, 18, 35], "staff": 39, "stage": 52, "staircas": [29, 33, 52, 67], "staircasegraph": [29, 52, 67], "stand": [18, 33, 35, 38, 52], "standalon": [35, 55], "standalone_config": 35, "standard": [20, 21, 22, 29, 35, 38, 52, 55, 58, 60], "standard_label": 35, "stanford": 39, "stanlei": 20, "star": [3, 18, 23, 25, 29, 33, 35, 38, 52, 64], "star_graph": [25, 52], "star_snark": [33, 52], "stare": 64, "stargraph": [18, 21, 23, 25, 29, 35, 38, 42, 52, 56], "start": [3, 4, 11, 16, 18, 20, 21, 22, 28, 29, 32, 35, 38, 43, 46, 50, 52, 66, 69, 70, 71, 75, 77], "starting_vertex": [35, 57], "starting_vertic": [20, 35, 71], "startup": 57, "state": [29, 30, 33, 34, 35, 38, 52, 66], "statement": [17, 67], "static": [0, 35, 52, 79], "static_dense_graph": [7, 9, 10, 35, 38], "static_spars": [10, 20, 35, 38, 69], "static_sparse_backend": [10, 20, 38], "static_sparse_graph": [7, 10, 11, 20, 35], "staticsparsebackend": [7, 10, 35], "staticsparsecgraph": [7, 10], "statu": [16, 35, 67], "stderr": 52, "steal": [23, 38], "stein": [38, 52], "steiner": [1, 35, 76], "steiner_quadruple_system": 1, "steiner_tre": 35, "steiner_tree_problem": 35, "steiner_triple_system": 1, "steinitz": 38, "stellat": 38, "step": [8, 17, 20, 26, 29, 32, 33, 35, 36, 38, 50, 52, 59, 70, 75, 77], "stephen": 38, "stewart": [33, 52], "stick": [21, 29, 52], "still": [3, 12, 30, 33, 35, 39, 52, 55, 62, 67, 75], "stop": [22, 35, 37, 38, 43, 50, 59], "stopiter": [29, 40, 52], "storag": [7, 19, 20, 50], "store": [1, 2, 3, 5, 8, 9, 11, 13, 15, 22, 32, 35, 38, 39, 43, 44, 46, 50, 52, 57, 62, 64, 74, 81], "str": [29, 35, 38, 46, 50, 52, 57, 68, 74], "straight": [0, 38], "straightforward": 2, "stream": 56, "strength": 58, "strengthen": [38, 66], "stretch": [25, 29, 52], "strict": 62, "strictli": [2, 3, 14, 21, 30, 32, 35, 38, 43, 50, 52, 70, 77], "string": [1, 3, 6, 12, 14, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 32, 33, 35, 36, 38, 39, 40, 43, 46, 50, 52, 54, 55, 56, 57, 60, 62, 66, 67, 68, 69, 70, 71, 77], "strogatz": [32, 52], "strokecol": 55, "strong": [18, 20, 35, 38, 46, 67, 69], "strong_articulation_point": [18, 20], "strong_orient": [21, 38, 69, 80], "strong_orientations_iter": [21, 38, 69], "strong_product": [35, 67], "stronger": 19, "strongli": [0, 1, 3, 4, 9, 11, 18, 20, 21, 22, 27, 29, 30, 33, 35, 38, 50, 52, 66, 69], "strongly_connect": 21, "strongly_connected_compon": [11, 18, 20, 21, 35, 38, 69], "strongly_connected_component_containing_vertex": [4, 11, 18, 20], "strongly_connected_components_digraph": [11, 18, 20], "strongly_connected_components_digraph_c": 11, "strongly_connected_components_subgraph": [18, 20], "strongly_regular_db": [29, 52, 76], "strongly_regular_from_two_intersection_set": 76, "strongly_regular_from_two_weight_cod": 76, "strongly_regular_graph": [29, 52, 76], "strongly_regular_graph_lazi": 76, "stronglyregular": 21, "struct": 8, "structur": [0, 2, 3, 6, 9, 10, 16, 18, 19, 21, 22, 25, 29, 32, 35, 38, 40, 46, 49, 52, 58, 60, 69, 73], "studi": [33, 38, 52], "stuff": [11, 20, 35, 38, 62], "stumbl": [33, 52], "stuttgart": 4, "sty": 55, "style": [11, 37, 38, 55, 57], "su": [29, 52], "sub": [9, 35, 62], "subcal": [17, 38], "subclass": [4, 35, 62], "subcod": [28, 52], "subdigraph": 35, "subdirect": 35, "subdirect_sum": 35, "subdivid": [33, 35, 52, 67], "subdivide_edg": [19, 35, 38, 42, 67], "subdivis": [33, 35, 38, 52, 72], "subfunct": 35, "subg": [29, 52], "subgraph": [1, 4, 9, 15, 18, 20, 21, 23, 27, 29, 32, 33, 35, 36, 38, 40, 45, 46, 48, 52, 55, 62, 64, 66, 67, 70, 72, 76, 77, 79, 81], "subgraph_clust": [35, 55], "subgraph_decomposit": 35, "subgraph_given_vertic": 4, "subgraph_search": [29, 32, 33, 35, 52, 67], "subgraph_search_count": [35, 38, 67], "subgraph_search_iter": [35, 67], "subgraphs_to_queri": 40, "subgraphsearch": [35, 36], "subgroup": [1, 21, 27, 33, 35, 52, 76], "subhypergraph_search": 1, "subject": [20, 35, 41, 43, 55, 69], "sublist": 52, "submatrix": 38, "submodul": 46, "subpath": 71, "subplan": 1, "subraph": 35, "subsequ": [11, 20, 32, 46, 52, 55, 62], "subset": [1, 9, 12, 19, 20, 23, 27, 28, 29, 33, 35, 36, 38, 42, 46, 47, 49, 50, 52, 55, 61, 63, 64, 66, 67, 69, 76], "subseteq": [1, 9, 19, 20, 35, 38, 39, 43, 47, 49, 50, 64, 67], "subseteq_i": 38, "subsetneq": 19, "subspac": [27, 28, 52], "substack": 38, "substitut": [29, 38, 52], "substructur": 1, "subtour": 35, "subtract": [38, 55, 68], "subtre": [11, 16, 20, 32, 38, 46, 49, 52, 73], "succ": 35, "success": [20, 21, 29, 35, 38, 39, 40, 52, 55, 60], "successor": [6, 20, 21], "sudan": [34, 52], "suffic": [27, 52], "suffici": [1, 29, 38, 39, 41, 52, 70], "suffix": [52, 71], "suggest": [3, 27, 35, 52], "suit": [4, 35, 55], "suitabl": [4, 38, 69], "sum": [1, 3, 9, 11, 13, 16, 18, 20, 21, 22, 23, 29, 33, 35, 38, 39, 52, 59, 63, 66, 67, 68, 75, 79, 80], "sum_": [3, 12, 13, 19, 20, 22, 23, 29, 35, 38, 39, 43, 50, 52, 66, 68], "sum_h": 79, "summari": 35, "sun": [35, 38, 77], "super": 62, "superclass": 62, "supersed": 55, "supersingularmodul": 35, "suppli": [27, 29, 52], "support": [3, 4, 5, 7, 8, 10, 20, 22, 24, 35, 51, 52, 55, 67, 71], "suppos": [23, 35, 38, 41, 46, 55], "supposedli": [33, 52], "suppress": [21, 29, 52], "sure": [8, 12, 27, 35, 38, 52, 55, 64, 76], "surfac": [33, 35, 52], "surfer": 35, "surpris": [38, 61], "survei": [28, 38], "surviv": 52, "suzuki": [33, 52, 76], "suzukigraph": [33, 52], "sv": 13, "sv_i": 13, "svg": [25, 52, 58], "sw1999": [32, 52], "sw2012": 38, "swap": [29, 32, 52], "swear": 6, "sweden": 4, "sweep": [22, 38], "switch": [27, 29, 38, 39, 40, 52, 55, 70, 76], "switchedsquaredskewhadamardmatrixgraph": [29, 52], "syku2010": [32, 52], "sylvest": [33, 52], "sylvestergraph": [33, 52], "sym": [28, 52], "symanzik": 38, "symbol": [9, 11, 12, 21, 25, 29, 33, 35, 38, 40, 52, 67, 79], "symbolic_express": [14, 35, 38], "symmetr": [18, 20, 25, 28, 29, 31, 33, 35, 38, 52, 69, 76], "symmetri": [35, 38, 41, 69], "symmetric_edge_polytop": 35, "symmetric_graph": 38, "symmetricfunct": 38, "symmetricgroup": [29, 35, 38, 52], "symplect": [27, 52], "symplecticdualpolargraph": [27, 52], "symplecticpolargraph": [27, 52], "syntact": 35, "syntax": [1, 20, 35, 52, 67], "system": [0, 21, 29, 52, 55, 76], "systemat": 35, "sz": 76, "szege": [22, 35], "szeged_index": [22, 35], "szeker": [33, 52], "szekeres_snark": [33, 52], "szekeressnarkgraph": [33, 52], "t": [1, 4, 5, 8, 12, 13, 16, 18, 19, 20, 21, 25, 27, 28, 29, 32, 33, 35, 37, 38, 40, 42, 45, 49, 50, 52, 56, 57, 62, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79], "t0": 38, "t1": [35, 38, 45, 46], "t2": [18, 27, 35, 38, 45, 46, 49, 52, 76], "t2stargeneralizedquadranglegraph": [27, 52, 76], "t3": [35, 38], "t4": 38, "t5": [35, 38], "t8": [29, 38, 52], "t_": [12, 40], "t_0": [30, 32, 52], "t_1": [30, 32, 52], "t_2": [27, 52], "t_3": 35, "t_5": 35, "t_e": 38, "t_i": [30, 32, 35, 52], "t_j": [30, 52], "t_k": [30, 32, 35, 52], "ta": 64, "tab": [20, 21, 38, 52], "tabacjngraph": [29, 52], "taba\u010djn": [29, 52], "tabl": [8, 22, 27, 38, 40, 52, 76], "table_nam": 40, "tablenam": 40, "tachyon": [35, 38], "tachyon_vertex_plot": 35, "tadpol": [29, 52], "tadpolegraph": [29, 52], "tail": [4, 12, 33, 35, 52, 71], "take": [1, 3, 4, 8, 10, 11, 18, 20, 22, 27, 28, 29, 30, 33, 35, 36, 37, 38, 39, 40, 43, 45, 50, 52, 56, 57, 58, 59, 61, 62, 67, 71, 73, 75, 80], "taken": [4, 11, 12, 18, 20, 27, 28, 32, 35, 38, 52, 55, 63, 64, 74, 75, 76], "talk": [35, 57], "tangent": [27, 38, 52], "target": [18, 20, 35, 58, 71], "tarjan": [3, 11, 18, 20, 35, 38, 75], "tarjan72": [18, 35], "tarjan_boost": [18, 35], "tarjan_sag": [18, 35], "tarjan_strongly_connected_compon": [11, 20], "tarjan_strongly_connected_components_c": 11, "task": [43, 50, 55], "taylor": [27, 52, 76], "taylor_twograph": [27, 52], "taylortwographdescendantsrg": [27, 52], "taylortwographsrg": [27, 52, 76], "tb": [27, 52, 67], "tblname": 40, "tc": [12, 35, 49], "tchp2008": [35, 38, 46, 48, 77], "td": [1, 30, 49, 52], "tdlib": [38, 49], "technic": [9, 22, 45, 55, 62], "techniqu": [36, 71], "tedder": [38, 46], "tediou": 39, "tell": [17, 45], "tempfil": [12, 35], "templat": 4, "temporari": 22, "ten": [5, 8, 33, 52], "tend": [25, 52], "tensor": [35, 38, 67], "tensor_product": [35, 38, 67], "ter2011": 38, "terat": [9, 35], "term": [19, 22, 27, 33, 38, 52, 62], "termin": [35, 64], "terminologi": [19, 38, 70], "ternari": [38, 47], "ternarygolaycod": 76, "terri": 38, "terribl": 38, "test": [1, 2, 3, 7, 10, 11, 17, 18, 19, 20, 21, 22, 27, 28, 29, 32, 33, 35, 36, 38, 39, 41, 43, 44, 45, 46, 48, 50, 51, 52, 55, 59, 61, 62, 64, 66, 69, 70, 76, 81], "test2": 35, "test3": 35, "test_gamma_modul": 46, "test_in": 4, "test_maximal_modul": 46, "test_modul": 46, "test_modular_decomposit": 46, "test_out": 4, "test_popcount": 44, "tester": 39, "tetra_po": [31, 52], "tetra_spr": [31, 52], "tetrahedr": [31, 46, 52], "tetrahedral_graph": [31, 52], "tetrahedralgraph": [29, 31, 35, 38, 46, 52], "tetrahedron": [31, 33, 52], "tetraval": [29, 52], "tex": [38, 48, 55], "texhash": 55, "texlbl": 35, "texmf": 55, "text": [1, 4, 8, 11, 13, 17, 19, 20, 22, 29, 32, 33, 35, 38, 39, 40, 43, 50, 52, 55, 59, 64], "textrm": 52, "texttt": [35, 55], "textual": 55, "tgrid": [25, 52], "th": [3, 11, 12, 20, 22, 25, 27, 29, 33, 35, 38, 44, 45, 52, 58, 67, 70, 77, 80], "than": [0, 4, 5, 7, 8, 10, 11, 13, 17, 18, 19, 20, 21, 22, 23, 25, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 50, 52, 55, 56, 59, 61, 63, 66, 69, 70, 71, 77], "theextern": [35, 57], "thei": [1, 3, 4, 7, 11, 17, 18, 19, 20, 22, 27, 29, 30, 31, 32, 33, 34, 35, 38, 42, 45, 46, 47, 48, 50, 52, 54, 58, 66, 69, 70, 73, 75, 76, 80], "them": [1, 2, 4, 9, 10, 11, 13, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 32, 33, 35, 36, 38, 39, 41, 45, 52, 55, 61, 73, 76], "themselv": [5, 8, 35, 38, 57, 64], "theorem": [17, 29, 32, 33, 35, 38, 39, 41, 52, 66, 67, 68, 69, 76], "theoret": [27, 35, 38, 52, 64], "theori": [20, 28, 35, 38, 66, 67], "therefor": [9, 24, 33, 35, 38, 45, 52, 62, 67, 69], "thereof": 35, "thesi": 35, "theta": [0, 27, 38, 52], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81], "thick": [55, 57, 58], "thieri": 38, "thierri": 58, "thing": [11, 32, 38, 45, 52, 55, 61, 62], "think": [4, 11, 12, 20, 38, 43, 50, 54], "third": [2, 12, 25, 29, 33, 35, 38, 52, 57, 66, 74, 80], "thi\u00e9ri": 55, "thoma": [33, 35, 52, 67], "thomsen": [33, 52], "thomsengraph": [33, 52], "thorough": [35, 77], "those": [3, 10, 12, 18, 19, 20, 22, 23, 25, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 52, 57, 61, 64, 67, 70, 73, 76], "though": [4, 7, 11, 17, 20, 22, 29, 33, 35, 38, 43, 50, 52, 55, 64, 66, 67, 69, 73], "thought": 8, "thousand": 37, "three": [2, 18, 20, 29, 32, 33, 35, 38, 39, 46, 50, 52, 62, 66, 69, 74, 76], "threej": 35, "threshold": [25, 52, 75], "through": [3, 7, 12, 17, 18, 19, 20, 21, 22, 30, 32, 33, 35, 37, 38, 39, 46, 52, 54, 55, 58, 60, 61, 62, 66, 69, 71, 76, 80, 81], "throughout": [37, 55], "throw": 67, "thrown": 67, "thu": [8, 9, 11, 17, 18, 20, 25, 27, 28, 29, 30, 32, 35, 38, 47, 50, 52, 59, 61, 66, 67, 73, 76, 77, 80], "tietz": [23, 33, 35, 52], "tietzegraph": [23, 33, 35, 38, 52, 75], "tight": [36, 67], "tight_cut_decomposit": 67, "tightli": 41, "tikz": [35, 55], "tikzpictur": [35, 38, 48, 55], "tild": 38, "time": [1, 2, 3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 56, 57, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 80, 81], "timeit": 35, "tindel": 21, "tip": 35, "tird": [29, 52], "tk2013": 22, "tkk": [12, 35], "tkz": 55, "tkz_graph": [35, 55], "tkz_pictur": 55, "tkz_style": [35, 55], "tl": [38, 49], "tmp_filenam": [35, 38, 56], "tn": 74, "tn2": 74, "tn3": 74, "to_dictionari": [3, 20, 35, 54], "to_digraph": 35, "to_direct": [4, 18, 20, 22, 35, 38], "to_domin": [23, 38], "to_graph6": 56, "to_graphics_arrai": 56, "to_simpl": [35, 38, 48, 66, 67, 71], "to_sparse6": 56, "to_symmetric_funct": 38, "to_undirect": [12, 15, 20, 21, 35, 38, 65, 67, 71], "todo": 8, "togeth": [29, 30, 33, 35, 52, 55], "toggl": 75, "token": 70, "tol": [11, 13, 35, 38], "toler": [30, 32, 52], "tolerancegraph": [30, 32, 52], "tolrep": [30, 52], "tolrep2": [30, 52], "tom": [33, 35, 38, 39, 52, 68], "too": [9, 10, 17, 19, 20, 27, 28, 30, 32, 33, 35, 38, 39, 43, 45, 50, 52, 57, 61, 62, 64, 76], "took": [33, 52], "tooltip": 58, "top": [4, 5, 8, 25, 29, 33, 35, 38, 52, 55, 57], "topolog": [20, 21, 22, 35, 38, 67], "topologi": 38, "topological_minor": [38, 67], "topological_sort": [20, 21], "topological_sort_gener": 20, "toroid": [25, 33, 52], "toroidal6regulargrid2dgraph": [25, 52], "toroidalgrid2dgraph": [25, 52], "toru": [33, 52], "total": [4, 5, 6, 8, 16, 20, 21, 22, 23, 27, 29, 32, 35, 36, 38, 41, 43, 50, 52, 76, 80], "total_vert": 5, "touch": [1, 38, 55], "tour": 35, "tournament": [20, 21, 35], "tournament_": [20, 21], "tournaments_nauti": 21, "toward": [11, 17, 20, 22, 43, 50], "tower": [29, 52], "tqika": 56, "trace": [1, 27, 35, 38, 52], "traceback": [1, 3, 4, 5, 6, 8, 9, 12, 18, 20, 21, 22, 24, 28, 29, 33, 35, 38, 39, 40, 47, 48, 49, 52, 55, 61, 62, 67, 73, 75, 76, 80], "tracer": 35, "track": [4, 19], "tradit": [35, 57], "transform": [3, 29, 32, 35, 36, 38, 39, 52, 75], "transit": [4, 17, 18, 20, 21, 28, 29, 32, 33, 35, 36, 37, 38, 52, 67, 70, 76], "transitive_closur": [17, 20, 35, 36, 67], "transitive_graph": 38, "transitive_reduct": [35, 67], "transitive_reduction_acycl": 36, "transitivetourna": [18, 20, 21, 35], "translat": [4, 10, 22, 35], "transpar": [35, 57], "transplant": 14, "transpos": [1, 35], "transposit": [29, 52], "transvers": [30, 52], "transversal_design": 1, "travel": 35, "traveling_salesman_problem": 35, "travers": [0, 4, 16, 19, 35, 38, 42, 48, 52, 70], "treat": [4, 5, 8, 35, 38, 40], "tree": [0, 3, 4, 8, 9, 11, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 29, 32, 33, 35, 38, 42, 45, 46, 47, 48, 52, 55, 57, 59, 62, 66, 67, 68, 69, 74, 77, 79], "tree1": 46, "tree_decomp": 49, "tree_decomposit": [38, 49], "tree_iter": [29, 52], "tree_orient": [35, 57], "tree_root": [35, 46, 57], "tree_to_graph": 16, "tree_to_nested_tupl": 46, "treeiter": 78, "treelength": [38, 49], "treelength_lowerbound": 49, "treelengthconnect": 49, "treenod": 74, "treewidth": [32, 38, 49, 50, 52, 62], "tri": [4, 20, 32, 36, 38, 39, 43, 46, 50, 52, 62, 81], "triad": 35, "trial": [32, 46, 52], "triangl": [3, 4, 9, 11, 17, 18, 20, 25, 29, 32, 33, 35, 38, 45, 46, 49, 52, 64], "triangle_td": 49, "triangles_count": [9, 11, 35], "triangul": [32, 38, 52, 74, 77], "triangular": [29, 31, 33, 52, 67], "tric": 18, "trick": 11, "triconnect": [18, 38], "triconnectivityspqr": [18, 38], "tricorn": [33, 52, 67], "tricorngraph": [33, 52, 67], "trim": 55, "tripartit": [25, 38, 52], "tripl": [0, 1, 12, 18, 20, 30, 35, 38, 52, 64, 66, 70, 80], "trivial": [1, 18, 19, 20, 22, 29, 35, 38, 52, 66, 67, 69, 71, 76], "true": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "truncat": [28, 29, 33, 52, 67], "truncated_icosidodecahedron": [33, 52], "truncated_tetrahedron": [33, 38, 52], "truncatedbiwheelgraph": [29, 52, 67], "truncatedicosidodecahedralgraph": [33, 52], "truncatedtetrahedralgraph": [33, 52], "truncatedwittgraph": [28, 52], "truth": 62, "try": [4, 12, 19, 20, 29, 32, 35, 36, 38, 39, 40, 41, 45, 52, 59, 68, 69], "tsp": 35, "tt": 38, "tue": [29, 33, 52, 76], "tune": [20, 38], "tunisia": [34, 52], "tup1": 46, "tupl": [1, 5, 8, 12, 18, 20, 21, 28, 29, 30, 32, 33, 35, 38, 40, 42, 46, 52, 55, 59, 60, 67, 71, 72, 76, 77], "tuple_tre": 46, "turan": [29, 52], "turan_13": [25, 52], "turan_graph": [29, 52], "turangraph": [29, 38, 52], "turn": [20, 22, 29, 32, 35, 38, 40, 46, 52, 59, 64, 70, 75], "tur\u00e1n": 38, "tut1947": [38, 66], "tutori": [38, 40], "tutt": [0, 25, 33, 35, 38, 52, 57, 66], "tutte12cag": [33, 52], "tutte_12": [33, 52], "tutte_graph": [33, 52], "tutte_polynomi": [38, 79], "tutte_symmetric_funct": 38, "tuttecoxetergraph": [33, 52], "tuttegraph": [33, 52], "tv": 45, "tw": 49, "tweak": 79, "twenti": [5, 8], "twice": [4, 5, 8, 14, 20, 22, 28, 29, 32, 35, 38, 52, 59], "twinplex": [33, 52, 67], "twinplexgraph": [33, 52, 67], "twist": [25, 29, 52], "two": [1, 2, 3, 4, 9, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 52, 55, 57, 58, 59, 60, 62, 64, 66, 67, 70, 71, 73, 74, 76, 77, 80, 81], "two_factor_petersen": 38, "twograph": [27, 29, 38, 52], "twograph_descend": [29, 38, 52], "twopi": [35, 55, 57], "ty1984": [38, 42, 77], "type": [3, 4, 7, 8, 11, 12, 18, 20, 21, 27, 29, 35, 36, 38, 40, 46, 48, 49, 52, 62, 66, 69, 73, 77, 80], "typeerror": [1, 4, 5, 8, 12, 20, 35, 38, 67], "typeset": 55, "typic": [22, 25, 38, 40, 52, 57], "typo": 59, "u": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 32, 33, 35, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 52, 54, 56, 57, 59, 64, 66, 67, 69, 70, 71, 75, 76, 77, 80], "u0": 38, "u1": 38, "u2": 38, "u3": [38, 59], "u4": 38, "u42graph216": [33, 52], "u42graph540": [33, 52], "u_1": [18, 20, 45], "u_1u_2": 45, "u_1u_2u_3u_4": [38, 81], "u_1u_2u_3u_4u_5": [38, 81], "u_2": [18, 20, 45], "u_2u_3": 45, "u_2u_3u_4u_5": [38, 81], "u_3": [27, 45, 52], "u_4": [33, 45, 52], "u_5": 76, "u_g": 45, "u_h": 45, "u_i": [18, 20, 45], "u_j": [18, 20], "u_v": 50, "u_v_label": 55, "ub": 50, "uci": [38, 70], "ug": [35, 52, 71], "ugagg": 56, "ui": [33, 52], "uint32_t": 11, "uk": 12, "uleth": [33, 52], "ultim": [35, 55], "una": 47, "unabl": [17, 38, 52], "unalign": 73, "unavail": 57, "unbound": [15, 32, 38, 52, 62], "undecid": 70, "under": [4, 27, 29, 35, 52, 58, 70], "underli": [1, 12, 18, 21, 27, 29, 32, 35, 38, 40, 48, 52, 55, 59, 66, 67], "underlying_graph": [38, 48, 79], "understand": [12, 17, 29, 33, 52], "understood": 35, "undirect": [0, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15, 18, 20, 21, 22, 23, 29, 46, 48, 49, 50, 52, 53, 64, 65, 66, 67, 69, 71, 75, 77, 80], "unequ": 76, "unexpect": 35, "unfortun": [3, 33, 52], "unhash": [4, 12, 20, 35, 38, 69], "uniform": [1, 32, 35, 38, 52, 55, 60, 75], "uniformli": [21, 32, 38, 52, 55, 60, 75], "uniformrandomuniform": 60, "unimodular": 62, "uninscrib": 38, "union": [1, 4, 16, 19, 22, 27, 29, 33, 35, 38, 39, 45, 49, 52, 64, 67, 76], "union_find": 75, "union_set": 75, "uniqu": [1, 2, 3, 4, 16, 18, 20, 28, 29, 30, 33, 35, 38, 39, 40, 45, 49, 52, 64, 66, 67, 69, 76], "unique_bound": [38, 69], "uniquerepresent": 62, "uniroma1": 21, "unit": [12, 20, 27, 32, 33, 34, 35, 38, 52, 55], "unit_disk_graph": [32, 52], "unitari": [27, 33, 52, 76], "unitarydualpolargraph": [27, 52, 76], "unitarypolargraph": [27, 52, 76], "unitdisk": 62, "unitinterv": 62, "univers": [1, 35, 38, 40, 76], "unknown": [28, 35, 36, 52, 62, 76], "unlabel": [1, 4, 8, 18, 20, 29, 35, 38, 40, 52, 69], "unlabeled_edg": 79, "unless": [8, 11, 12, 18, 20, 21, 22, 25, 30, 32, 35, 37, 38, 50, 52, 54, 57, 69, 77], "unlik": [33, 38, 52], "unmodifi": 55, "unnumb": [38, 77], "uno": 39, "unpack": 55, "unpickle_graph_backend": 6, "unpredict": [29, 52], "unreach": [35, 52], "unrecogn": 55, "unreli": [18, 35], "unroot": [32, 52], "unsaf": [4, 5, 8, 40], "unsign": 22, "unsort": 38, "unspecifi": [52, 54, 76], "unsupport": 35, "until": [3, 4, 5, 8, 17, 23, 32, 35, 39, 46, 52, 62, 70, 73], "untouch": 38, "unus": [4, 29, 38, 52], "unweight": [3, 13, 19, 20, 21, 22, 35, 38, 71, 75], "up": [20, 21, 22, 24, 27, 29, 30, 35, 36, 38, 40, 46, 52, 55, 57, 60, 68, 73, 77, 78], "up_to_isomorph": 35, "updat": [9, 11, 18, 19, 33, 35, 38, 40, 43, 50, 52, 57, 62, 67, 69, 70, 73, 76, 77, 80], "update_db": 62, "update_match": 67, "upgrad": 38, "upon": [4, 21, 25, 29, 33, 35, 38, 42, 52, 62, 79], "upper": [3, 8, 11, 22, 25, 29, 35, 38, 39, 50, 52, 59], "upper_bound": 50, "upset": [38, 69], "upstream": 47, "upward": [20, 35], "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81], "usa": [34, 52], "usacont": [34, 52], "usag": 52, "usamap": [34, 52], "use_edge_label": [12, 18, 35, 38, 66, 69], "use_multiedg": [35, 71], "use_rec": 24, "use_sage_preambl": 35, "useless": [1, 19, 38, 43, 50, 52, 76], "uselessli": 11, "usepackag": [35, 38, 55], "user": [20, 22, 29, 35, 38, 40, 52, 54, 55, 62, 69, 79], "usetikzlibrari": 35, "usr": 55, "ustimenko": [28, 52], "ustimenkograph": [28, 52], "usual": [4, 8, 11, 12, 17, 20, 22, 25, 29, 33, 35, 38, 39, 49, 52, 62, 76], "util": [33, 52, 55], "uv": [4, 10, 17, 20, 21, 22, 35, 38, 43, 45, 50, 66], "uv_": 35, "uvw": [38, 69], "ux": 45, "v": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 54, 57, 59, 63, 64, 66, 67, 69, 70, 71, 73, 75, 76, 77, 80], "v0": 55, "v1": [8, 35, 55], "v10": 55, "v11": 55, "v12": 55, "v13": 55, "v2": [8, 35, 55], "v3": [35, 55], "v4": 55, "v5": 55, "v6": 55, "v7": 55, "v8": 55, "v9": 55, "v_": [1, 35, 38, 41, 79], "v_0": [27, 52, 70], "v_1": [1, 13, 25, 29, 35, 38, 41, 43, 50, 52, 79], "v_2": [25, 35, 38, 43, 50, 52, 79], "v_3": 79, "v_g": 45, "v_h": [9, 45], "v_i": [1, 13, 29, 35, 38, 41, 43, 45, 50, 52], "v_j": [29, 38, 41, 52], "v_k": [13, 35], "v_m": 38, "v_n": [29, 35, 38, 41, 43, 50, 52, 79], "v_scc": [18, 20], "val": [18, 35], "valenc": [29, 52], "valent": [33, 52], "valicov": 69, "valid": [11, 12, 17, 19, 20, 22, 35, 38, 39, 40, 42, 49, 50, 66, 67, 77], "valu": [1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 17, 18, 20, 21, 22, 25, 27, 28, 29, 30, 32, 33, 35, 38, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 71, 75, 76, 77, 80], "valuat": 35, "value_onli": [12, 18, 19, 20, 23, 35, 38, 39, 66], "valueerror": [3, 4, 8, 9, 12, 18, 20, 21, 22, 25, 29, 33, 35, 38, 39, 42, 48, 49, 52, 55, 61, 62, 66, 67, 69, 73, 76, 77], "van": [15, 28, 52], "vanish": [27, 52], "vanlintschrijvergraph": [28, 52], "var": [14, 35, 38, 52], "vari": [25, 38, 52, 66], "variabl": [3, 4, 5, 8, 10, 11, 12, 13, 17, 20, 22, 23, 25, 29, 35, 38, 39, 43, 50, 52, 55, 58, 62, 66, 67, 68], "variant": [29, 35, 52, 75], "varieti": 52, "variou": [0, 6, 35, 46, 55, 63], "vb": 50, "vc1": 12, "vc2": 12, "vd": 50, "vdash": 38, "vdkt2016": [27, 28, 38, 52], "ve": 37, "vec": 35, "vector": [3, 11, 21, 22, 27, 28, 35, 36, 38, 47, 52, 70], "vectorspac": [27, 35, 52], "veeeeri": [33, 52], "venv": 52, "verbos": [1, 12, 13, 17, 18, 19, 20, 23, 29, 35, 38, 39, 43, 46, 47, 50, 52, 59, 64, 66, 67, 69], "verbose_constraint": [35, 38, 39], "veri": [1, 3, 7, 8, 10, 11, 17, 19, 20, 22, 25, 28, 29, 31, 35, 36, 37, 38, 39, 41, 43, 49, 50, 52, 59, 61, 64, 71, 76], "verifi": [30, 38, 39, 46, 52, 69], "versa": 4, "version": [1, 3, 4, 12, 14, 15, 18, 20, 22, 23, 28, 29, 30, 33, 35, 36, 37, 38, 39, 40, 43, 46, 48, 50, 52, 56, 58, 59, 62, 65, 67, 69, 71, 74, 75, 78], "versu": [33, 52], "vert": [4, 5, 6, 8, 10, 35], "vertex": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 52, 55, 57, 58, 61, 63, 64, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 79, 80], "vertex0": 35, "vertex1": 35, "vertex2": 35, "vertex_attr": [20, 35, 38], "vertex_bound": 35, "vertex_boundari": 35, "vertex_color": [32, 35, 38, 39, 52, 55, 57, 58], "vertex_color_dict": 39, "vertex_connect": [18, 29, 33, 35, 38, 40, 52, 66], "vertex_cov": [12, 35, 38], "vertex_cut": [35, 38, 49], "vertex_dict": 35, "vertex_disjoint_path": 35, "vertex_fill_color": 55, "vertex_graph": [33, 52], "vertex_int": 4, "vertex_isoperimetric_numb": [38, 63], "vertex_iter": [29, 35, 38, 52, 67], "vertex_label": [4, 20, 25, 29, 31, 32, 33, 35, 38, 52, 55, 57, 58, 75], "vertex_label_color": 55, "vertex_label_plac": 55, "vertex_label_shift": 57, "vertex_labels_math": 55, "vertex_list": [3, 11, 22, 35], "vertex_max_degre": 60, "vertex_min_degre": 60, "vertex_opt": 57, "vertex_partit": 58, "vertex_properti": 35, "vertex_s": [25, 29, 31, 32, 33, 35, 38, 52, 55, 56, 57, 58], "vertex_separ": [38, 43, 49, 50], "vertex_separation_bab": 50, "vertex_separation_exp": [43, 50], "vertex_separation_milp": 50, "vertex_shap": [35, 55, 57], "vertex_transit": 40, "vertexord": 79, "vertic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81], "vertices1": 35, "vertices2": [35, 80], "vertices_and_edg": [20, 38, 69], "vertices_in_modul": 46, "vertices_onli": [9, 35], "vertices_rev": 8, "vertices_to_edg": 35, "vi": [33, 52, 76], "via": [4, 18, 21, 27, 30, 35, 37, 38, 39, 46, 48, 52, 55, 63, 66, 70, 75], "vice": 4, "view": [0, 25, 27, 29, 31, 32, 35, 37, 38, 48, 52, 55, 79], "viewer": [29, 35, 52], "viggo": 35, "vii": 76, "vincent": [1, 63], "virtu": 70, "virtual": [18, 38, 49], "virtual_edg": [18, 38], "visibl": [25, 26, 52], "visit": [2, 4, 11, 13, 19, 20, 35, 46, 55, 71], "visual": [17, 25, 29, 30, 33, 35, 52, 58, 75], "vize": 39, "vo": [27, 30, 33, 52, 76], "vol": [20, 38, 63], "volum": [20, 22, 52], "von": [33, 52], "vp": 76, "vpo": 36, "vq": 52, "vs_l": 50, "vse": 50, "vstyle": 55, "vu": [17, 20, 21, 50], "vuqwk": 36, "vv": [17, 64], "vw": [4, 35, 70], "w": [1, 2, 3, 4, 12, 19, 21, 22, 27, 29, 32, 33, 34, 35, 36, 38, 40, 43, 48, 49, 50, 52, 56, 59, 67, 70, 75, 76, 77], "w12": 1, "w_": [33, 52], "w_1": [21, 29, 52, 76], "w_1w_2": 21, "w_2": [21, 76], "w_5": [33, 52], "w_e": [12, 35, 38, 66], "w_i": [29, 35, 52], "w_n": [29, 52], "wa": [4, 21, 29, 30, 33, 35, 38, 48, 49, 52, 59, 77], "wagner": [33, 52, 67], "wagner_graph": [33, 52], "wagnergraph": [33, 52, 67], "wai": [4, 6, 10, 11, 12, 17, 19, 20, 21, 25, 27, 29, 30, 32, 33, 35, 36, 38, 39, 41, 43, 45, 47, 50, 52, 55, 61, 62, 64, 69, 70, 73, 75, 76, 77], "walk": [25, 35, 38, 52, 69, 75], "walker": 35, "wall": [1, 25, 52], "walter": 74, "walther": [33, 52], "want": [1, 4, 5, 8, 9, 18, 19, 22, 29, 35, 36, 38, 39, 52, 58, 61, 68, 73, 76, 81], "warn": [18, 35, 55, 67], "warshal": [3, 20, 22, 35, 38], "warshall_algorithm": 22, "warshall_boost": 35, "warshall_scipi": 35, "wast": [11, 19, 38, 43, 49, 50, 64], "watch": 45, "watkin": [33, 52], "watkins_snark": [33, 52], "watkinssnarkgraph": [33, 52], "watt": [32, 52], "watts_strogatz_graph": [32, 52], "wd": [29, 52], "we": [1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 55, 56, 57, 59, 62, 64, 66, 67, 69, 70, 71, 73, 75, 76, 77, 79, 80, 81], "weak": [1, 18, 19, 35], "weakli": [0, 18, 35, 38], "weakly_chord": 81, "web": [29, 33, 35, 52], "webgl": 35, "websit": [27, 30, 33, 52, 58, 62], "weight": [3, 4, 12, 13, 18, 20, 21, 24, 27, 35, 38, 52, 54, 62, 66, 67, 69, 71, 75, 76, 77], "weight_fn": 35, "weight_funct": [3, 4, 20, 35, 38, 71, 75], "weight_max": 21, "weighted": [35, 38, 69], "weighted_adjacency_matrix": [20, 35, 38], "weisfeil": [29, 52], "well": [2, 4, 5, 10, 11, 18, 19, 25, 28, 29, 32, 33, 35, 38, 49, 52, 55, 57, 59, 64, 73], "wellsgraph": [33, 52], "welsh": [35, 55], "went": 79, "were": [21, 33, 35, 38, 45, 46, 52, 61, 70], "west": 55, "west2001": [29, 52], "what": [17, 18, 19, 20, 22, 29, 33, 35, 38, 39, 40, 45, 47, 52, 55, 58, 62, 64, 70], "whatev": [19, 56], "wheel": [29, 31, 33, 35, 52, 64, 66, 67], "wheel_graph": [29, 52], "wheelgraph": [14, 29, 31, 35, 38, 52, 56, 57, 66, 67], "when": [1, 2, 3, 4, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 52, 53, 54, 55, 56, 57, 59, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81], "whenev": [1, 4, 12, 17, 20, 27, 32, 35, 38, 45, 52, 54, 59, 64, 66, 76], "where": [1, 3, 4, 5, 8, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 56, 59, 63, 64, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 81], "wherea": [38, 66], "wherein": [38, 66, 67], "whether": [1, 3, 4, 5, 6, 8, 9, 10, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81], "whi1932": 64, "which": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 79, 80, 81], "whichev": 12, "while": [3, 4, 7, 11, 12, 13, 17, 19, 20, 21, 22, 23, 24, 25, 27, 29, 33, 35, 38, 39, 40, 42, 45, 47, 49, 52, 55, 57, 60, 61, 64, 67, 69, 79, 80], "white": [33, 35, 52, 55, 57], "who": [35, 39], "whole": [1, 3, 4, 9, 11, 19, 20, 22, 35, 38, 39, 47, 48, 68, 73, 75], "whose": [1, 4, 6, 8, 11, 17, 18, 19, 20, 22, 28, 29, 32, 33, 35, 38, 39, 43, 46, 47, 49, 50, 52, 55, 58, 63, 64, 66, 67, 69, 70, 73, 76], "why": [4, 29, 38, 39, 52], "wide": [38, 55], "widget": 0, "width": [32, 38, 40, 43, 47, 49, 50, 51, 52, 55], "width_of_cut_decomposit": 43, "width_of_path_decomposit": 50, "width_of_tree_decomposit": 49, "wiener": [3, 22, 33, 35, 52], "wiener_index": [3, 22, 35], "wienerarayagraph": [33, 52], "wiki": [25, 52, 58], "wikimedia": [25, 52], "wikipedia": [1, 3, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 32, 33, 35, 38, 39, 45, 49, 52, 61, 64, 65, 66, 69, 70, 71, 75, 77], "wilbrink": [27, 52], "william": [38, 52], "willing": 35, "wilson2008": [29, 52], "win": [29, 33, 52, 76], "windmil": [29, 38, 52], "windmill_graph": [29, 52], "windmillgraph": [29, 38, 42, 52], "window": [29, 52], "wine": [22, 35], "wise": [35, 47], "wish": [35, 64], "with_label": [20, 38], "with_pictur": 40, "within": [1, 11, 32, 35, 41, 52, 55], "without": [4, 5, 6, 8, 12, 16, 18, 20, 22, 24, 25, 27, 29, 35, 36, 38, 42, 46, 48, 52, 55, 61, 64, 66, 67, 71, 76], "witt": [1, 28, 52], "wittdesign": [1, 76], "wl": [29, 52], "wn": 38, "wo": 40, "wolfram": [28, 33, 35, 52], "wolframalpha": 38, "won": 12, "wong": [33, 52], "wong_graph": [33, 52], "wood": 74, "word": [14, 18, 21, 23, 27, 29, 32, 33, 35, 38, 50, 52, 64, 66, 67, 76], "work": [3, 4, 5, 8, 9, 11, 13, 17, 18, 20, 21, 22, 23, 25, 32, 33, 35, 36, 37, 38, 39, 43, 50, 52, 55, 57, 64, 69, 71, 75, 77], "work_on_copi": [23, 38], "world": [0, 32, 52], "world_map": [34, 52], "worldmap": [34, 52], "wors": [30, 37, 52, 59], "worst": [22, 38, 39, 59], "worth": 22, "would": [5, 8, 11, 22, 25, 28, 35, 38, 39, 45, 49, 52, 55, 61, 62, 64, 67, 73], "wrap": [5, 8, 20, 22, 35, 38, 40, 47, 58], "wrapper": [0, 3, 6, 7, 22, 36, 40, 48], "write": [5, 8, 12, 19, 22, 35, 38, 52, 56, 62, 70, 76], "write_": 35, "write_adjlist": 35, "write_dot": 35, "write_edgelist": 35, "write_gexf": 35, "write_gml": 35, "write_graphml": 35, "write_multiline_adjlist": 35, "write_pajek": 35, "write_to_ep": 38, "written": [1, 11, 15, 33, 35, 38, 39, 45, 52, 56, 61, 64, 68, 70], "wrom1986": 78, "wrong": [22, 33, 35, 38, 42, 52, 62, 76, 77], "wurzburg": 4, "wuuhuu": 35, "wv": 70, "ww": 40, "www": [12, 29, 33, 35, 38, 39, 52, 55, 70, 76], "wwwcompendium": 35, "x": [1, 3, 4, 5, 8, 11, 12, 14, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 32, 33, 35, 36, 38, 45, 46, 48, 49, 52, 55, 56, 57, 61, 66, 67, 68, 71, 73, 74, 76, 77, 79, 80], "x1": 49, "x2": 49, "x3": 49, "x_": [38, 39], "x_1": [33, 45, 49, 52], "x_2": [33, 49, 52], "x_3": [33, 52], "x_4": [33, 52], "x_5": [33, 52], "x_g": 38, "x_i": [11, 35, 38, 45, 49], "x_j": 49, "x_k": [45, 49], "x_t": 49, "x_u": 43, "x_v": [43, 50], "x_w": 50, "xb": 32, "xb_g": 38, "xc": 56, "xelatex": 38, "xemhdb": 56, "xg": 38, "xg1": 38, "xg2": 38, "xg3": 38, "xi": [25, 35, 52], "xmax": 35, "xmin": 35, "xml": 62, "xo": [40, 56], "xor": [29, 43, 52], "xre": 35, "xsggwow": 56, "xslice_data": 48, "xslice_seq": 48, "xslice_sequ": 48, "xv": 45, "xw": 40, "xy": [27, 52], "xyz": [18, 33, 35, 36, 38, 52, 69], "y": [1, 4, 20, 22, 25, 27, 29, 32, 33, 35, 38, 48, 52, 55, 57, 66, 74, 79], "y_": 43, "y_v": 50, "yann": [29, 52], "ybfosqitea": 35, "ye": [17, 35, 38], "year": [34, 52], "yellow": [35, 71], "yen": [35, 71], "yen1970": [35, 71], "yen_k_shortest_simple_path": 71, "yet": [11, 14, 17, 20, 24, 28, 35, 38, 41, 52, 58], "yield": [6, 9, 15, 17, 20, 21, 29, 30, 35, 38, 47, 52, 70, 76, 79, 81], "ymax": 35, "ymin": 35, "yo": 40, "yoshimi": [29, 52], "you": [1, 4, 5, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 28, 29, 32, 33, 35, 37, 38, 39, 40, 47, 52, 55, 56, 57, 58, 59, 62, 64, 65, 68, 75, 76, 80], "young": 40, "your": [1, 18, 19, 27, 35, 38, 40, 51, 52, 55, 58], "yre": 35, "yuen": 20, "yuri": [33, 52], "yurko": [21, 29, 52], "z": [19, 20, 27, 29, 33, 35, 36, 38, 40, 43, 48, 50, 52], "z2": 35, "z_": 38, "zero": [4, 8, 12, 21, 22, 28, 33, 35, 38, 40, 52, 55, 67], "zero_flow": 35, "zeta": 38, "zf2012": [29, 52], "zg": 40, "zip": [20, 29, 33, 35, 38, 42, 52, 57, 62], "zokf": 38, "zoom": 58, "zuge": 38, "zz": [12, 25, 35, 38, 52, 79]}, "titles": ["Graph Theory", "Incidence structures (i.e. hypergraphs, i.e. set systems)", "Asteroidal triples", "Interface to run Boost algorithms", "Fast compiled graphs", "Fast dense graphs", "Backends for Sage (di)graphs", "Overview of (di)graph data structures", "Fast sparse graphs", "Static dense graphs", "Static sparse graph backend", "Static sparse graphs", "Bipartite graphs", "Centrality", "Chromatic polynomial", "Interface with Cliquer (clique-related problems)", "Cographs", "Comparability and permutation graphs", "Connectivity related functions", "Convexity properties of graphs", "Directed graphs", "Common digraphs", "Distances/shortest paths between all pairs of vertices", "Domination", "Edge connectivity", "Basic graphs", "Chessboard graphs", "Families of graphs derived from classical geometries over finite fields", "Database of distance regular graphs", "Various families of graphs", "Intersection graphs", "1-skeletons of Platonic solids", "Random graphs", "Various small graphs", "Graphs from the World Map", "Generic graphs (common to directed/undirected)", "GenericGraph Cython functions", "Genus", "Undirected graphs", "Graph coloring", "Graph database", "Bandwidth of undirected graphs", "Decomposition by clique minimal separators", "Cutwidth", "Compact structure for fast operations on less than 32 vertices", "Products of graphs", "Modular Decomposition", "Rank Decompositions of graphs", "Slice decomposition", "Tree decompositions", "Vertex separation", "Graph editor widget", "Common graphs", "Common graphs and digraphs generators (Cython)", "Functions for reading/building graphs/digraphs", "LaTeX options for graphs", "Lists of graphs", "Graph plotting", "Graph plotting in Javascript with d3.js", "Hyperbolicity", "Hypergraph generators", "Independent sets", "ISGCI: Information System on Graph Classes and their Inclusions", "Isoperimetric inequalities", "Line graphs", "Lov\u00e1sz theta-function of graphs", "Matching", "Matching covered graphs", "Matching polynomial", "Orientations", "Partial cubes", "Path enumeration", "Wrapper for Boyer\u2019s (C) planarity algorithm", "PQ-Trees", "Schnyder\u2019s algorithm for straight-line planar embeddings", "Spanning trees", "Database of strongly regular graphs", "Graph traversals", "Generation of trees", "Tutte polynomial", "View classes", "Weakly chordal graphs"], "titleterms": {"": [22, 62, 72, 74], "1": 31, "32": 44, "The": [7, 22, 41, 45], "To": 45, "algorithm": [0, 2, 3, 17, 41, 43, 45, 50, 70, 72, 74], "all": 22, "assign": 41, "asteroid": 2, "author": [43, 50, 62, 69], "backend": [6, 7, 10], "bandwidth": 41, "basic": 25, "between": 22, "bipartit": 12, "boost": 3, "bound": 50, "boyer": 72, "branch": 50, "build": 54, "c": 72, "cartesian": 45, "central": 13, "certif": 17, "cgraph": 7, "cgraphbackend": 7, "chessboard": 26, "chordal": 81, "chromat": 14, "class": [6, 10, 17, 55, 61, 62, 80], "classic": 27, "cliqu": [15, 42], "cliquer": 15, "cograph": 16, "color": 39, "common": [21, 35, 52, 53], "compact": 44, "compar": 17, "compil": 4, "connect": [18, 24], "constructor": 0, "contain": 41, "convex": 19, "cover": 67, "cube": 70, "cutwidth": 43, "cython": [11, 36, 53], "d3": 58, "data": [4, 5, 7, 8, 11], "databas": [0, 28, 38, 40, 76], "decomposit": [42, 46, 47, 48, 49], "definit": [2, 41, 64, 70, 79], "dens": [5, 9], "deriv": 27, "descript": 62, "detail": [11, 17], "develop": 62, "di": [6, 7], "digraph": [21, 53, 54], "direct": [20, 35], "distanc": [22, 28], "do": 45, "domin": 23, "e": 1, "edg": 24, "editor": 51, "embed": 74, "enumer": 71, "exponenti": [43, 50], "famili": [27, 29], "fast": [4, 5, 8, 44], "field": 27, "finit": 27, "follow": 41, "format": 38, "formul": [43, 50], "from": [27, 34], "function": [2, 3, 9, 11, 13, 18, 21, 22, 36, 41, 52, 54, 55, 58, 60, 64, 65, 70, 71, 73, 76, 79], "gener": [35, 38, 53, 60, 78], "genericgraph": 36, "genu": 37, "geometri": 27, "graph": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 19, 20, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 45, 47, 51, 52, 53, 54, 55, 56, 57, 58, 62, 64, 65, 67, 76, 77, 81], "graphlatex": 55, "how": 62, "hyperbol": 59, "hypergraph": [0, 1, 60], "i": [1, 11], "implement": [0, 17], "incid": 1, "inclus": 62, "independ": 61, "index": 9, "indic": 0, "inequ": 63, "inform": 62, "interfac": [3, 15], "intersect": 30, "introduct": [5, 8], "isgci": 62, "isoperimetr": 63, "j": 58, "javascript": 58, "label": 38, "latex": 55, "less": 44, "level": 0, "librari": 0, "line": [64, 74], "list": 56, "lov\u00e1sz": 65, "low": 0, "main": 22, "map": 34, "match": [41, 66, 67, 68], "method": [0, 1, 6, 10, 15, 16, 17, 18, 19, 20, 21, 23, 35, 38, 39, 41, 42, 43, 45, 47, 49, 50, 52, 59, 60, 61, 62, 66, 67, 68, 69, 73, 75, 77, 81], "milp": [43, 50], "minim": 42, "modul": [11, 22, 41], "modular": 46, "mutabl": 38, "object": 0, "observ": 70, "oper": 44, "option": 55, "orient": 69, "over": 27, "overview": 7, "pair": 22, "partial": [41, 70], "path": [22, 71], "permut": 17, "planar": [72, 74], "platon": 31, "plot": [57, 58], "point": 11, "polynomi": [14, 68, 79], "pq": 73, "predefin": 62, "problem": [15, 41, 45], "product": 45, "properti": 19, "python": 11, "random": 32, "rank": 47, "read": 54, "recognit": [17, 45, 62, 70], "regular": [28, 76], "relat": [15, 18], "root": 64, "run": 3, "sage": [6, 62], "satisfi": 41, "schnyder": 74, "separ": [42, 50], "set": [1, 61], "shortest": 22, "skeleton": 31, "slice": 48, "small": 33, "solid": 31, "solv": 41, "span": 75, "spars": [8, 10, 11], "static": [9, 10, 11], "straight": 74, "strongli": 76, "structur": [1, 4, 5, 7, 8, 11, 44], "support": 38, "system": [1, 62], "tabl": 0, "technic": 11, "than": 44, "theori": 0, "theta": 65, "thi": [11, 41], "todo": [15, 24, 29, 33, 35, 38, 40, 52, 58, 59, 62, 67, 68, 75, 76, 80], "travers": 77, "tree": [49, 73, 75, 78], "tripl": 2, "tutt": 79, "two": 10, "underli": [5, 8], "undirect": [35, 38, 41], "us": [11, 62], "usag": [5, 8], "variou": [29, 33], "version": 55, "vertex": 50, "vertic": [22, 44], "view": [62, 80], "visual": 38, "weakli": 81, "what": 11, "widget": 51, "world": 34, "wrapper": 72}})